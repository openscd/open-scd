{"version":3,"file":"open-event.js","sourceRoot":"","sources":["../../../foundation/deprecated/open-event.ts"],"names":[],"mappings":"AAOA,MAAM,UAAU,eAAe,CAC7B,GAAgB,EAChB,OAAe,EACf,aAAuD;IAEvD,OAAO,IAAI,WAAW,CAAgB,UAAU,EAAE;QAChD,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,GAAG,aAAa;QAChB,MAAM,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,EAAE;KACnD,CAAC,CAAC;AACL,CAAC","sourcesContent":["/** Represents a document to be opened. */\nexport interface OpenDocDetail {\n  doc: XMLDocument;\n  docName: string;\n  docId?: string;\n}\nexport type OpenDocEvent = CustomEvent<OpenDocDetail>;\nexport function newOpenDocEvent(\n  doc: XMLDocument,\n  docName: string,\n  eventInitDict?: CustomEventInit<Partial<OpenDocDetail>>\n): OpenDocEvent {\n  return new CustomEvent<OpenDocDetail>('open-doc', {\n    bubbles: true,\n    composed: true,\n    ...eventInitDict,\n    detail: { doc, docName, ...eventInitDict?.detail },\n  });\n}\n\ndeclare global {\n    interface ElementEventMap {\n      ['open-doc']: OpenDocEvent;\n    }\n  }"]}