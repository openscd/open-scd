{"version":3,"file":"editor.js","sourceRoot":"","sources":["../../../foundation/deprecated/editor.ts"],"names":[],"mappings":"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","sourcesContent":["/** Inserts `new.element` to `new.parent` before `new.reference`. */\nexport interface Create {\n  new: { parent: Node; element: Node; reference?: Node | null };\n  derived?: boolean;\n  checkValidity?: () => boolean;\n}\n/** Removes `old.element` from `old.parent` before `old.reference`. */\nexport interface Delete {\n  old: { parent: Node; element: Node; reference?: Node | null };\n  derived?: boolean;\n  checkValidity?: () => boolean;\n}\n/** Reparents of `old.element` to `new.parent` before `new.reference`. */\nexport interface Move {\n  old: { parent: Element; element: Element; reference?: Node | null };\n  new: { parent: Element; reference?: Node | null };\n  derived?: boolean;\n  checkValidity?: () => boolean;\n}\n/** Replaces `old.element` with `new.element`, keeping element children. */\nexport interface Replace {\n  old: { element: Element };\n  new: { element: Element };\n  derived?: boolean;\n  checkValidity?: () => boolean;\n}\n/** Swaps `element`s `oldAttributes` with `newAttributes` */\nexport interface Update {\n  element: Element;\n  oldAttributes: Record<string, string | null>;\n  newAttributes: Record<string, string | null>;\n  derived?: boolean;\n  checkValidity?: () => boolean;\n}\n\nexport type SimpleAction = Update | Create | Replace | Delete | Move;\nexport type ComplexAction = {\n  actions: SimpleAction[];\n  title: string;\n  derived?: boolean;\n};\n/** Represents an intended or committed change to some `Element`. */\nexport type EditorAction = SimpleAction | ComplexAction;\n\nexport function isCreate(action: EditorAction): action is Create {\n  return (\n    (action as Replace).old === undefined &&\n    (action as Create).new?.parent !== undefined &&\n    (action as Create).new?.element !== undefined\n  );\n}\nexport function isDelete(action: EditorAction): action is Delete {\n  return (\n    (action as Delete).old?.parent !== undefined &&\n    (action as Delete).old?.element !== undefined &&\n    (action as Replace).new === undefined\n  );\n}\nexport function isMove(action: EditorAction): action is Move {\n  return (\n    (action as Move).old?.parent !== undefined &&\n    (action as Move).old?.element !== undefined &&\n    (action as Move).new?.parent !== undefined &&\n    (action as Replace).new?.element == undefined\n  );\n}\nexport function isReplace(action: EditorAction): action is Replace {\n  return (\n    (action as Move).old?.parent === undefined &&\n    (action as Replace).old?.element !== undefined &&\n    (action as Move).new?.parent === undefined &&\n    (action as Replace).new?.element !== undefined\n  );\n}\nexport function isUpdate(action: EditorAction): action is Update {\n  return (\n    (action as Replace).old === undefined &&\n    (action as Replace).new === undefined &&\n    (action as Update).element !== undefined &&\n    (action as Update).newAttributes !== undefined &&\n    (action as Update).oldAttributes !== undefined\n  );\n}\nexport function isSimple(action: EditorAction): action is SimpleAction {\n  return !((<ComplexAction>action).actions instanceof Array);\n}\n\n//** return `Update` action for `element` adding `oldAttributes` */\nexport function createUpdateAction(\n  element: Element,\n  newAttributes: Record<string, string | null>\n): Update {\n  const oldAttributes: Record<string, string | null> = {};\n  Array.from(element.attributes).forEach(attr => {\n    oldAttributes[attr.name] = attr.value;\n  });\n\n  return { element, oldAttributes, newAttributes };\n}\n\n/** Throws an error bearing `message`, never returning. */\nexport function unreachable(message: string): never {\n  throw new Error(message);\n}\n\n/** @returns an [[`EditorAction`]] with opposite effect of `action`. */\nexport function invert(action: EditorAction): EditorAction {\n  if (!isSimple(action)) {\n    const inverse: ComplexAction = {\n      title: action.title,\n      derived: action.derived,\n      actions: [],\n    };\n    action.actions.forEach(element =>\n      inverse.actions.unshift(<SimpleAction>invert(element))\n    );\n    return inverse;\n  }\n\n  const metaData = {\n    derived: action.derived,\n    checkValidity: action.checkValidity,\n  };\n  if (isCreate(action)) return { old: action.new, ...metaData };\n  else if (isDelete(action)) return { new: action.old, ...metaData };\n  else if (isMove(action))\n    return {\n      old: {\n        parent: action.new.parent,\n        element: action.old.element,\n        reference: action.new.reference,\n      },\n      new: { parent: action.old.parent, reference: action.old.reference },\n      ...metaData,\n    };\n  else if (isReplace(action))\n    return { new: action.old, old: action.new, ...metaData };\n  else if (isUpdate(action))\n    return {\n      element: action.element,\n      oldAttributes: action.newAttributes,\n      newAttributes: action.oldAttributes,\n      ...metaData,\n    };\n  else return unreachable('Unknown EditorAction type in invert.');\n}\n\n/** Represents some intended modification of a `Document` being edited. */\nexport interface EditorActionDetail<T extends EditorAction> {\n  action: T;\n}\nexport type EditorActionEvent<T extends EditorAction> = CustomEvent<\n  EditorActionDetail<T>\n>;\n\nexport function newActionEvent<T extends EditorAction>(\n  action: T,\n  eventInitDict?: CustomEventInit<Partial<EditorActionDetail<T>>>\n): EditorActionEvent<T> {\n  return new CustomEvent<EditorActionDetail<T>>('editor-action', {\n    bubbles: true,\n    composed: true,\n    ...eventInitDict,\n    detail: { action, ...eventInitDict?.detail },\n  });\n}\n\n\ndeclare global {\n    interface ElementEventMap {\n      ['editor-action']: EditorActionEvent<EditorAction>;\n    }\n  }\n  "]}