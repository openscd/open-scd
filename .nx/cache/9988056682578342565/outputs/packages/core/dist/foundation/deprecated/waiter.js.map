{"version":3,"file":"waiter.js","sourceRoot":"","sources":["../../../foundation/deprecated/waiter.ts"],"names":[],"mappings":"AAMA;;GAEG;AACH,MAAM,UAAU,oBAAoB,CAClC,OAAsB,EACtB,aAA4D;IAE5D,OAAO,IAAI,WAAW,CAAqB,eAAe,EAAE;QAC1D,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,GAAG,aAAa;QAChB,MAAM,EAAE,EAAE,OAAO,EAAE,GAAG,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,EAAE;KAC9C,CAAC,CAAC;AACL,CAAC","sourcesContent":["/** Represents some work pending completion, upon which `promise` resolves. */\nexport interface PendingStateDetail {\n  promise: Promise<void>;\n}\nexport type PendingStateEvent = CustomEvent<PendingStateDetail>;\n\n/**\n * @deprecated\n */\nexport function newPendingStateEvent(\n  promise: Promise<void>,\n  eventInitDict?: CustomEventInit<Partial<PendingStateDetail>>\n): PendingStateEvent {\n  return new CustomEvent<PendingStateDetail>('pending-state', {\n    bubbles: true,\n    composed: true,\n    ...eventInitDict,\n    detail: { promise, ...eventInitDict?.detail },\n  });\n}\n\ndeclare global {\n  interface ElementEventMap {\n    ['pending-state']: PendingStateEvent;\n  }\n}\n"]}