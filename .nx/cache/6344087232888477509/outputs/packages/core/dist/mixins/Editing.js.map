{"version":3,"file":"Editing.js","sourceRoot":"","sources":["../../mixins/Editing.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement } from 'lit';\n\nimport { property, state } from 'lit/decorators.js';\n\nimport {\n  AttributeValue,\n  Edit,\n  EditEvent,\n  Insert,\n  isComplex,\n  isInsert,\n  isNamespaced,\n  isRemove,\n  isUpdate,\n  LitElementConstructor,\n  OpenEvent,\n  Remove,\n  Update,\n} from '../foundation.js';\n\nfunction localAttributeName(attribute: string): string {\n  return attribute.includes(':') ? attribute.split(':', 2)[1] : attribute;\n}\n\nfunction handleInsert({\n  parent,\n  node,\n  reference,\n}: Insert): Insert | Remove | [] {\n  try {\n    const { parentNode, nextSibling } = node;\n    parent.insertBefore(node, reference);\n    if (parentNode)\n      return {\n        node,\n        parent: parentNode,\n        reference: nextSibling,\n      };\n    return { node };\n  } catch (e) {\n    // do nothing if insert doesn't work on these nodes\n    return [];\n  }\n}\n\nfunction handleUpdate({ element, attributes }: Update): Update {\n  const oldAttributes = { ...attributes };\n  Object.entries(attributes)\n    .reverse()\n    .forEach(([name, value]) => {\n      let oldAttribute: AttributeValue;\n      if (isNamespaced(value!))\n        oldAttribute = {\n          value: element.getAttributeNS(\n            value.namespaceURI,\n            localAttributeName(name)\n          ),\n          namespaceURI: value.namespaceURI,\n        };\n      else\n        oldAttribute = element.getAttributeNode(name)?.namespaceURI\n          ? {\n              value: element.getAttribute(name),\n              namespaceURI: element.getAttributeNode(name)!.namespaceURI!,\n            }\n          : element.getAttribute(name);\n      oldAttributes[name] = oldAttribute;\n    });\n  for (const entry of Object.entries(attributes)) {\n    try {\n      const [attribute, value] = entry as [string, AttributeValue];\n      if (isNamespaced(value)) {\n        if (value.value === null)\n          element.removeAttributeNS(\n            value.namespaceURI,\n            localAttributeName(attribute)\n          );\n        else element.setAttributeNS(value.namespaceURI, attribute, value.value);\n      } else if (value === null) element.removeAttribute(attribute);\n      else element.setAttribute(attribute, value);\n    } catch (e) {\n      // do nothing if update doesn't work on this attribute\n      delete oldAttributes[entry[0]];\n    }\n  }\n  return {\n    element,\n    attributes: oldAttributes,\n  };\n}\n\nfunction handleRemove({ node }: Remove): Insert | [] {\n  const { parentNode: parent, nextSibling: reference } = node;\n  node.parentNode?.removeChild(node);\n  if (parent)\n    return {\n      node,\n      parent,\n      reference,\n    };\n  return [];\n}\n\nfunction handleEdit(edit: Edit): Edit {\n  if (isInsert(edit)) return handleInsert(edit);\n  if (isUpdate(edit)) return handleUpdate(edit);\n  if (isRemove(edit)) return handleRemove(edit);\n  if (isComplex(edit)) return edit.map(handleEdit).reverse();\n  return [];\n}\n\nexport type LogEntry = { undo: Edit; redo: Edit };\n\nexport interface EditingMixin {\n  doc: XMLDocument;\n  history: LogEntry[];\n  editCount: number;\n  last: number;\n  canUndo: boolean;\n  canRedo: boolean;\n  docs: Record<string, XMLDocument>;\n  docName: string;\n  handleOpenDoc(evt: OpenEvent): void;\n  handleEditEvent(evt: EditEvent): void;\n  undo(n?: number): void;\n  redo(n?: number): void;\n}\n\ntype ReturnConstructor = new (...args: any[]) => LitElement & EditingMixin;\n\n/** A mixin for editing a set of [[docs]] using [[EditEvent]]s */\nexport function Editing<TBase extends LitElementConstructor>(\n  Base: TBase\n): TBase & ReturnConstructor {\n  class EditingElement extends Base {\n    @state()\n    /** The `XMLDocument` currently being edited */\n    get doc(): XMLDocument {\n      return this.docs[this.docName];\n    }\n\n    @state()\n    history: LogEntry[] = [];\n\n    @state()\n    editCount: number = 0;\n\n    @state()\n    get last(): number {\n      return this.editCount - 1;\n    }\n\n    @state()\n    get canUndo(): boolean {\n      return this.last >= 0;\n    }\n\n    @state()\n    get canRedo(): boolean {\n      return this.editCount < this.history.length;\n    }\n\n    /**\n     * The set of `XMLDocument`s currently loaded\n     *\n     * @prop {Record} docs - Record of loaded XML documents\n     */\n    @state()\n    docs: Record<string, XMLDocument> = {};\n\n    /**\n     * The name of the [[`doc`]] currently being edited\n     *\n     * @prop {String} docName - name of the document that is currently being edited\n     */\n    @property({ type: String, reflect: true }) docName = '';\n\n    handleOpenDoc({ detail: { docName, doc } }: OpenEvent) {\n      this.docName = docName;\n      this.docs[this.docName] = doc;\n    }\n\n    handleEditEvent(event: EditEvent) {\n      const edit = event.detail;\n      this.history.splice(this.editCount);\n      this.history.push({ undo: handleEdit(edit), redo: edit });\n      this.editCount += 1;\n    }\n\n    /** Undo the last `n` [[Edit]]s committed */\n    undo(n = 1) {\n      if (!this.canUndo || n < 1) return;\n      handleEdit(this.history[this.last!].undo);\n      this.editCount -= 1;\n      if (n > 1) this.undo(n - 1);\n    }\n\n    /** Redo the last `n` [[Edit]]s that have been undone */\n    redo(n = 1) {\n      if (!this.canRedo || n < 1) return;\n      handleEdit(this.history[this.editCount].redo);\n      this.editCount += 1;\n      if (n > 1) this.redo(n - 1);\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.addEventListener('oscd-open', this.handleOpenDoc);\n      this.addEventListener('oscd-edit', event => this.handleEditEvent(event));\n    }\n  }\n  return EditingElement;\n}\n"]}