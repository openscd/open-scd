{"version":3,"file":"open-scd.spec.js","sourceRoot":"","sources":["../open-scd.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { elementUpdated, expect } from '@open-wc/testing';\n\nimport './open-scd.js';\nimport type { OpenSCD } from './open-scd.js';\n\nimport { newEditEvent, newOpenEvent } from './foundation.js';\n\nfunction isOscdPlugin(tag: string): boolean {\n  return tag.toLocaleLowerCase().startsWith('oscd-p');\n}\n\nconst doc = new DOMParser().parseFromString(\n  `<testdoc></testdoc>`,\n  'application/xml'\n);\n\nlet editor: OpenSCD;\nbeforeEach(() => {\n  editor = document.createElement('open-scd');\n  document.body.prepend(editor);\n});\n\nafterEach(() => {\n  editor.remove();\n});\n\ndescribe('with editor plugins loaded', () => {\n  beforeEach(async () => {\n    editor.plugins = {\n      menu: [],\n      editor: [\n        {\n          name: 'Test Editor Plugin',\n          translations: { de: 'Test Editor Erweiterung' },\n          src: 'data:text/javascript;charset=utf-8,export%20default%20class%20TestEditorPlugin%20extends%20HTMLElement%20%7B%0D%0A%20%20constructor%20%28%29%20%7B%20super%28%29%3B%20this.innerHTML%20%3D%20%60%3Cp%3ETest%20Editor%20Plugin%3C%2Fp%3E%60%3B%20%7D%0D%0A%7D',\n          icon: 'edit',\n          active: true,\n          requireDoc: false,\n        },\n      ],\n    };\n    await editor.updateComplete;\n  });\n\n  it('passes attribute locale', async () => {\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n    expect(plugin?.tagName).to.exist.and.to.satisfy(isOscdPlugin);\n  });\n\n  it('passes attribute docName', async () => {\n    editor.dispatchEvent(newOpenEvent(doc, 'test.xml'));\n    await editor.updateComplete;\n\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n    expect(plugin?.tagName).to.exist.and.to.satisfy(isOscdPlugin);\n    expect(plugin).to.have.property('docName', 'test.xml');\n  });\n\n  it('passes property doc', async () => {\n    editor.dispatchEvent(newOpenEvent(doc, 'test.xml'));\n    await editor.updateComplete;\n\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n    expect(plugin).to.have.property('docs');\n  });\n\n  it('passes property editCount', async () => {\n    editor.dispatchEvent(newOpenEvent(doc, 'test.xml'));\n    await editor.updateComplete;\n\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n    expect(plugin).to.have.property('editCount', 0);\n  });\n\n  it('updated passed editCount property on edit events', async () => {\n    editor.dispatchEvent(newOpenEvent(doc, 'test.xml'));\n    await editor.updateComplete;\n\n    editor.dispatchEvent(\n      newEditEvent({\n        element: doc.querySelector('testdoc')!,\n        attributes: { name: 'someName' },\n      })\n    );\n    await editor.updateComplete;\n\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n    expect(plugin).to.have.property('editCount', 1);\n  });\n});\n\ndescribe('with menu plugins loaded', () => {\n  beforeEach(async () => {\n    editor.plugins = {\n      menu: [\n        {\n          name: 'Test Menu Plugin',\n          translations: { de: 'Test Menü Erweiterung' },\n          src: 'data:text/javascript;charset=utf-8,export%20default%20class%20TestPlugin%20extends%20HTMLElement%20%7B%0D%0A%20%20async%20run%28%29%20%7B%0D%0A%20%20%20%20return%20false%3B%0D%0A%20%20%7D%0D%0A%7D',\n          icon: 'android',\n          active: true,\n          requireDoc: true,\n        },\n      ],\n    };\n    await editor.updateComplete;\n  });\n\n  it('passes attribute locale', async () => {\n    await editor.updateComplete;\n\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n\n    expect(plugin?.tagName).to.exist.and.to.satisfy(isOscdPlugin);\n\n    expect(plugin).to.have.property('locale', 'en');\n  });\n\n  it('passes attribute docName', async () => {\n    editor.dispatchEvent(newOpenEvent(doc, 'test.xml'));\n    await editor.updateComplete;\n\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n    expect(plugin?.tagName).to.exist.and.to.satisfy(isOscdPlugin);\n    expect(plugin).to.have.property('docName', 'test.xml');\n  });\n\n  it('passes property doc', async () => {\n    editor.dispatchEvent(newOpenEvent(doc, 'test.xml'));\n    await editor.updateComplete;\n\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n    expect(plugin).to.have.property('docs');\n  });\n\n  it('passes property editCount', async () => {\n    editor.dispatchEvent(newOpenEvent(doc, 'test.xml'));\n    await editor.updateComplete;\n\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n    expect(plugin).to.have.property('editCount', 0);\n  });\n\n  it('updated passed editCount property on edit events', async () => {\n    editor.dispatchEvent(newOpenEvent(doc, 'test.xml'));\n    await editor.updateComplete;\n\n    editor.dispatchEvent(\n      newEditEvent({\n        element: doc.querySelector('testdoc')!,\n        attributes: { name: 'someName' },\n      })\n    );\n    await editor.updateComplete;\n\n    const plugin: Element = Array.from(\n      editor.shadowRoot?.querySelectorAll('*') || []\n    ).find(e => isOscdPlugin(e.tagName))!;\n\n    await elementUpdated(plugin);\n\n    expect(plugin).to.have.property('editCount', 1);\n  });\n});\n"]}