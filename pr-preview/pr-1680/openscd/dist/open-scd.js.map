{"version":3,"file":"open-scd.js","sourceRoot":"","sources":["../src/open-scd.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  customElement,\n  html,\n  LitElement,\n  property,\n  state,\n  TemplateResult,\n} from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\n\nimport '@material/mwc-icon';\nimport '@material/mwc-icon-button';\nimport '@material/mwc-linear-progress';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-list-item';\nimport '@material/mwc-tab';\nimport '@material/mwc-tab-bar';\nimport '@material/mwc-top-app-bar-fixed';\nimport '@material/mwc-drawer';\nimport '@material/mwc-button';\nimport '@material/mwc-dialog';\nimport '@material/mwc-formfield';\nimport '@material/mwc-list/mwc-check-list-item';\nimport '@material/mwc-list/mwc-radio-list-item';\nimport '@material/mwc-select';\nimport '@material/mwc-switch';\nimport '@material/mwc-textfield';\n\nimport { newOpenDocEvent } from '@openscd/core/foundation/deprecated/open-event.js';\nimport { newPendingStateEvent } from '@openscd/core/foundation/deprecated/waiter.js';\n\nimport './addons/Settings.js';\nimport './addons/Waiter.js';\nimport './addons/Wizards.js';\nimport './addons/Editor.js';\nimport './addons/History.js';\nimport './addons/Layout.js';\n\nimport { ActionDetail } from '@material/mwc-list';\n\nimport { officialPlugins as builtinPlugins } from './plugins.js';\nimport { initializeNsdoc, Nsdoc } from './foundation/nsdoc.js';\nimport type {\n  PluginSet,\n  Plugin as CorePlugin,\n  EditCompletedEvent,\n} from '@openscd/core';\n\nimport { HistoryState, historyStateEvent } from './addons/History.js';\n\nimport { InstalledOfficialPlugin, MenuPosition, PluginKind, Plugin } from \"./plugin.js\"\nimport { ConfigurePluginEvent, ConfigurePluginDetail, newConfigurePluginEvent } from './plugin.events.js';\nimport { newLogEvent } from '@openscd/core/foundation/deprecated/history';\n\n\n\n/** The `<open-scd>` custom element is the main entry point of the\n * Open Substation Configuration Designer. */\n@customElement('open-scd')\nexport class OpenSCD extends LitElement {\n\n  render(): TemplateResult {\n    return html`<oscd-waiter>\n      <oscd-settings .host=${this}>\n        <oscd-wizards .host=${this}>\n          <oscd-history .host=${this} .editCount=${this.historyState.editCount}>\n            <oscd-editor\n              .doc=${this.doc}\n              .docName=${this.docName}\n              .docId=${this.docId}\n              .host=${this}\n              .editCount=${this.historyState.editCount}\n            >\n              <oscd-layout\n                @add-external-plugin=${this.handleAddExternalPlugin}\n                @oscd-configure-plugin=${this.handleConfigurationPluginEvent}\n                @set-plugins=${ (e: SetPluginsEvent) => this.setPlugins(e.detail.selectedPlugins) }\n                .host=${this}\n                .doc=${this.doc}\n                .docName=${this.docName}\n                .editCount=${this.historyState.editCount}\n                .historyState=${this.historyState}\n                .plugins=${this.storedPlugins}\n              >\n              </oscd-layout>\n            </oscd-editor>\n          </oscd-history>\n        </oscd-wizards>\n      </oscd-settings>\n    </oscd-waiter>`;\n  }\n\n\n  @property({ attribute: false })\n  doc: XMLDocument | null = null;\n  /** The name of the current [[`doc`]] */\n  @property({ type: String }) docName = '';\n  /** The UUID of the current [[`doc`]] */\n  @property({ type: String }) docId = '';\n\n  @state()\n  historyState: HistoryState = {\n    editCount: -1,\n    canRedo: false,\n    canUndo: false,\n  }\n\n  /** Object containing all *.nsdoc files and a function extracting element's label form them*/\n  @property({ attribute: false })\n  nsdoc: Nsdoc = initializeNsdoc();\n\n  private currentSrc = '';\n  /** The current file's URL. `blob:` URLs are *revoked after parsing*! */\n  @property({ type: String })\n  get src(): string {\n    return this.currentSrc;\n  }\n\n  set src(value: string) {\n    this.currentSrc = value;\n    this.dispatchEvent(newPendingStateEvent(this.loadDoc(value)));\n  }\n\n  @state() private storedPlugins: Plugin[] = [];\n\n  /** Loads and parses an `XMLDocument` after [[`src`]] has changed. */\n  private async loadDoc(src: string): Promise<void> {\n    const response = await fetch(src);\n    const text = await response.text();\n    if (!text) return;\n\n    const doc = new DOMParser().parseFromString(text, 'application/xml');\n    const docName = src;\n    this.dispatchEvent(newOpenDocEvent(doc, docName));\n\n    if (src.startsWith('blob:')) URL.revokeObjectURL(src);\n  }\n\n  /**\n   *\n   * @deprecated Use `handleConfigurationPluginEvent` instead\n   */\n  public handleAddExternalPlugin(e: AddExternalPluginEvent){\n    this.addExternalPlugin(e.detail.plugin);\n    const {name, kind} = e.detail.plugin\n\n    const event = newConfigurePluginEvent(name,kind, e.detail.plugin)\n\n    this.handleConfigurationPluginEvent(event)\n  }\n\n\n  public handleConfigurationPluginEvent(e: ConfigurePluginEvent){\n    const { name, kind, config } = e.detail;\n\n    const hasPlugin = this.hasPlugin(name, kind);\n    const hasConfig = config !== null;\n    const isChangeEvent = hasPlugin && hasConfig;\n    const isRemoveEvent = hasPlugin && !hasConfig;\n    const isAddEvent = !hasPlugin && hasConfig;\n\n    // the `&& config`is only because typescript\n    // cannot infer that `isChangeEvent` and `isAddEvent` implies `config !== null`\n    if(isChangeEvent && config){\n      this.changePlugin(config);\n\n    }else if(isRemoveEvent){\n      this.removePlugin(name, kind);\n\n    }else if(isAddEvent && config){\n      this.addPlugin(config);\n\n    }else{\n      const event = newLogEvent({\n        kind: \"error\",\n        title: \"Invalid plugin configuration event\",\n        message: JSON.stringify({name, kind, config}),\n      });\n      this.dispatchEvent(event);\n    }\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.loadPlugins()\n\n    // TODO: let Lit handle the event listeners, move to render()\n    this.addEventListener('reset-plugins', this.resetPlugins);\n    this.addEventListener(historyStateEvent, (e: CustomEvent<HistoryState>) => {\n      this.historyState = e.detail;\n      this.requestUpdate();\n    });\n  }\n\n\n  /**\n   *\n   * @param name\n   * @param kind\n   * @returns the index of the plugin in the stored plugin list\n   */\n  private findPluginIndex(name: string, kind: PluginKind): number {\n    return this.storedPlugins.findIndex(p => p.name === name && p.kind === kind);\n  }\n\n  private hasPlugin(name: string, kind: PluginKind): boolean {\n    return this.findPluginIndex(name, kind) > -1;\n  }\n\n  private removePlugin(name: string, kind: PluginKind) {\n    const newPlugins = this.storedPlugins.filter(\n      p => p.name !== name || p.kind !== kind\n    );\n    this.updateStoredPlugins(newPlugins);\n  }\n\n  private addPlugin(plugin: Plugin) {\n    const newPlugins = [...this.storedPlugins, plugin];\n    this.updateStoredPlugins(newPlugins);\n  }\n\n  /**\n   *\n   * @param plugin\n   * @throws if the plugin is not found\n   */\n  private changePlugin(plugin: Plugin) {\n    const storedPlugins = this.storedPlugins;\n    const {name, kind} = plugin;\n    const pluginIndex = this.findPluginIndex(name, kind);\n\n    if(pluginIndex < 0) {\n      const event = newLogEvent({\n        kind: \"error\",\n        title: \"Plugin not found, stopping change process\",\n        message: JSON.stringify({name, kind}),\n      })\n      this.dispatchEvent(event);\n      return;\n    }\n\n    const pluginToChange = storedPlugins[pluginIndex]\n    const changedPlugin = {...pluginToChange, ...plugin}\n    const newPlugins = [...storedPlugins]\n    newPlugins.splice(pluginIndex, 1, changedPlugin)\n\n    // this.storePlugins(newPlugins);\n    this.updateStoredPlugins(newPlugins);\n  }\n\n  private resetPlugins(): void {\n    const builtInPlugins = this.getBuiltInPlugins()\n    const allPlugins = [...builtInPlugins, ...this.parsedPlugins]\n\n    const newPluginConfigs = allPlugins.map(plugin => {\n      return {\n        ...plugin,\n        active: plugin.activeByDefault ?? false,\n      }\n    })\n\n    this.storePlugins(newPluginConfigs)\n  }\n\n  /**\n   * @prop {PluginSet} plugins - Set of plugins that are used by OpenSCD\n   */\n  @property({ type: Object }) plugins: PluginSet = { menu: [], editor: [] };\n  get parsedPlugins(): Plugin[] {\n    const menuPlugins: Plugin[] = this.plugins.menu.map((plugin) => {\n      let newPosition: MenuPosition | undefined = plugin.position as MenuPosition;\n      if(typeof plugin.position === 'number') {\n        newPosition = undefined\n      }\n\n      return {\n          ...plugin,\n          position: newPosition,\n          kind: 'menu' as PluginKind,\n          active: plugin.active ?? false,\n        }\n      })\n\n    const editorPlugins: Plugin[] = this.plugins.editor.map((plugin) => {\n      const editorPlugin: Plugin = {\n        ...plugin,\n        position: undefined,\n        kind: 'editor' as PluginKind,\n        active: plugin.active ?? false,\n      }\n      return editorPlugin\n    })\n\n    const allPlugnis = [...menuPlugins, ...editorPlugins]\n    return allPlugnis\n  }\n\n\n\n  private updateStoredPlugins(newPlugins: Plugin[]) {\n    //\n    // Generate content of each plugin\n    //\n    const plugins = newPlugins.map(plugin => {\n      const isInstalled = plugin.src && plugin.active\n      if(!isInstalled) { return plugin }\n\n      return this.addContent(plugin)\n    })\n\n    //\n    // Merge built-in plugins\n    //\n    const mergedPlugins = plugins.map(plugin => {\n      const isBuiltIn = !plugin?.official\n      if (!isBuiltIn){ return plugin };\n\n      const builtInPlugin = [...this.getBuiltInPlugins(), ...this.parsedPlugins]\n        .find(p => p.src === plugin.src);\n\n        return <Plugin>{\n          ...builtInPlugin,\n          ...plugin,\n        };\n    })\n    this.storePlugins(mergedPlugins);\n  }\n\n  private storePlugins(plugins: Plugin[]) {\n    this.storedPlugins = plugins\n    const pluginConfigs = JSON.stringify(plugins.map(withoutContent))\n    localStorage.setItem('plugins', pluginConfigs);\n  }\n  private getPluginConfigsFromLocalStorage(): Plugin[] {\n    const pluginsConfigStr = localStorage.getItem('plugins') ?? '[]'\n    return JSON.parse(pluginsConfigStr) as Plugin[]\n  }\n\n\n  protected get locale(): string {\n    return navigator.language || 'en-US';\n  }\n\n  get docs(): Record<string, XMLDocument> {\n    const docs: Record<string, XMLDocument> = {};\n\n    if (this.doc) {\n      docs[this.docName] = this.doc;\n    }\n\n    return docs;\n  }\n\n  private setPlugins(selectedPlugins: Plugin[]) {\n\n    const newPlugins: Plugin[] = this.storedPlugins.map((storedPlugin) => {\n      const isSelected = selectedPlugins.some( (selectedPlugin) => {\n        return selectedPlugin.name === storedPlugin.name\n            && selectedPlugin.src === storedPlugin.src\n      })\n      return {\n        ...storedPlugin,\n        active: isSelected\n      }\n    })\n\n    this.updateStoredPlugins(newPlugins);\n  }\n\n  private loadPlugins(){\n    const localPluginConfigs = this.getPluginConfigsFromLocalStorage()\n\n    const overwritesOfBultInPlugins = localPluginConfigs.filter((p) => {\n      return this.getBuiltInPlugins().some(b => b.src === p.src)\n    })\n\n    const userInstalledPlugins = localPluginConfigs.filter((p) => {\n      return !this.getBuiltInPlugins().some(b => b.src === p.src)\n    })\n    const mergedBuiltInPlugins = this.getBuiltInPlugins().map((builtInPlugin) => {\n      let overwrite = overwritesOfBultInPlugins.find(p => p.src === builtInPlugin.src)\n\n      const mergedPlugin: Plugin = {\n        ...builtInPlugin,\n        ...overwrite,\n        active: overwrite?.active ?? builtInPlugin.activeByDefault,\n      }\n\n      return mergedPlugin\n    })\n\n    const mergedPlugins = [...mergedBuiltInPlugins, ...userInstalledPlugins]\n\n    this.updateStoredPlugins(mergedPlugins)\n  }\n\n  private async addExternalPlugin(\n    plugin: Omit<Plugin, 'content'>\n  ): Promise<void> {\n    if (this.storedPlugins.some(p => p.src === plugin.src)) return;\n\n    const newPlugins: Omit<Plugin, 'content'>[] = this.storedPlugins;\n    newPlugins.push(plugin);\n    this.storePlugins(newPlugins);\n  }\n\n  protected getBuiltInPlugins(): CorePlugin[] {\n    return builtinPlugins\n  }\n\n  private addContent(plugin: Omit<Plugin, 'content'>): Plugin {\n    const tag = this.pluginTag(plugin.src);\n\n    if (!this.loadedPlugins.has(tag)) {\n      this.loadedPlugins.add(tag);\n      import(plugin.src).then((mod) => {\n        customElements.define(tag, mod.default)\n      })\n    }\n    return {\n      ...plugin,\n      content: () => {\n        return staticTagHtml`<${tag}\n            .doc=${this.doc}\n            .docName=${this.docName}\n            .editCount=${this.historyState.editCount}\n            .plugins=${this.storedPlugins}\n            .docId=${this.docId}\n            .pluginId=${plugin.src}\n            .nsdoc=${this.nsdoc}\n            .docs=${this.docs}\n            .locale=${this.locale}\n            class=\"${classMap({\n              plugin: true,\n              menu: plugin.kind === 'menu',\n              validator: plugin.kind === 'validator',\n              editor: plugin.kind === 'editor',\n            })}\"\n          ></${tag}>`\n        },\n    };\n  }\n\n  @state() private loadedPlugins = new Set<string>();\n\n  // PLUGGING INTERFACES\n  @state() private pluginTags = new Map<string, string>();\n  /**\n   * Hashes `uri` using cyrb64 analogous to\n   * https://github.com/bryc/code/blob/master/jshash/experimental/cyrb53.js .\n   * @returns a valid customElement tagName containing the URI hash.\n   */\n  private pluginTag(uri: string): string {\n    if (!this.pluginTags.has(uri)) {\n      let h1 = 0xdeadbeef,\n        h2 = 0x41c6ce57;\n      for (let i = 0, ch; i < uri.length; i++) {\n        ch = uri.charCodeAt(i);\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n      }\n      h1 =\n        Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^\n        Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n      h2 =\n        Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^\n        Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n      this.pluginTags.set(\n        uri,\n        'oscd-plugin' +\n          ((h2 >>> 0).toString(16).padStart(8, '0') +\n            (h1 >>> 0).toString(16).padStart(8, '0'))\n      );\n    }\n    return this.pluginTags.get(uri)!;\n  }\n\n\n}\n\ndeclare global {\n  interface ElementEventMap {\n    'reset-plugins': CustomEvent;\n    'add-external-plugin': CustomEvent<AddExternalPluginDetail>;\n    'set-plugins': CustomEvent<SetPluginsDetail>;\n  }\n}\n\n\n// HOSTING INTERFACES\n\nexport interface MenuItem {\n  icon: string;\n  name: string;\n  hint?: string;\n  actionItem?: boolean;\n  action?: (event: CustomEvent<ActionDetail>) => void;\n  disabled?: () => boolean;\n  content: () => TemplateResult;\n  kind: string;\n}\n\nexport interface Validator {\n  validate: () => Promise<void>;\n}\n\nexport interface MenuPlugin {\n  run: () => Promise<void>;\n}\n\nexport function newResetPluginsEvent(): CustomEvent {\n  return new CustomEvent('reset-plugins', { bubbles: true, composed: true });\n}\n\nexport interface AddExternalPluginDetail {\n  plugin: Omit<Plugin, 'content'>;\n}\n\nexport type AddExternalPluginEvent = CustomEvent<AddExternalPluginDetail>;\n\nexport function newAddExternalPluginEvent(\n  plugin: Omit<Plugin, 'content'>\n): AddExternalPluginEvent {\n  return new CustomEvent<AddExternalPluginDetail>('add-external-plugin', {\n    bubbles: true,\n    composed: true,\n    detail: { plugin },\n  });\n}\n\nexport interface SetPluginsDetail {\n  selectedPlugins: Plugin[];\n}\n\nexport type SetPluginsEvent = CustomEvent<SetPluginsDetail>;\n\nexport function newSetPluginsEvent(selectedPlugins: Plugin[]): SetPluginsEvent {\n  return new CustomEvent<SetPluginsDetail>('set-plugins', {\n    bubbles: true,\n    composed: true,\n    detail: { selectedPlugins },\n  });\n}\n\n\n\n\n/**\n * This is a template literal tag function. See:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates\n *\n * Passes its arguments to LitElement's `html` tag after combining the first and\n * last expressions with the first two and last two static strings.\n * Throws unless the first and last expressions are identical strings.\n *\n * We need this to get around the expression location limitations documented in\n * https://lit.dev/docs/templates/expressions/#expression-locations\n *\n * After upgrading to Lit 2 we can use their static HTML functions instead:\n * https://lit.dev/docs/api/static-html/\n */\nfunction staticTagHtml(\n  oldStrings: ReadonlyArray<string>,\n  ...oldArgs: unknown[]\n): TemplateResult {\n  const args = [...oldArgs];\n  const firstArg = args.shift();\n  const lastArg = args.pop();\n\n  if (firstArg !== lastArg)\n    throw new Error(\n      `Opening tag <${firstArg}> does not match closing tag </${lastArg}>.`\n    );\n\n  const strings = [...oldStrings] as string[] & { raw: string[] };\n  const firstString = strings.shift();\n  const secondString = strings.shift();\n\n  const lastString = strings.pop();\n  const penultimateString = strings.pop();\n\n  strings.unshift(`${firstString}${firstArg}${secondString}`);\n  strings.push(`${penultimateString}${lastArg}${lastString}`);\n\n  return html(<TemplateStringsArray>strings, ...args);\n}\n\n\nfunction withoutContent<P extends Plugin | InstalledOfficialPlugin>(\n  plugin: P\n): P {\n  return { ...plugin, content: undefined };\n}\n\nexport const pluginIcons: Record<PluginKind | MenuPosition, string> = {\n  editor: 'tab',\n  menu: 'play_circle',\n  validator: 'rule_folder',\n  top: 'play_circle',\n  middle: 'play_circle',\n  bottom: 'play_circle',\n};\n\nconst menuOrder: (PluginKind | MenuPosition)[] = [\n  'editor',\n  'top',\n  'validator',\n  'middle',\n  'bottom',\n];\n\nfunction menuCompare(a: Plugin, b: Plugin): -1 | 0 | 1 {\n  if (a.kind === b.kind && a.position === b.position) return 0;\n  const earlier = menuOrder.find(kind =>\n    [a.kind, b.kind, a.position, b.position].includes(kind)\n  );\n  return [a.kind, a.position].includes(earlier) ? -1 : 1;\n}\n\nfunction compareNeedsDoc(a: Plugin, b: Plugin): -1 | 0 | 1 {\n  if (a.requireDoc === b.requireDoc) return 0;\n  return a.requireDoc ? 1 : -1;\n}\n\n"]}