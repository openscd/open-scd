{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../../src/editors/communication/helpers.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,qBAAqB,CAAC,OAAgB;IAClD,OAAO,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AACxC,CAAC;AAED,MAAM,UAAU,2BAA2B,CACzC,OAAgB,EAChB,GAAgB;IAEhB,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,EAAE;QACpB,OAAO,EAAE,CAAC;KACX;IAED,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;IAC1D,IAAI,CAAC,kBAAkB,EAAE;QACvB,OAAO,EAAE,CAAC;KACX;IAED,MAAM,OAAO,GAAG,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAE3D,OAAO,KAAK,CAAC,IAAI,CACf,GAAG,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,CACjD,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,OAAO,CAAC,CAAC;AAC3E,CAAC","sourcesContent":["export function getCurrentConnectedAP(element: Element): Element | null {\r\n    return element.closest('ConnectedAP');\r\n  }\r\n  \r\n  export function getAllConnectedAPsOfSameIED(\r\n    element: Element,\r\n    doc: XMLDocument\r\n  ): Element[] {\r\n    if (!element || !doc) {\r\n      return [];\r\n    }\r\n  \r\n    const currentConnectedAP = getCurrentConnectedAP(element);\r\n    if (!currentConnectedAP) {\r\n      return [];\r\n    }\r\n  \r\n    const iedName = currentConnectedAP.getAttribute('iedName');\r\n  \r\n    return Array.from(\r\n      doc.querySelectorAll('SubNetwork > ConnectedAP')\r\n    ).filter(connectedAP => connectedAP.getAttribute('iedName') === iedName);\r\n  }"]}