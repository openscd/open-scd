{"version":3,"file":"ldevice-container.js","sourceRoot":"","sources":["../../../src/editors/ied/ldevice-container.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,GAAG,EACH,aAAa,EACb,IAAI,EACJ,QAAQ,EAER,KAAK,EACL,KAAK,GAEN,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACnC,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAIpC,OAAO,EACL,uBAAuB,EACvB,oBAAoB,EACpB,gBAAgB,EAChB,kBAAkB,EAClB,cAAc,GACf,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,iBAAiB,EAAE,MAAM,0CAA0C,CAAC;AAE7E,OAAO,sCAAsC,CAAC;AAC9C,OAAO,mBAAmB,CAAC;AAE3B,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,gEAAgE;AAEzD,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,SAAS;IAAxC;;QAEL,sBAAiB,GAAa,EAAE,CAAC;IAuGnC,CAAC;IAlGS,cAAc;QACpB,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,MAAM;YAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;IAEO,MAAM;QACZ,MAAM,UAAU,GACd,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvE,MAAM,IAAI,GAAG,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,MAAM,MAAM,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEhD,OAAO,IAAI,CAAA,GAAG,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,MAAM;YACzE,CAAC,CAAC,IAAI,CAAA,YAAY,MAAM,EAAE;YAC1B,CAAC,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAES,YAAY;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAES,OAAO,CAAC,kBAAkC;QAClD,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAElC,gGAAgG;QAChG,IAAI,kBAAkB,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAE;YAC/C,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;SAClC;IACH,CAAC;IAGD,IAAY,UAAU;QACpB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,CACxE,OAAO,CAAC,EAAE;YACR,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtD,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAClD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAEnC,OAAO,IAAI,CAAA,wBAAwB,IAAI,CAAC,MAAM,EAAE;8BACtB,iBAAiB;mCACZ,GAAG,CAAC,MAAM,CAAC;;;mBAG3B,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE;;;QAGtC,UAAU,CAAC,MAAM,GAAG,CAAC;YACrB,CAAC,CAAC,IAAI,CAAA;;qBAEO,GAAG,CAAC,+BAA+B,CAAC;;;;;;;uBAOlC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;;kBAE/B;YACV,CAAC,CAAC,OAAO;;UAEP,IAAI,CAAC,YAAY,EAAE,EAAE;YACrB,CAAC,CAAC,UAAU,CAAC,GAAG,CACZ,EAAE,CAAC,EAAE,CAAC,IAAI,CAAA;6BACK,IAAI,CAAC,SAAS;uBACpB,IAAI,CAAC,GAAG;2BACJ,EAAE;yBACJ,IAAI,CAAC,KAAK;6BACN,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC;gCAC9B,CACnB;YACH,CAAC,CAAC,OAAO;;mBAEA,CAAC;IAClB,CAAC;;AAEM,uBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;GAiBlB,CAAC;AAtGF;IADC,QAAQ,EAAE;2DACsB;AAGjC;IADC,KAAK,CAAC,eAAe,CAAC;sDACqB;AAgC5C;IADC,KAAK,EAAE;kDAQP;AA5CU,gBAAgB;IAD5B,aAAa,CAAC,mBAAmB,CAAC;GACtB,gBAAgB,CAyG5B;SAzGY,gBAAgB","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  property,\n  PropertyValues,\n  query,\n  state,\n  TemplateResult,\n} from 'lit-element';\nimport { nothing } from 'lit-html';\nimport { get } from 'lit-translate';\n\nimport { IconButtonToggle } from '@material/mwc-icon-button-toggle';\n\nimport {\n  getDescriptionAttribute,\n  getInstanceAttribute,\n  getNameAttribute,\n  getLdNameAttribute,\n  newWizardEvent,\n} from '@openscd/open-scd/src/foundation.js';\nimport { logicalDeviceIcon } from '@openscd/open-scd/src/icons/ied-icons.js';\n\nimport '@openscd/open-scd/src/action-pane.js';\nimport './ln-container.js';\n\nimport { wizards } from '../../wizards/wizard-library.js';\nimport { Container } from './foundation.js';\n\n/** [[`IED`]] plugin subeditor for editing `LDevice` element. */\n@customElement('ldevice-container')\nexport class LDeviceContainer extends Container {\n  @property()\n  selectedLNClasses: string[] = [];\n\n  @query('#toggleButton')\n  toggleButton!: IconButtonToggle | undefined;\n\n  private openEditWizard(): void {\n    const wizard = wizards['LDevice'].edit(this.element);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  private header(): TemplateResult {\n    const nameOrInst =\n      getNameAttribute(this.element) ?? getInstanceAttribute(this.element);\n    const desc = getDescriptionAttribute(this.element);\n    const ldName = getLdNameAttribute(this.element);\n\n    return html`${nameOrInst}${desc ? html` &mdash; ${desc}` : nothing}${ldName\n      ? html` &mdash; ${ldName}`\n      : nothing}`;\n  }\n\n  protected firstUpdated(): void {\n    this.requestUpdate();\n  }\n\n  protected updated(_changedProperties: PropertyValues): void {\n    super.updated(_changedProperties);\n\n    // When the LN Classes filter is updated, we also want to trigger rendering for the LN Elements.\n    if (_changedProperties.has('selectedLNClasses')) {\n      this.requestUpdate('lnElements');\n    }\n  }\n\n  @state()\n  private get lnElements(): Element[] {\n    return Array.from(this.element.querySelectorAll(':scope > LN,LN0')).filter(\n      element => {\n        const lnClass = element.getAttribute('lnClass') ?? '';\n        return this.selectedLNClasses.includes(lnClass);\n      }\n    );\n  }\n\n  render(): TemplateResult {\n    const lnElements = this.lnElements;\n\n    return html`<action-pane .label=\"${this.header()}\">\n      <mwc-icon slot=\"icon\">${logicalDeviceIcon}</mwc-icon>\n      <abbr slot=\"action\" title=\"${get('edit')}\">\n        <mwc-icon-button\n          icon=\"edit\"\n          @click=${() => this.openEditWizard()}\n        ></mwc-icon-button>\n      </abbr>\n      ${lnElements.length > 0\n        ? html`<abbr\n            slot=\"action\"\n            title=\"${get('iededitor.toggleChildElements')}\"\n          >\n            <mwc-icon-button-toggle\n              on\n              id=\"toggleButton\"\n              onIcon=\"keyboard_arrow_up\"\n              offIcon=\"keyboard_arrow_down\"\n              @click=${() => this.requestUpdate()}\n            ></mwc-icon-button-toggle>\n          </abbr>`\n        : nothing}\n      <div id=\"lnContainer\">\n        ${this.toggleButton?.on\n          ? lnElements.map(\n              ln => html`<ln-container\n                .editCount=${this.editCount}\n                .doc=${this.doc}\n                .element=${ln}\n                .nsdoc=${this.nsdoc}\n                .ancestors=${[...this.ancestors, this.element]}\n              ></ln-container> `\n            )\n          : nothing}\n      </div>\n    </action-pane>`;\n  }\n\n  static styles = css`\n    #lnContainer {\n      display: grid;\n      grid-gap: 12px;\n      box-sizing: border-box;\n      grid-template-columns: repeat(auto-fit, minmax(316px, auto));\n    }\n\n    abbr {\n      text-decoration: none;\n    }\n\n    @media (max-width: 387px) {\n      #lnContainer {\n        grid-template-columns: repeat(auto-fit, minmax(196px, auto));\n      }\n    }\n  `;\n}\n"]}