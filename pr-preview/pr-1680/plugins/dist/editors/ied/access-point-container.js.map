{"version":3,"file":"access-point-container.js","sourceRoot":"","sources":["../../../src/editors/ied/access-point-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  property,\n  PropertyValues,\n  state,\n  TemplateResult,\n} from 'lit-element';\nimport { nothing } from 'lit-html';\nimport { get } from 'lit-translate';\n\nimport {\n  getDescriptionAttribute,\n  getNameAttribute,\n  newWizardEvent,\n} from '@openscd/open-scd/src/foundation.js';\nimport { accessPointIcon } from '@openscd/open-scd/src/icons/ied-icons.js';\nimport { editServicesWizard } from '../../wizards/services.js';\n\nimport '@openscd/open-scd/src/action-pane.js';\nimport './server-container.js';\n\nimport { Container } from './foundation.js';\n\n/** [[`IED`]] plugin subeditor for editing `AccessPoint` element. */\n@customElement('access-point-container')\nexport class AccessPointContainer extends Container {\n  @property()\n  selectedLNClasses: string[] = [];\n\n  protected updated(_changedProperties: PropertyValues): void {\n    super.updated(_changedProperties);\n\n    // When the LN Classes filter is updated, we also want to trigger rendering for the LN Elements.\n    if (_changedProperties.has('selectedLNClasses')) {\n      this.requestUpdate('lnElements');\n    }\n  }\n\n  private renderServicesIcon(): TemplateResult {\n    const services: Element | null = this.element.querySelector('Services');\n\n    if (!services) {\n      return html``;\n    }\n\n    return html` <abbr slot=\"action\" title=\"${get('iededitor.settings')}\">\n      <mwc-icon-button\n        icon=\"settings\"\n        @click=${() => this.openSettingsWizard(services)}\n      ></mwc-icon-button>\n    </abbr>`;\n  }\n\n  private openSettingsWizard(services: Element): void {\n    const wizard = editServicesWizard(services);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  @state()\n  private get lnElements(): Element[] {\n    return Array.from(this.element.querySelectorAll(':scope > LN')).filter(\n      element => {\n        const lnClass = element.getAttribute('lnClass') ?? '';\n        return this.selectedLNClasses.includes(lnClass);\n      }\n    );\n  }\n\n  private header(): TemplateResult {\n    const name = getNameAttribute(this.element);\n    const desc = getDescriptionAttribute(this.element);\n\n    return html`${name}${desc ? html` &mdash; ${desc}` : nothing}`;\n  }\n\n  render(): TemplateResult {\n    const lnElements = this.lnElements;\n\n    return html`<action-pane .label=\"${this.header()}\">\n      <mwc-icon slot=\"icon\">${accessPointIcon}</mwc-icon>\n      ${this.renderServicesIcon()}\n      ${Array.from(this.element.querySelectorAll(':scope > Server')).map(\n        server =>\n          html`<server-container\n            .editCount=${this.editCount}\n            .doc=${this.doc}\n            .element=${server}\n            .nsdoc=${this.nsdoc}\n            .selectedLNClasses=${this.selectedLNClasses}\n            .ancestors=${[...this.ancestors, this.element]}\n          ></server-container>`\n      )}\n      <div id=\"lnContainer\">\n        ${lnElements.map(\n          ln => html`<ln-container\n            .editCount=${this.editCount}\n            .doc=${this.doc}\n            .element=${ln}\n            .nsdoc=${this.nsdoc}\n            .ancestors=${[...this.ancestors, this.element]}\n          ></ln-container>`\n        )}\n      </div>\n    </action-pane>`;\n  }\n\n  static styles = css`\n    #lnContainer {\n      display: grid;\n      grid-gap: 12px;\n      box-sizing: border-box;\n      grid-template-columns: repeat(auto-fit, minmax(316px, auto));\n    }\n\n    @media (max-width: 387px) {\n      #lnContainer {\n        grid-template-columns: repeat(auto-fit, minmax(196px, auto));\n      }\n    }\n  `;\n}\n"]}