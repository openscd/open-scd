{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../src/wizards/foundation/actions.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  getValue,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport {\n  cloneElement,\n} from '@openscd/xml';\n\nimport {\n  ComplexAction,\n  EditorAction,\n  createUpdateAction\n} from '@openscd/core/foundation/deprecated/editor';\nimport { get } from 'lit-translate';\nimport { updateReferences } from './references.js';\n\nexport function replaceNamingAction(element: Element): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const name = getValue(inputs.find(i => i.label === 'name')!)!;\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n\n    if (\n      name === element.getAttribute('name') &&\n      desc === element.getAttribute('desc')\n    ) {\n      return [];\n    }\n\n    const newElement = cloneElement(element, { name, desc });\n\n    return [{ old: { element }, new: { element: newElement } }];\n  };\n}\n\nexport function replaceNamingAttributeWithReferencesAction(\n  element: Element,\n  messageTitleKey: string\n): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const newName = getValue(inputs.find(i => i.label === 'name')!)!;\n    const oldName = element.getAttribute('name');\n    const newDesc = getValue(inputs.find(i => i.label === 'desc')!);\n\n    if (newName === oldName && newDesc === element.getAttribute('desc')) {\n      return [];\n    }\n\n    const newElement = cloneElement(element, { name: newName, desc: newDesc });\n\n    const complexAction: ComplexAction = {\n      actions: [],\n      title: get(messageTitleKey, { name: newName }),\n    };\n    complexAction.actions.push({\n      old: { element },\n      new: { element: newElement },\n    });\n    complexAction.actions.push(...updateReferences(element, oldName, newName));\n    return complexAction.actions.length ? [complexAction] : [];\n  };\n}\n\nexport function updateNamingAttributeWithReferencesAction(\n  element: Element,\n  messageTitleKey: string\n): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const newAttributes: Record<string, string | null> = {};\n    processNamingAttributes(newAttributes, element, inputs);\n    if (Object.keys(newAttributes).length == 0) {\n      return [];\n    }\n    addMissingAttributes(element, newAttributes);\n\n    const name = getValue(inputs.find(i => i.label === 'name')!)!;\n    const complexAction: ComplexAction = {\n      actions: [],\n      title: get(messageTitleKey, { name }),\n    };\n    complexAction.actions.push(createUpdateAction(element, newAttributes));\n    complexAction.actions.push(\n      ...updateReferences(element, element.getAttribute('name'), name)\n    );\n    return complexAction.actions.length ? [complexAction] : [];\n  };\n}\n\nexport function processNamingAttributes(\n  newAttributes: Record<string, string | null>,\n  element: Element,\n  inputs: WizardInputElement[]\n): void {\n  const name = getValue(inputs.find(i => i.label === 'name')!)!;\n  const desc = getValue(inputs.find(i => i.label === 'desc')!);\n\n  if (name !== element.getAttribute('name')) {\n    newAttributes['name'] = name;\n  }\n  if (desc !== element.getAttribute('desc')) {\n    newAttributes['desc'] = desc;\n  }\n}\n\nexport function addMissingAttributes(\n  element: Element,\n  newAttributes: Record<string, string | null>\n): Record<string, string | null> {\n  const newAttributeKeys = Object.keys(newAttributes);\n  Array.from(element.attributes)\n    .filter(attr => !newAttributeKeys.includes(attr.name))\n    .forEach(attr => {\n      newAttributes[attr.name] = attr.value;\n    });\n\n  return newAttributes;\n}\n"]}