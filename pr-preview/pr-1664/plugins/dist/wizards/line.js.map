{"version":3,"file":"line.js","sourceRoot":"","sources":["../../src/wizards/line.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-html';\nimport { get } from 'lit-translate';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport {\n  getValue,\n  patterns,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport { cloneElement, createElement } from '@openscd/xml';\n\nimport { SimpleAction } from '@openscd/core/foundation/deprecated/editor.js';\n\nconst initial = {\n  nomFreq: '50',\n  numPhases: '3',\n  Voltage: '110',\n  multiplier: 'k',\n};\n\nfunction render(\n  name: string,\n  desc: string | null,\n  type: string | null,\n  nomFreq: string | null,\n  numPhases: string | null\n): TemplateResult[] {\n  return [\n    html`<wizard-textfield\n      label=\"name\"\n      .maybeValue=${name}\n      helper=\"${get('line.wizard.nameHelper')}\"\n      required\n      validationMessage=\"${get('textfield.required')}\"\n      dialogInitialFocus\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"desc\"\n      .maybeValue=${desc}\n      nullable\n      helper=\"${get('line.wizard.descHelper')}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"type\"\n      .maybeValue=${type}\n      nullable\n      helper=\"${get('line.wizard.typeHelper')}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"nomFreq\"\n      .maybeValue=${nomFreq}\n      nullable\n      helper=\"${get('voltagelevel.wizard.nomFreqHelper')}\"\n      suffix=\"Hz\"\n      validationMessage=\"${get('textfield.nonempty')}\"\n      pattern=\"${patterns.unsigned}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"numPhases\"\n      .maybeValue=${numPhases}\n      nullable\n      helper=\"${get('voltagelevel.wizard.numPhaseHelper')}\"\n      suffix=\"#\"\n      validationMessage=\"${get('textfield.nonempty')}\"\n      type=\"number\"\n      min=\"1\"\n      max=\"255\"\n    ></wizard-textfield>`,\n  ];\n}\nfunction createLineAction(parent: Element): WizardActor {\n  return (inputs: WizardInputElement[]) => {\n    const lineAttrs: Record<string, string | null> = {};\n    const lineKeys = ['name', 'desc', 'type', 'nomFreq', 'numPhases'];\n    lineKeys.forEach(key => {\n      lineAttrs[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n\n    const line = createElement(parent.ownerDocument, 'Line', lineAttrs);\n\n    return [{ new: { parent, element: line } }];\n  };\n}\nfunction updateAction(element: Element): WizardActor {\n  return (inputs: WizardInputElement[]): SimpleAction[] => {\n    const lineAttrs: Record<string, string | null> = {};\n    const lineKeys = ['name', 'desc', 'type', 'nomFreq', 'numPhases'];\n    lineKeys.forEach(key => {\n      lineAttrs[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n\n    if (lineKeys.some(key => lineAttrs[key] !== element.getAttribute(key))) {\n      const newElement = cloneElement(element, lineAttrs);\n      return [\n        {\n          old: { element },\n          new: { element: newElement },\n        },\n      ];\n    }\n    return [];\n  };\n}\n\nexport function createLineWizard(parent: Element): Wizard {\n  const name = '';\n  const desc = '';\n  const type = '';\n  const nomFreq = '';\n  const numPhases = '';\n  return [\n    {\n      title: get('wizard.title.add', { tagName: 'Line' }),\n      primary: {\n        icon: 'save',\n        label: get('save'),\n        action: createLineAction(parent),\n      },\n      content: [...render(name, desc, type, nomFreq, numPhases)],\n    },\n  ];\n}\n\nexport function editLineWizard(element: Element): Wizard {\n  return [\n    {\n      title: get('line.wizard.title.edit'),\n      element,\n      primary: {\n        icon: 'edit',\n        label: get('save'),\n        action: updateAction(element),\n      },\n      content: render(\n        element.getAttribute('name') ?? '',\n        element.getAttribute('desc'),\n        element.getAttribute('type'),\n        element.getAttribute('nomFreq'),\n        element.getAttribute('numPhases')\n      ),\n    },\n  ];\n}\n"]}