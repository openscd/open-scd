{"version":3,"file":"gse-control-editor.js","sourceRoot":"","sources":["../../../src/editors/publisher/gse-control-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  state,\n  query,\n  TemplateResult,\n} from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-button';\nimport '@material/mwc-list/mwc-list-item';\nimport { Button } from '@material/mwc-button';\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\n\nimport './data-set-element-editor.js';\nimport './gse-control-element-editor.js';\nimport '@openscd/open-scd/src/filtered-list.js';\nimport { FilteredList } from '@openscd/open-scd/src/filtered-list.js';\n\nimport { gooseIcon } from '@openscd/open-scd/src/icons/icons.js';\nimport {\n  compareNames,\n  identity,\n  find,\n} from '@openscd/open-scd/src/foundation.js';\nimport { styles, updateElementReference } from './foundation.js';\n\n@customElement('gse-control-editor')\nexport class GseControlEditor extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  @property({ attribute: false })\n  doc!: XMLDocument;\n  @property({ type: Number })\n  editCount = -1;\n\n  @state()\n  selectedGseControl?: Element;\n  @state()\n  selectedDataSet?: Element | null;\n\n  @query('.selectionlist') selectionList!: FilteredList;\n  @query('mwc-button') selectGSEControlButton!: Button;\n\n  /** Resets selected GOOSE and its DataSet, if not existing in new doc */\n  update(props: Map<string | number | symbol, unknown>): void {\n    if (props.has('doc') && this.selectedGseControl) {\n      const newGseControl = updateElementReference(\n        this.doc,\n        this.selectedGseControl\n      );\n\n      this.selectedGseControl = newGseControl ?? undefined;\n      this.selectedDataSet = this.selectedGseControl\n        ? updateElementReference(this.doc, this.selectedDataSet!)\n        : undefined;\n\n      if (!newGseControl && this.selectionList && this.selectionList.selected)\n        (this.selectionList.selected as ListItem).selected = false;\n    }\n\n    super.update(props);\n  }\n\n  private selectGSEControl(evt: Event): void {\n    const id = ((evt.target as FilteredList).selected as ListItem).value;\n    const gseControl = find(this.doc, 'GSEControl', id);\n    if (!gseControl) return;\n\n    this.selectedGseControl = gseControl;\n\n    if (gseControl) {\n      this.selectedDataSet = gseControl.parentElement?.querySelector(\n        `DataSet[name=\"${gseControl.getAttribute('datSet')}\"]`\n      );\n      (evt.target as FilteredList).classList.add('hidden');\n      this.selectGSEControlButton.classList.remove('hidden');\n    }\n  }\n\n  private renderElementEditorContainer(): TemplateResult {\n    if (this.selectedGseControl !== undefined)\n      return html`<div class=\"elementeditorcontainer\">\n        <data-set-element-editor\n          .element=${this.selectedDataSet!}\n        ></data-set-element-editor>\n        <gse-control-element-editor\n          .editCount=${this.editCount}\n          .doc=${this.doc}\n          .element=${this.selectedGseControl}\n        ></gse-control-element-editor>\n      </div>`;\n\n    return html``;\n  }\n\n  renderSelectionList(): TemplateResult {\n    return html`<filtered-list\n      activatable\n      @action=${this.selectGSEControl}\n      class=\"selectionlist\"\n      >${Array.from(this.doc.querySelectorAll('IED'))\n        .sort(compareNames)\n        .flatMap(ied => {\n          const ieditem = html`<mwc-list-item\n              class=\"listitem header\"\n              noninteractive\n              graphic=\"icon\"\n              value=\"${Array.from(ied.querySelectorAll('GSEControl'))\n                .map(element => {\n                  const id = identity(element) as string;\n                  return typeof id === 'string' ? id : '';\n                })\n                .join(' ')}\"\n            >\n              <span>${ied.getAttribute('name')}</span>\n              <mwc-icon slot=\"graphic\">developer_board</mwc-icon>\n            </mwc-list-item>\n            <li divider role=\"separator\"></li>`;\n\n          const gseControls = Array.from(\n            ied.querySelectorAll('GSEControl')\n          ).map(\n            reportCb =>\n              html`<mwc-list-item\n                twoline\n                value=\"${identity(reportCb)}\"\n                graphic=\"icon\"\n                ><span>${reportCb.getAttribute('name')}</span\n                ><span slot=\"secondary\">${identity(reportCb)}</span>\n                <mwc-icon slot=\"graphic\">${gooseIcon}</mwc-icon>\n              </mwc-list-item>`\n          );\n\n          return [ieditem, ...gseControls];\n        })}</filtered-list\n    >`;\n  }\n\n  private renderToggleButton(): TemplateResult {\n    return html`<mwc-button\n      outlined\n      label=\"${get('publisher.selectbutton', { type: 'GOOSE' })}\"\n      @click=${() => {\n        this.selectionList.classList.remove('hidden');\n        this.selectGSEControlButton.classList.add('hidden');\n      }}\n    ></mwc-button>`;\n  }\n\n  render(): TemplateResult {\n    return html`${this.renderToggleButton()}\n      <div class=\"content\">\n        ${this.renderSelectionList()}${this.renderElementEditorContainer()}\n      </div>`;\n  }\n\n  static styles = css`\n    ${styles}\n\n    .elementeditorcontainer {\n      flex: 65%;\n      margin: 4px 8px 4px 4px;\n      background-color: var(--mdc-theme-surface);\n      overflow-y: scroll;\n      display: grid;\n      grid-gap: 12px;\n      padding: 8px 12px 16px;\n      grid-template-columns: repeat(3, 1fr);\n    }\n\n    data-set-element-editor {\n      grid-column: 1 / 2;\n    }\n\n    gse-control-element-editor {\n      grid-column: 2 / 4;\n    }\n\n    @media (max-width: 950px) {\n      .elementeditorcontainer {\n        display: block;\n      }\n    }\n  `;\n}\n"]}