{"version":3,"file":"foundation.js","sourceRoot":"","sources":["../../../src/editors/subscription/foundation.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, LitElement, query } from 'lit-element';\n\nimport {\n  compareNames,\n  getSclSchemaVersion,\n  isPublic,\n  minAvailableLogicalNodeInstance,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport {\n  cloneElement,\n  createElement,\n} from '@openscd/xml';\n\nimport { Create, Delete } from '@openscd/core/foundation/deprecated/editor.js';\nimport { getFcdaReferences } from '@openscd/open-scd/src/foundation/ied.js';\nimport { SCL_NAMESPACE } from '@openscd/open-scd/src/schemas.js';\n\nexport enum View {\n  PUBLISHER,\n  SUBSCRIBER,\n}\n\n/**\n * Enumeration stating the Subscribe status of a IED to a GOOSE or Sampled Value.\n */\nexport enum SubscribeStatus {\n  Full,\n  Partial,\n  None,\n}\n\nexport interface ViewDetail {\n  view: View;\n}\nexport type ViewEvent = CustomEvent<ViewDetail>;\nexport function newViewEvent(\n  view: View,\n  eventInitDict?: CustomEventInit<ViewDetail>\n): ViewEvent {\n  return new CustomEvent<ViewDetail>('view', {\n    bubbles: true,\n    composed: true,\n    ...eventInitDict,\n    detail: { view, ...eventInitDict?.detail },\n  });\n}\n\nexport interface IEDSelectDetail {\n  ied: Element | undefined;\n}\nexport type IEDSelectEvent = CustomEvent<IEDSelectDetail>;\nexport function newIEDSelectEvent(\n  ied: Element | undefined,\n  eventInitDict?: CustomEventInit<IEDSelectDetail>\n): IEDSelectEvent {\n  return new CustomEvent<IEDSelectDetail>('ied-select', {\n    bubbles: true,\n    composed: true,\n    ...eventInitDict,\n    detail: { ied, ...eventInitDict?.detail },\n  });\n}\n\nexport interface FcdaSelectDetail {\n  control: Element | undefined;\n  fcda: Element | undefined;\n}\nexport type FcdaSelectEvent = CustomEvent<FcdaSelectDetail>;\nexport function newFcdaSelectEvent(\n  control: Element | undefined,\n  fcda: Element | undefined,\n  eventInitDict?: CustomEventInit<FcdaSelectDetail>\n): FcdaSelectEvent {\n  return new CustomEvent<FcdaSelectDetail>('fcda-select', {\n    bubbles: true,\n    composed: true,\n    ...eventInitDict,\n    detail: { control, fcda, ...eventInitDict?.detail },\n  });\n}\n\nexport interface SubscriptionChangedDetail {\n  control: Element | undefined;\n  fcda: Element | undefined;\n}\nexport type SubscriptionChangedEvent = CustomEvent<SubscriptionChangedDetail>;\nexport function newSubscriptionChangedEvent(\n  control: Element | undefined,\n  fcda: Element | undefined,\n  eventInitDict?: CustomEventInit<SubscriptionChangedDetail>\n): SubscriptionChangedEvent {\n  return new CustomEvent<SubscriptionChangedDetail>('subscription-changed', {\n    bubbles: true,\n    composed: true,\n    ...eventInitDict,\n    detail: { control, fcda, ...eventInitDict?.detail },\n  });\n}\n\nexport function getFcdaTitleValue(fcdaElement: Element): string {\n  return `${fcdaElement.getAttribute('doName')}${\n    fcdaElement.hasAttribute('doName') && fcdaElement.hasAttribute('daName')\n      ? `.`\n      : ``\n  }${fcdaElement.getAttribute('daName')}`;\n}\n\nexport function getFcdaSubtitleValue(fcdaElement: Element): string {\n  return `${fcdaElement.getAttribute('ldInst')} ${\n    fcdaElement.hasAttribute('ldInst') ? `/` : ''\n  }${\n    fcdaElement.getAttribute('prefix')\n      ? ` ${fcdaElement.getAttribute('prefix')}`\n      : ''\n  } ${fcdaElement.getAttribute('lnClass')} ${fcdaElement.getAttribute(\n    'lnInst'\n  )}`;\n}\n\nexport function existExtRef(\n  parentInputs: Element,\n  fcda: Element,\n  control: Element | undefined\n): boolean {\n  return !!getExtRef(parentInputs, fcda, control);\n}\n\nexport function getExtRef(\n  parentInputs: Element,\n  fcda: Element,\n  control: Element | undefined\n): Element | undefined {\n  function createCriteria(attributeName: string, value: string | null): string {\n    // For ExtRef the attribute 'srcLNClass' is optional and defaults to 'LLN0', here we ignore 'srcLNClass' completely for 'LLN0'\n    // because otherwise we would have to extend the querySelector to multiple selector groups checking for 'LLN0' or missing 'srcLNClass'\n    const shouldIgnoreCriteria = attributeName === 'srcLNClass' && value === 'LLN0';\n    if (shouldIgnoreCriteria) {\n      return '';\n    }\n\n    if (value) {\n      return `[${attributeName}=\"${value}\"]`;\n    }\n    return '';\n  }\n\n  const iedName = fcda.closest('IED')?.getAttribute('name');\n  if (!iedName) {\n    return undefined;\n  }\n\n  let controlCriteria = '';\n  if (control && getSclSchemaVersion(fcda.ownerDocument) !== '2003') {\n    controlCriteria = `[serviceType=\"${serviceTypes[control.tagName]!}\"]`;\n    controlCriteria += createCriteria(\n      'srcLDInst',\n      control.closest('LDevice')?.getAttribute('inst') ?? null\n    );\n    controlCriteria += createCriteria(\n      'srcLNClass',\n      control.closest('LN0,LN')?.getAttribute('lnClass') ?? null\n    );\n    controlCriteria += createCriteria(\n      'srcLNInst',\n      control.closest('LN0,LN')?.getAttribute('inst') ?? null\n    );\n    controlCriteria += createCriteria(\n      'srcCBName',\n      control.getAttribute('name') ?? null\n    );\n  }\n\n  return Array.from(\n    parentInputs.querySelectorAll(\n      `ExtRef[iedName=\"${iedName}\"]${getFcdaReferences(fcda)}${controlCriteria}`\n    )\n  ).find(extRefElement => !extRefElement.hasAttribute('intAddr'));\n}\n\nexport function canRemoveSubscriptionSupervision(\n  subscribedExtRef: Element\n): boolean {\n  const [srcCBName, srcLDInst, srcLNClass, iedName, srcPrefix, srcLNInst] = [\n    'srcCBName',\n    'srcLDInst',\n    'srcLNClass',\n    'iedName',\n    'srcPrefix',\n    'srcLNInst',\n  ].map(attr => subscribedExtRef.getAttribute(attr));\n  return !Array.from(\n    subscribedExtRef.closest('IED')?.getElementsByTagName('ExtRef') ?? []\n  )\n    .filter(isPublic)\n    .some(\n      extRef =>\n        (extRef.getAttribute('srcCBName') ?? '') === (srcCBName ?? '') &&\n        (extRef.getAttribute('srcLDInst') ?? '') === (srcLDInst ?? '') &&\n        (extRef.getAttribute('srcLNClass') ?? '') === (srcLNClass ?? '') &&\n        (extRef.getAttribute('iedName') ?? '') === (iedName ?? '') &&\n        (extRef.getAttribute('srcPrefix') ?? '') === (srcPrefix ?? '') &&\n        (extRef.getAttribute('srcLNInst') ?? '') === (srcLNInst ?? '') &&\n        extRef !== subscribedExtRef\n    );\n}\n\n/**\n * Searches for first instantiated LGOS/LSVS LN for presence of DOI>DAI[valKind=Conf/RO][valImport=true]\n * given a supervision type and if necessary then searches DataTypeTemplates for\n * DOType>DA[valKind=Conf/RO][valImport=true] to determine if modifications to supervision are allowed.\n * @param ied - SCL IED element.\n * @param supervisionType - either 'LGOS' or 'LSVS' supervision LN classes.\n * @returns boolean indicating if subscriptions are allowed.\n */\nfunction isSupervisionModificationAllowed(\n  ied: Element,\n  supervisionType: string\n): boolean {\n  const firstSupervisionLN = ied.querySelector(\n    `LN[lnClass=\"${supervisionType}\"]`\n  );\n\n  // no supervision logical nodes => no new supervision possible\n  if (firstSupervisionLN === null) return false;\n\n  // check if allowed to modify based on first instance properties\n  const supervisionName = supervisionType === 'LGOS' ? 'GoCBRef' : 'SvCBRef';\n  const instValKind = firstSupervisionLN!\n    .querySelector(`DOI[name=\"${supervisionName}\"]>DAI[name=\"setSrcRef\"]`)\n    ?.getAttribute('valKind');\n  const instValImport = firstSupervisionLN!\n    .querySelector(`DOI[name=\"${supervisionName}\"]>DAI[name=\"setSrcRef\"]`)\n    ?.getAttribute('valImport');\n\n  if (\n    (instValKind === 'RO' || instValKind === 'Conf') &&\n    instValImport === 'true'\n  )\n    return true;\n\n  // check if allowed to modify based on DataTypeTemplates for first instance\n  const rootNode = firstSupervisionLN?.ownerDocument;\n  const lNodeType = firstSupervisionLN.getAttribute('lnType');\n  const lnClass = firstSupervisionLN.getAttribute('lnClass');\n  const dObj = rootNode.querySelector(\n    `DataTypeTemplates > LNodeType[id=\"${lNodeType}\"][lnClass=\"${lnClass}\"] > DO[name=\"${\n      lnClass === 'LGOS' ? 'GoCBRef' : 'SvCBRef'\n    }\"]`\n  );\n  if (dObj) {\n    const dORef = dObj.getAttribute('type');\n    const daObj = rootNode.querySelector(\n      `DataTypeTemplates > DOType[id=\"${dORef}\"] > DA[name=\"setSrcRef\"]`\n    );\n    if (daObj) {\n      return (\n        (daObj.getAttribute('valKind') === 'Conf' ||\n          daObj.getAttribute('valKind') === 'RO') &&\n        daObj.getAttribute('valImport') === 'true'\n      );\n    }\n  }\n  // definition missing\n  return false;\n}\n\n/**\n * Returns an array with a single Create action to create a new\n * supervision element for the given GOOSE/SMV message and subscriber IED.\n *\n * @param controlBlock The GOOSE or SMV message element\n * @param subscriberIED The subscriber IED\n * @returns an empty array if instantiation is not possible or an array with a single Create action\n */\nexport function instantiateSubscriptionSupervision(\n  controlBlock: Element | undefined,\n  subscriberIED: Element | undefined\n): Create[] {\n  const supervisionType =\n    controlBlock?.tagName === 'GSEControl' ? 'LGOS' : 'LSVS';\n  if (\n    !controlBlock ||\n    !subscriberIED ||\n    !isSupervisionAllowed(controlBlock, subscriberIED, supervisionType)\n  )\n    return [];\n  const availableLN = findOrCreateAvailableLNInst(\n    controlBlock,\n    subscriberIED,\n    supervisionType\n  );\n  if (\n    !availableLN ||\n    !isSupervisionModificationAllowed(subscriberIED, supervisionType)\n  )\n    return [];\n\n  const actions: Create[] = [];\n  // If creating new LN element\n  if (!availableLN.parentElement) {\n    const parent = subscriberIED.querySelector(\n      `LN[lnClass=\"${supervisionType}\"]`\n    )?.parentElement;\n    if (parent) {\n      // use Create Action for supervision LN\n      actions.push({\n        new: {\n          parent: parent,\n          element: availableLN,\n          reference: parent!.querySelector(\n            `LN[lnClass=\"${supervisionType}\"]:last-child`\n          )?.nextElementSibling,\n        },\n      });\n    }\n  }\n\n  // Create child elements\n  const supervisionName = supervisionType === 'LGOS' ? 'GoCBRef' : 'SvCBRef';\n\n  let doiElement = availableLN.querySelector(`DOI[name=\"${supervisionName}\"]`);\n  if (!doiElement) {\n    doiElement = subscriberIED.ownerDocument.createElementNS(\n      SCL_NAMESPACE,\n      'DOI'\n    );\n    doiElement.setAttribute('name', supervisionName);\n    actions.push({\n      new: {\n        parent: availableLN!,\n        element: doiElement,\n      },\n    });\n  }\n\n  let daiElement = availableLN.querySelector(\n    `DOI[name=\"${supervisionName}\"]>DAI[name=\"setSrcRef\"]`\n  );\n  if (!daiElement) {\n    daiElement = subscriberIED.ownerDocument.createElementNS(\n      SCL_NAMESPACE,\n      'DAI'\n    );\n    const srcValRef = subscriberIED.querySelector(\n      `LN[lnClass=\"${supervisionType}\"]>DOI[name=\"${supervisionName}\"]>DAI[name=\"setSrcRef\"]`\n    );\n    daiElement.setAttribute('name', 'setSrcRef');\n\n    // transfer valKind and valImport from first supervision instance if present\n    if (srcValRef?.hasAttribute('valKind'))\n      daiElement.setAttribute('valKind', srcValRef.getAttribute('valKind')!);\n    if (srcValRef?.hasAttribute('valImport'))\n      daiElement.setAttribute(\n        'valImport',\n        srcValRef.getAttribute('valImport')!\n      );\n    actions.push({\n      new: {\n        parent: doiElement!,\n        element: daiElement,\n      },\n    });\n  }\n\n  let valElement = availableLN.querySelector(`Val`);\n  if (!valElement) {\n    valElement = subscriberIED.ownerDocument.createElementNS(\n      SCL_NAMESPACE,\n      'Val'\n    );\n  }\n  valElement.textContent = controlBlockReference(controlBlock);\n  actions.push({\n    new: {\n      parent: daiElement!,\n      element: valElement,\n    },\n  });\n\n  return actions;\n}\n\n/**\n * Return Val elements within an LGOS/LSVS instance for a particular IED and control block type.\n * @param ied - IED SCL element.\n * @param cbTagName - Either GSEControl or (defaults to) SampledValueControl.\n * @param firstOnly - If true, return the first element found\n * @returns an Element array of Val SCL elements within an LGOS/LSVS node.\n */\nexport function getSupervisionCbRefs(\n  ied: Element,\n  cbTagName: string\n): Element[];\nexport function getSupervisionCbRefs(\n  ied: Element,\n  cbTagName: string,\n  firstOnly: boolean\n): Element | null;\nexport function getSupervisionCbRefs(\n  ied: Element,\n  cbTagName: string,\n  firstOnly?: boolean\n): Element[] | Element | null {\n  const supervisionType = cbTagName === 'GSEControl' ? 'LGOS' : 'LSVS';\n  const supervisionName = supervisionType === 'LGOS' ? 'GoCBRef' : 'SvCBRef';\n  const selectorString = `LN[lnClass=\"${supervisionType}\"]>DOI[name=\"${supervisionName}\"]>DAI[name=\"setSrcRef\"]>Val,LN0[lnClass=\"${supervisionType}\"]>DOI[name=\"${supervisionName}\"]>DAI[name=\"setSrcRef\"]>Val`;\n  return firstOnly\n    ? ied.querySelector(selectorString)\n    : Array.from(ied.querySelectorAll(selectorString));\n}\n\n/**\n * Return an array with a single Delete action to delete the supervision element\n * for the given GOOSE/SMV message and subscriber IED.\n *\n * @param controlBlock The GOOSE or SMV message element\n * @param subscriberIED The subscriber IED\n * @returns an empty array if removing the supervision is not possible or an array\n * with a single Delete action that removes the LN if it was created in OpenSCD\n * or only the supervision structure DOI/DAI/Val if it was created by the user.\n */\nexport function removeSubscriptionSupervision(\n  controlBlock: Element | undefined,\n  subscriberIED: Element | undefined\n): Delete[] {\n  if (!controlBlock || !subscriberIED) return [];\n  const valElement = getSupervisionCbRefs(\n    subscriberIED,\n    controlBlock.tagName\n  ).find(val => val.textContent == controlBlockReference(controlBlock));\n  if (!valElement) return [];\n  const lnElement = valElement.closest('LN0, LN');\n  if (!lnElement || !lnElement.parentElement) return [];\n  // Check if that one has been created by OpenSCD (private section exists)\n  const isOpenScdCreated = lnElement.querySelector(\n    'Private[type=\"OpenSCD.create\"]'\n  );\n  return isOpenScdCreated\n    ? [\n        {\n          old: {\n            parent: lnElement.parentElement,\n            element: lnElement,\n          },\n        },\n      ]\n    : [\n        {\n          old: {\n            parent: lnElement,\n            element: valElement.closest('DOI')!,\n          },\n        },\n      ];\n}\n\n/**\n * Checks if the given combination of GOOSE/SMV message and subscriber IED\n * allows for subscription supervision.\n * @param controlBlock The GOOSE or SMV message element\n * @param subscriberIED The subscriber IED\n * @param supervisionType LSVS or LGOS\n * @returns true if both controlBlock and subscriberIED meet the requirements for\n * setting up a supervision for the specified supervision type or false if they don't\n */\nfunction isSupervisionAllowed(\n  controlBlock: Element,\n  subscriberIED: Element,\n  supervisionType: string\n): boolean {\n  if (getSclSchemaVersion(subscriberIED.ownerDocument) === '2003') return false;\n  if (subscriberIED.querySelector(`LN[lnClass=\"${supervisionType}\"]`) === null)\n    return false;\n  if (\n    getSupervisionCbRefs(subscriberIED, controlBlock.tagName).find(\n      val => val.textContent == controlBlockReference(controlBlock)\n    )\n  )\n    return false;\n  if (\n    maxSupervisions(subscriberIED, controlBlock) <=\n    instantiatedSupervisionsCount(subscriberIED, controlBlock)\n  )\n    return false;\n\n  return true;\n}\n\n/** Returns an new or existing LN instance available for supervision instantiation\n *\n * @param controlBlock The GOOSE or SMV message element\n * @param subscriberIED The subscriber IED\n * @returns The LN instance or null if no LN instance could be found or created\n */\nexport function findOrCreateAvailableLNInst(\n  controlBlock: Element,\n  subscriberIED: Element,\n  supervisionType: string\n): Element | null {\n  let availableLN = Array.from(\n    subscriberIED.querySelectorAll(`LN[lnClass=\"${supervisionType}\"]`)\n  ).find(ln => {\n    const supervisionName = supervisionType === 'LGOS' ? 'GoCBRef' : 'SvCBRef';\n    return (\n      ln.querySelector(\n        `DOI[name=\"${supervisionName}\"]>DAI[name=\"setSrcRef\"]>Val`\n      ) === null ||\n      ln.querySelector(\n        `DOI[name=\"${supervisionName}\"]>DAI[name=\"setSrcRef\"]>Val`\n      )?.textContent === ''\n    );\n  });\n  if (!availableLN) {\n    availableLN = subscriberIED.ownerDocument.createElementNS(\n      SCL_NAMESPACE,\n      'LN'\n    );\n    const openScdTag = subscriberIED.ownerDocument.createElementNS(\n      SCL_NAMESPACE,\n      'Private'\n    );\n    openScdTag.setAttribute('type', 'OpenSCD.create');\n    availableLN.appendChild(openScdTag);\n    availableLN.setAttribute('lnClass', supervisionType);\n    const instantiatedSiblings = getSupervisionCbRefs(\n      subscriberIED,\n      controlBlock.tagName,\n      true\n    )?.closest('LN');\n\n    if (!instantiatedSiblings) return null;\n    availableLN.setAttribute(\n      'lnType',\n      instantiatedSiblings?.getAttribute('lnType') ?? ''\n    );\n  }\n\n  /* Before we return, we make sure that LN's inst is unique, non-empty\n  and also the minimum inst as the minimum of all available in the IED */\n  const inst = availableLN.getAttribute('inst') ?? '';\n  if (inst === '') {\n    const instNumber = minAvailableLogicalNodeInstance(\n      Array.from(\n        subscriberIED.querySelectorAll(`LN[lnClass=\"${supervisionType}\"]`)\n      )\n    );\n    if (!instNumber) return null;\n    availableLN.setAttribute('inst', instNumber);\n  }\n  return availableLN;\n}\n\n/**\n * Find the first ExtRef SCL element given a control and a subscribing IED\n *\n * @param publishedControlBlock - the control block SCL element in the publishing IED.\n * @param subscribingIed - the subscribing IED SCL element.\n * @returns The first ExtRef element associated with the subscribing IED and published control block.\n */\nexport function getFirstSubscribedExtRef(\n  publishedControlBlock: Element,\n  subscribingIed: Element\n): Element | null {\n  const publishingIed = publishedControlBlock.closest('LN,LN0')!;\n  const dataSet = publishingIed.querySelector(\n    `DataSet[name=\"${publishedControlBlock.getAttribute('datSet')}\"]`\n  );\n  let extRef: Element | undefined = undefined;\n  Array.from(\n    subscribingIed?.querySelectorAll('LN0 > Inputs, LN > Inputs')\n  ).some(inputs => {\n    Array.from(dataSet!.querySelectorAll('FCDA')).some(fcda => {\n      const anExtRef = getExtRef(inputs, fcda, publishedControlBlock);\n      if (anExtRef) {\n        extRef = anExtRef;\n        return true;\n      }\n      return false;\n    });\n    return extRef !== undefined;\n  });\n  return extRef !== undefined ? extRef : null;\n}\n\n/** Returns the subscriber's supervision LN for a given control block and extRef element\n *\n * @param extRef - The extRef SCL element in the subscribing IED.\n * @returns The supervision LN instance or null if not found\n */\nexport function getExistingSupervision(extRef: Element | null): Element | null {\n  if (extRef === null) return null;\n\n  const extRefValues = ['iedName', 'serviceType', 'srcPrefix', 'srcCBName'];\n  const [srcIedName, serviceType, srcPrefix, srcCBName] = extRefValues.map(\n    attr => extRef.getAttribute(attr) ?? ''\n  );\n\n  const supervisionType = serviceType === 'GOOSE' ? 'LGOS' : 'LSVS';\n  const refSelector =\n    supervisionType === 'LGOS' ? 'DOI[name=\"GoCBRef\"]' : 'DOI[name=\"SvCBRef\"]';\n\n  const srcLDInst =\n    extRef.getAttribute('srcLDInst') ?? extRef.getAttribute('ldInst');\n  const srcLNClass = extRef.getAttribute('srcLNClass') ?? 'LLN0';\n\n  const cbReference = `${srcIedName}${srcPrefix}${srcLDInst}/${srcLNClass}.${srcCBName}`;\n  const iedName = extRef.closest('IED')?.getAttribute('name');\n\n  const candidates = Array.from(\n    extRef.ownerDocument\n      .querySelector(`IED[name=\"${iedName}\"]`)!\n      .querySelectorAll(\n        `LN[lnClass=\"${supervisionType}\"]>${refSelector}>DAI[name=\"setSrcRef\"]>Val`\n      )\n  ).find(val => val.textContent === cbReference);\n\n  return candidates !== undefined ? candidates.closest('LN')! : null;\n}\n\n/**\n * Counts the number of LN instances with proper supervision for the given control block set up.\n *\n * @param subscriberIED The subscriber IED\n * @param controlBlock The GOOSE or SMV message element\n * @returns The number of LN instances with a supervision set up\n */\nexport function instantiatedSupervisionsCount(\n  subscriberIED: Element,\n  controlBlock: Element\n): number {\n  const instantiatedValues = getSupervisionCbRefs(\n    subscriberIED,\n    controlBlock.tagName\n  ).filter(val => val.textContent !== '');\n  return instantiatedValues.length;\n}\n\n/**\n * Counts the max number of LN instances with supervision allowed for\n * the given control block's type of message.\n *\n * @param subscriberIED The subscriber IED\n * @param controlBlock The GOOSE or SMV message element\n * @returns The max number of LN instances with supervision allowed\n */\nexport function maxSupervisions(\n  subscriberIED: Element,\n  controlBlock: Element\n): number {\n  const maxAttr = controlBlock.tagName === 'GSEControl' ? 'maxGo' : 'maxSv';\n  const maxValues = parseInt(\n    subscriberIED\n      .querySelector('Services>SupSubscription')\n      ?.getAttribute(maxAttr) ?? '0',\n    10\n  );\n  return isNaN(maxValues) ? 0 : maxValues;\n}\n\n/**\n * Creates a string pointer to the control block element.\n *\n * @param controlBlock The GOOSE or SMV message element\n * @returns null if the control block is undefined or a string pointer to the control block element\n */\nexport function controlBlockReference(\n  controlBlock: Element | undefined\n): string | null {\n  if (!controlBlock) return null;\n  const anyLn = controlBlock.closest('LN,LN0');\n  const prefix = anyLn?.getAttribute('prefix') ?? '';\n  const lnClass = anyLn?.getAttribute('lnClass');\n  const lnInst = anyLn?.getAttribute('inst') ?? '';\n  const ldInst = controlBlock.closest('LDevice')?.getAttribute('inst');\n  const iedName = controlBlock.closest('IED')?.getAttribute('name');\n  const cbName = controlBlock.getAttribute('name');\n  if (!cbName && !iedName && !ldInst && !lnClass) return null;\n  return `${iedName}${ldInst}/${prefix}${lnClass}${lnInst}.${cbName}`;\n}\n\nexport function canCreateValidExtRef(\n  fcda: Element,\n  controlBlock: Element | undefined\n): boolean {\n  const iedName = fcda.closest('IED')?.getAttribute('name');\n  const [ldInst, lnClass, lnInst, doName] = [\n    'ldInst',\n    'lnClass',\n    'lnInst',\n    'doName',\n  ].map(attr => fcda.getAttribute(attr));\n  if (!iedName || !ldInst || !lnClass || !lnInst || !doName) {\n    return false;\n  }\n\n  // For 2003 schema or serviceType `Poll`, the extra fields aren't needed.\n  if (\n    getSclSchemaVersion(fcda.ownerDocument) === '2003' ||\n    controlBlock === undefined\n  ) {\n    return true;\n  }\n\n  const srcLDInst = controlBlock.closest('LDevice')?.getAttribute('inst');\n  const srcLNClass = controlBlock.closest('LN0,LN')?.getAttribute('lnClass');\n  const srcLNInst = controlBlock.closest('LN0,LN')?.getAttribute('inst');\n  const srcCBName = controlBlock.getAttribute('name');\n\n  // For srcLNInst an empty string is allowed in `LN0`\n  return !(\n    !srcLDInst ||\n    !srcLNClass ||\n    !srcCBName ||\n    typeof srcLNInst !== 'string'\n  );\n}\n\nexport const serviceTypes: Partial<Record<string, string>> = {\n  ReportControl: 'Report',\n  GSEControl: 'GOOSE',\n  SampledValueControl: 'SMV',\n};\n\n/**\n * Create a new ExtRef Element depending on the SCL Edition copy attributes from the Control Element,\n * FCDA Element and related Elements.\n *\n * @param controlElement - `ReportControl`, `GSEControl` or `SampledValueControl` source element\n * @param fcdaElement    - The source data attribute element.\n * @returns The new created ExtRef element, which can be added to the document.\n */\nexport function createExtRefElement(\n  controlElement: Element | undefined,\n  fcdaElement: Element\n): Element {\n  const iedName = fcdaElement.closest('IED')?.getAttribute('name') ?? null;\n  const [ldInst, prefix, lnClass, lnInst, doName, daName] = [\n    'ldInst',\n    'prefix',\n    'lnClass',\n    'lnInst',\n    'doName',\n    'daName',\n  ].map(attr => fcdaElement.getAttribute(attr));\n\n  if (getSclSchemaVersion(fcdaElement.ownerDocument) === '2003') {\n    // Edition 2003(1) does not define serviceType and its MCD attribute starting with src...\n    return createElement(fcdaElement.ownerDocument, 'ExtRef', {\n      iedName,\n      ldInst,\n      lnClass,\n      lnInst,\n      prefix,\n      doName,\n      daName,\n    });\n  }\n\n  if (!controlElement || !serviceTypes[controlElement.tagName]) {\n    //for invalid control block tag name assume polling\n    return createElement(fcdaElement.ownerDocument, 'ExtRef', {\n      iedName,\n      serviceType: 'Poll',\n      ldInst,\n      lnClass,\n      lnInst,\n      prefix,\n      doName,\n      daName,\n    });\n  }\n\n  // default is empty string as attributes are mandatory acc to IEC 61850-6 >Ed2\n  const srcLDInst =\n    controlElement.closest('LDevice')?.getAttribute('inst') ?? '';\n  const srcPrefix =\n    controlElement.closest('LN0,LN')?.getAttribute('prefix') ?? '';\n  const srcLNClass =\n    controlElement.closest('LN0,LN')?.getAttribute('lnClass') ?? '';\n  const srcLNInst = controlElement.closest('LN0,LN')?.getAttribute('inst');\n  const srcCBName = controlElement.getAttribute('name') ?? '';\n\n  return createElement(fcdaElement.ownerDocument, 'ExtRef', {\n    iedName,\n    serviceType: serviceTypes[controlElement.tagName]!,\n    ldInst,\n    lnClass,\n    lnInst,\n    prefix,\n    doName,\n    daName,\n    srcLDInst,\n    srcPrefix,\n    srcLNClass,\n    srcLNInst: srcLNInst ? srcLNInst : null,\n    srcCBName,\n  });\n}\n\n/**\n * Create a clone of the passed ExtRefElement and updated or set the required attributes on the cloned element\n * depending on the Edition and type of Control Element.\n *\n * @param extRefElement  - The ExtRef Element to clone and update.\n * @param controlElement - `ReportControl`, `GSEControl` or `SampledValueControl` source element\n * @param fcdaElement    - The source data attribute element.\n * @returns A cloned ExtRef Element with updated information to be used for example in a Replace Action.\n */\nexport function updateExtRefElement(\n  extRefElement: Element,\n  controlElement: Element | undefined,\n  fcdaElement: Element\n): Element {\n  const iedName = fcdaElement.closest('IED')?.getAttribute('name') ?? null;\n  const [ldInst, prefix, lnClass, lnInst, doName, daName] = [\n    'ldInst',\n    'prefix',\n    'lnClass',\n    'lnInst',\n    'doName',\n    'daName',\n  ].map(attr => fcdaElement.getAttribute(attr));\n\n  if (getSclSchemaVersion(fcdaElement.ownerDocument) === '2003') {\n    // Edition 2003(1) does not define serviceType and its MCD attribute starting with src...\n    return cloneElement(extRefElement, {\n      iedName,\n      serviceType: null,\n      ldInst,\n      lnClass,\n      lnInst,\n      prefix,\n      doName,\n      daName,\n      srcLDInst: null,\n      srcPrefix: null,\n      srcLNClass: null,\n      srcLNInst: null,\n      srcCBName: null,\n    });\n  }\n\n  if (!controlElement || !serviceTypes[controlElement.tagName]) {\n    //for invalid control block tag name assume polling\n    return cloneElement(extRefElement, {\n      iedName,\n      serviceType: 'Poll',\n      ldInst,\n      lnClass,\n      lnInst,\n      prefix,\n      doName,\n      daName,\n      srcLDInst: null,\n      srcPrefix: null,\n      srcLNClass: null,\n      srcLNInst: null,\n      srcCBName: null,\n    });\n  }\n\n  const srcLDInst =\n    controlElement.closest('LDevice')?.getAttribute('inst') ?? '';\n  const srcPrefix =\n    controlElement.closest('LN0,LN')?.getAttribute('prefix') ?? '';\n  const srcLNClass =\n    controlElement.closest('LN0,LN')?.getAttribute('lnClass') ?? '';\n  const srcLNInst = controlElement.closest('LN0,LN')?.getAttribute('inst');\n  const srcCBName = controlElement.getAttribute('name') ?? '';\n\n  return cloneElement(extRefElement, {\n    iedName,\n    serviceType: serviceTypes[controlElement.tagName]!,\n    ldInst,\n    lnClass,\n    lnInst,\n    prefix,\n    doName,\n    daName,\n    srcLDInst,\n    srcPrefix,\n    srcLNClass,\n    srcLNInst: srcLNInst ? srcLNInst : null,\n    srcCBName,\n  });\n}\n\nexport function getOrderedIeds(doc: XMLDocument): Element[] {\n  return doc\n    ? Array.from(doc.querySelectorAll(':root > IED')).sort((a, b) =>\n        compareNames(a, b)\n      )\n    : [];\n}\n\n/**\n * An element within this list has 2 properties:\n * - The element itself, either a GSEControl or an IED at this point.\n * - A 'partial' property indicating if the GOOSE is fully initialized or partially.\n */\nexport interface ListElement {\n  element: Element;\n  partial?: boolean;\n}\n\nexport class SubscriberListContainer extends LitElement {\n  /** List holding all current subscribed Elements. */\n  subscribedElements: ListElement[] = [];\n\n  /** List holding all current available Elements which are not subscribed. */\n  availableElements: ListElement[] = [];\n\n  /** Current selected IED (when in Subscriber view) */\n  currentSelectedIed: Element | undefined;\n\n  /** The current used dataset for subscribing / unsubscribing */\n  currentUsedDataset: Element | undefined | null;\n\n  @query('div') subscriberWrapper!: Element;\n\n  protected updated(): void {\n    if (this.subscriberWrapper) {\n      this.subscriberWrapper.scrollTo(0, 0);\n    }\n  }\n\n  protected resetElements(): void {\n    this.subscribedElements = [];\n    this.availableElements = [];\n  }\n}\n\n/** Common `CSS` styles used by DataTypeTemplate subeditors */\nexport const styles = css`\n  :host(.moving) section {\n    opacity: 0.3;\n  }\n\n  section {\n    background-color: var(--mdc-theme-surface);\n    transition: all 200ms linear;\n    outline-color: var(--mdc-theme-primary);\n    outline-style: solid;\n    outline-width: 0px;\n    opacity: 1;\n  }\n\n  section:focus {\n    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),\n      0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.2);\n  }\n\n  section:focus-within {\n    outline-width: 2px;\n    transition: all 250ms linear;\n  }\n\n  h1,\n  h2,\n  h3 {\n    color: var(--mdc-theme-on-surface);\n    font-family: 'Roboto', sans-serif;\n    font-weight: 300;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    margin: 0px;\n    line-height: 48px;\n    padding-left: 0.3em;\n    transition: background-color 150ms linear;\n  }\n\n  section:focus-within > h1,\n  section:focus-within > h2,\n  section:focus-within > h3 {\n    color: var(--mdc-theme-surface);\n    background-color: var(--mdc-theme-primary);\n    transition: background-color 200ms linear;\n  }\n\n  h1 > nav,\n  h2 > nav,\n  h3 > nav,\n  h1 > abbr > mwc-icon-button,\n  h2 > abbr > mwc-icon-button,\n  h3 > abbr > mwc-icon-button {\n    float: right;\n  }\n\n  abbr[title] {\n    border-bottom: none !important;\n    cursor: inherit !important;\n    text-decoration: none !important;\n  }\n\n  mwc-list-item[noninteractive] {\n    font-weight: 500;\n  }\n`;\n\ndeclare global {\n  interface ElementEventMap {\n    ['view']: ViewEvent;\n    ['ied-select']: IEDSelectEvent;\n    ['fcda-select']: FcdaSelectEvent;\n    ['subscription-changed']: SubscriptionChangedEvent;\n  }\n}\n"]}