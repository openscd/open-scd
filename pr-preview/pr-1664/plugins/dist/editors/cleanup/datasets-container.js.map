{"version":3,"file":"datasets-container.js","sourceRoot":"","sources":["../../../src/editors/cleanup/datasets-container.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport {\n  customElement,\n  css,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n  query,\n  queryAll,\n} from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-button';\nimport '@material/mwc-icon';\nimport '@material/mwc-icon-button-toggle';\nimport '@material/mwc-list/mwc-check-list-item.js';\nimport '@material/mwc-checkbox';\n\nimport { Button } from '@material/mwc-button';\nimport { List, MWCListIndex } from '@material/mwc-list';\nimport { ListItem } from '@material/mwc-list/mwc-list-item.js';\n\nimport '@openscd/open-scd/src/filtered-list.js';\n\nimport { editDataSetWizard } from '../../wizards/dataset.js';\nimport { styles } from '../templates/foundation.js';\nimport {\n  identity,\n  isPublic,\n  newSubWizardEvent,\n} from '@openscd/open-scd/src/foundation.js';\nimport { newActionEvent } from '@openscd/core/foundation/deprecated/editor.js';\nimport { cleanSCLItems, identitySort } from './foundation.js';\n\n/** An editor component for cleaning SCL datasets. */\n@customElement('cleanup-datasets')\nexport class CleanupDatasets extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  @property({ attribute: false })\n  doc!: XMLDocument;\n\n  @property({ type: Boolean })\n  disableDataSetClean = false;\n\n  @property({ type: Array })\n  unreferencedDataSets: Element[] = [];\n\n  @property({ attribute: false })\n  selectedDatasetItems: MWCListIndex | [] = [];\n\n  @query('.deleteButton')\n  cleanupButton!: Button;\n\n  @query('.dataSetList')\n  dataSetList: List | undefined;\n\n  @queryAll('mwc-check-list-item.checkListItem')\n  dataSetItems: ListItem[] | undefined;\n\n  async firstUpdated(): Promise<void> {\n    this.dataSetList?.addEventListener('selected', () => {\n      this.selectedDatasetItems = this.dataSetList!.index;\n    });\n  }\n\n  /**\n   * Provide list item in the DataSet cleanup container.\n   * @param dataSet - an unused SCL DataSet element.\n   * @returns html for checklist item.\n   */\n  private renderListItem(dataSet: Element): TemplateResult {\n    return html` <mwc-check-list-item\n      twoline\n      class=\"checkListItem\"\n      value=\"${identity(dataSet)}\"\n      ><span class=\"unreferencedDataSet\"\n        >${dataSet.getAttribute('name')!}\n      </span>\n      <span>\n        <mwc-icon-button\n          label=\"Edit\"\n          icon=\"edit\"\n          class=\"editUnreferencedDataSet editItem\"\n          @click=${(e: MouseEvent) => {\n            e.stopPropagation();\n            e.target?.dispatchEvent(\n              newSubWizardEvent(() => editDataSetWizard(dataSet))\n            );\n          }}\n        ></mwc-icon-button>\n      </span>\n      <span slot=\"secondary\"\n        >${dataSet.closest('IED')?.getAttribute('name')}\n        (${dataSet.closest('IED')?.getAttribute('manufacturer') ??\n        'No manufacturer defined'})\n        -\n        ${dataSet.closest('IED')?.getAttribute('type') ??\n        'No Type Defined'}</span\n      >\n    </mwc-check-list-item>`;\n  }\n\n  /**\n   * Provide delete button the dataset cleanup container.\n   * @returns html for the Delete Button of this container.\n   */\n  private renderDeleteButton(): TemplateResult {\n    const sizeSelectedItems = (<Set<number>>this.selectedDatasetItems).size;\n\n    return html` <mwc-button\n      outlined\n      icon=\"delete\"\n      class=\"deleteButton cleanupDeleteButton\"\n      label=\"${get(\n        'cleanup.unreferencedDataSets.deleteButton'\n      )} (${sizeSelectedItems || '0'})\"\n      ?disabled=${(<Set<number>>this.selectedDatasetItems).size === 0 ||\n      (Array.isArray(this.selectedDatasetItems) &&\n        !this.selectedDatasetItems.length)}\n      @click=${(e: MouseEvent) => {\n        const cleanItems = Array.from(\n          (<Set<number>>this.selectedDatasetItems).values()\n        ).map(index => this.unreferencedDataSets[index]);\n        const deleteActions = cleanSCLItems(cleanItems);\n        deleteActions.forEach(deleteAction =>\n          e.target?.dispatchEvent(newActionEvent(deleteAction))\n        );\n        this.dataSetItems!.forEach(item => {\n          item.selected = false;\n        });\n      }}\n    ></mwc-button>`;\n  }\n\n  /**\n   * Render a user selectable table of unreferenced datasets if any exist, otherwise indicate this is not an issue.\n   * @returns html for table and action button.\n   */\n  private renderUnreferencedDataSets(): TemplateResult {\n    const unreferencedDataSets: Element[] = [];\n    Array.from(this.doc?.querySelectorAll('DataSet') ?? [])\n      .filter(isPublic)\n      .forEach(dataSet => {\n        const parent = dataSet.parentElement;\n        const name = dataSet.getAttribute('name');\n        const isReferenced = Array.from(\n          parent?.querySelectorAll(\n            'GSEControl, ReportControl, SampledValueControl, LogControl'\n          ) ?? []\n        ).some(cb => cb.getAttribute('datSet') === name);\n\n        if (parent && (!name || !isReferenced))\n          unreferencedDataSets.push(dataSet);\n      });\n    this.unreferencedDataSets = identitySort(unreferencedDataSets);\n    return html`\n      <div>\n        <h1>\n          ${get('cleanup.unreferencedDataSets.title')}\n          (${unreferencedDataSets.length})\n          <abbr slot=\"action\">\n            <mwc-icon-button\n              icon=\"info\"\n              title=\"${get('cleanup.unreferencedDataSets.tooltip')}\"\n            >\n            </mwc-icon-button>\n          </abbr>\n        </h1>\n        <filtered-list multi class=\"dataSetList\"\n          >${Array.from(\n            this.unreferencedDataSets.map(\n              item => html`${this.renderListItem(item)}`\n            )\n          )}\n        </filtered-list>\n      </div>\n      <footer>${this.renderDeleteButton()}</footer>\n    `;\n  }\n\n  render(): TemplateResult {\n    return html`\n      <section tabindex=\"0\">${this.renderUnreferencedDataSets()}</section>\n    `;\n  }\n\n  static styles = css`\n    ${styles}\n\n    section {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n    }\n\n    @media (max-width: 1200px) {\n      footer {\n        flex-direction: row;\n      }\n\n      mwc-check-list-item {\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n\n    .editItem {\n      --mdc-icon-size: 16px;\n    }\n\n    .editItem {\n      visibility: hidden;\n      opacity: 0;\n    }\n\n    .checkListItem:hover .editItem {\n      visibility: visible;\n      opacity: 1;\n      transition: visibility 0s, opacity 0.5s linear;\n    }\n\n    .cleanupDeleteButton {\n      float: right;\n    }\n\n    footer {\n      margin: 16px;\n      display: flex;\n      flex-flow: row wrap;\n      flex-direction: row-reverse;\n      justify-content: space-between;\n      align-items: center;\n      align-content: center;\n    }\n\n    filtered-list {\n      max-height: 70vh;\n      min-height: 20vh;\n      overflow-y: scroll;\n    }\n  `;\n}\n"]}