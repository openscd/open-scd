{"version":3,"file":"wizard-checkbox.js","sourceRoot":"","sources":["../src/wizard-checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  customElement,\n  html,\n  LitElement,\n  property,\n  query,\n  state,\n  TemplateResult,\n} from 'lit-element';\n\nimport '@material/mwc-formfield';\nimport '@material/mwc-switch';\nimport '@material/mwc-checkbox';\nimport { Checkbox } from '@material/mwc-checkbox';\nimport { Switch } from '@material/mwc-switch';\n\n/** A potentially `nullable` labelled checkbox. */\n@customElement('wizard-checkbox')\nexport class WizardCheckbox extends LitElement {\n  @property({ type: String })\n  label = '';\n  /** Parenthetical information rendered after the label: `label (helper)` */\n  @property({ type: String })\n  helper = '';\n  /** Whether [[`maybeValue`]] may be `null` */\n  @property({ type: Boolean })\n  nullable = false;\n  /** The default `checked` state while [[`maybeValue`]] is `null`. */\n  @property({ type: Boolean })\n  defaultChecked = false;\n  /** Is `\"true\"` when checked, `\"false\"` un-checked, `null` if [[`nullable`]]. */\n  @property({ type: String })\n  get maybeValue(): string | null {\n    return this.null ? null : this.checked ? 'true' : 'false';\n  }\n  set maybeValue(check: string | null) {\n    if (check === null) this.null = true;\n    else {\n      this.null = false;\n      this.checked = check === 'true' ? true : false;\n    }\n  }\n  /** Disables component including null switch */\n  @property({ type: Boolean })\n  disabled = false;\n\n  private isNull = false;\n\n  @state()\n  private get null(): boolean {\n    return this.nullable && this.isNull;\n  }\n  private set null(value: boolean) {\n    if (!this.nullable || value === this.isNull) return;\n    this.isNull = value;\n    if (this.null) this.disable();\n    else this.enable();\n  }\n\n  private initChecked = false;\n\n  @state()\n  get checked(): boolean {\n    return this.checkbox?.checked ?? this.initChecked;\n  }\n  set checked(value: boolean) {\n    if (this.checkbox) this.checkbox.checked = value;\n    else this.initChecked = value;\n  }\n\n  @state()\n  private deactivateCheckbox = false;\n  @state()\n  get formfieldLabel(): string {\n    return this.helper ? `${this.helper} (${this.label})` : this.label;\n  }\n\n  @query('mwc-switch') nullSwitch?: Switch;\n  @query('mwc-checkbox') checkbox?: Checkbox;\n\n  private nulled: boolean | null = null;\n\n  private enable(): void {\n    if (this.nulled === null) return;\n    this.checked = this.nulled;\n    this.nulled = null;\n    this.deactivateCheckbox = false;\n  }\n\n  private disable(): void {\n    if (this.nulled !== null) return;\n    this.nulled = this.checked;\n    this.checked = this.defaultChecked;\n    this.deactivateCheckbox = true;\n  }\n\n  firstUpdated(): void {\n    this.requestUpdate();\n  }\n\n  renderSwitch(): TemplateResult {\n    if (this.nullable) {\n      return html`<mwc-switch\n        style=\"margin-left: 12px;\"\n        ?checked=${!this.null}\n        ?disabled=${this.disabled}\n        @change=${() => {\n          this.null = !this.nullSwitch!.checked;\n        }}\n      ></mwc-switch>`;\n    }\n    return html``;\n  }\n\n  render(): TemplateResult {\n    return html`\n      <div style=\"display: flex; flex-direction: row;\">\n        <div style=\"flex: auto;\">\n          <mwc-formfield\n            label=\"${this.formfieldLabel}\"\n            style=\"${this.deactivateCheckbox || this.disabled\n              ? `--mdc-theme-text-primary-on-background:rgba(0, 0, 0, 0.38)`\n              : ``}\"\n            ><mwc-checkbox\n              ?checked=${this.initChecked}\n              ?disabled=${this.deactivateCheckbox || this.disabled}\n            ></mwc-checkbox\n          ></mwc-formfield>\n        </div>\n        <div style=\"display: flex; align-items: center;\">\n          ${this.renderSwitch()}\n        </div>\n      </div>\n    `;\n  }\n}\n"]}