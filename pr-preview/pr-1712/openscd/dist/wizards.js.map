{"version":3,"file":"wizards.js","sourceRoot":"","sources":["../src/wizards.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit-element';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-icon';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-check-list-item';\nimport '@material/mwc-list/mwc-list-item';\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\n\nimport {\n  identity,\n  isEqual,\n  isSame,\n  newWizardEvent,\n  Wizard,\n  WizardActor,\n} from './foundation.js';\nimport { EditorAction, SimpleAction } from '@openscd/core/foundation/deprecated/editor.js';\ninterface MergeOptions {\n  title?: string;\n  selected?: (diff: Diff<Element | string>) => boolean;\n  disabled?: (diff: Diff<Element | string>) => boolean;\n  auto?: (sink: Element, source: Element) => boolean;\n}\n\nexport type Diff<T> =\n  | { ours: T; theirs: null }\n  | { ours: null; theirs: T }\n  | { ours: T; theirs: T };\n\nfunction describe(element: Element): string {\n  const id = identity(element);\n\n  return typeof id === 'string' ? id.replace(/^>/, '') : get('unidentifiable');\n}\n\nfunction mergeWizardAction(\n  attrDiffs: [string, Diff<string>][],\n  childDiffs: Diff<Element>[],\n  sink: Element,\n  source: Element,\n  options?: MergeOptions\n): WizardActor {\n  return (_, wizard: Element): EditorAction[] => {\n    const actions: SimpleAction[] = [];\n    const checkList = wizard.shadowRoot!.querySelector('mwc-list')!;\n\n    const selectedAttrDiffs = (<ListItem[]>checkList.selected)\n      .filter(item => item.classList.contains('attr'))\n      .map(item => attrDiffs[item.value as unknown as number]);\n\n    const newSink = <Element>sink.cloneNode(false);\n    const parent = selectedAttrDiffs.length ? newSink : sink;\n    if (selectedAttrDiffs.length) {\n      if (sink.childElementCount === 0) newSink.textContent = sink.textContent;\n      for (const [name, diff] of selectedAttrDiffs)\n        if (name === 'value') {\n          newSink.textContent = diff.theirs;\n        } else if (diff.theirs === null) newSink.removeAttribute(name);\n        else newSink.setAttribute(name, diff.theirs);\n      actions.push({ old: { element: sink }, new: { element: newSink } });\n    }\n\n    let acted = false;\n\n    const selectedChildDiffs = (<ListItem[]>checkList.selected)\n      .filter(item => item.classList.contains('child'))\n      .map(item => childDiffs[item.value as unknown as number]);\n    if (selectedChildDiffs.length) {\n      for (const diff of selectedChildDiffs)\n        if (!diff.ours)\n          actions.push({\n            new: { parent, element: diff.theirs },\n          });\n        else if (!diff.theirs)\n          actions.push({\n            old: {\n              parent,\n              element: diff.ours,\n              reference: diff.ours.nextSibling,\n            },\n          });\n        else {\n          acted = true;\n          wizard.dispatchEvent(\n            newWizardEvent(\n              mergeWizard(diff.ours, diff.theirs, {\n                ...options,\n                title: undefined,\n              })\n            )\n          );\n        }\n    }\n\n    if (actions.length === 0 && !acted) wizard.dispatchEvent(newWizardEvent());\n\n    return [\n      {\n        actions,\n        title: get('merge.log', {\n          sink: describe(sink),\n          source: describe(source),\n          tag: sink.tagName,\n        }),\n      },\n    ];\n  };\n}\n\nexport function mergeWizard(\n  sink: Element,\n  source: Element,\n  options?: MergeOptions\n): Wizard {\n  const attrDiffs: [string, Diff<string>][] = [];\n  const ourText = sink.textContent ?? '';\n  const theirText = source.textContent ?? '';\n\n  if (\n    sink.childElementCount === 0 &&\n    source.childElementCount === 0 &&\n    theirText !== ourText\n  )\n    attrDiffs.push(['value', { ours: ourText, theirs: theirText }]);\n\n  const attributeNames = new Set(\n    source.getAttributeNames().concat(sink.getAttributeNames())\n  );\n\n  for (const name of attributeNames)\n    if (source.getAttribute(name) !== sink.getAttribute(name))\n      attrDiffs.push([\n        name,\n        <Diff<string>>{\n          theirs: source.getAttribute(name),\n          ours: sink.getAttribute(name),\n        },\n      ]);\n\n  const childDiffs: Diff<Element>[] = [];\n  const ourChildren = Array.from(sink.children);\n  const theirChildren = Array.from(source.children);\n\n  theirChildren.forEach(theirs => {\n    const twinIndex = ourChildren.findIndex(ourChild =>\n      isSame(theirs, ourChild)\n    );\n    const ours = twinIndex > -1 ? ourChildren[twinIndex] : null;\n\n    if (ours) ourChildren.splice(twinIndex, 1);\n    if (ours && isEqual(theirs, ours)) return;\n\n    if (!ours || !isEqual(theirs, ours)) childDiffs.push({ theirs, ours });\n  });\n\n  ourChildren.forEach(ours => childDiffs.push({ theirs: null, ours }));\n\n  return [\n    {\n      title:\n        options?.title ??\n        get('merge.defaultTitle', {\n          sink: describe(sink),\n          source: describe(source),\n          tag: sink.tagName,\n        }),\n      primary: {\n        label: get('merge.title'),\n        icon: 'merge_type',\n        action: mergeWizardAction(attrDiffs, childDiffs, sink, source, options),\n        auto: options?.auto?.(sink, source) ?? false,\n      },\n      content: [\n        html`\n          <mwc-list multi>\n            ${repeat(\n              attrDiffs,\n              e => e,\n              ([name, diff], index) =>\n                html`<mwc-check-list-item\n                  value=${index}\n                  class=\"attr\"\n                  twoline\n                  left\n                  hasMeta\n                  .selected=${options?.selected?.(diff) ?? false}\n                  .disabled=${options?.disabled?.(diff) ?? false}\n                  style=\"--mdc-checkbox-checked-color: var(--mdc-theme-${diff.ours\n                    ? diff.theirs\n                      ? 'secondary'\n                      : 'error'\n                    : 'primary'});\"\n                >\n                  <span>${name}</span>\n                  <span slot=\"secondary\"\n                    >${diff.ours ?? ''}\n                    ${diff.ours && diff.theirs ? html`&cularr;` : ' '}\n                    ${diff.theirs ?? ''}</span\n                  >\n                  <mwc-icon slot=\"meta\"\n                    >${diff.ours\n                      ? diff.theirs\n                        ? 'edit'\n                        : 'delete'\n                      : 'add'}</mwc-icon\n                  >\n                </mwc-check-list-item>`\n            )}\n            ${childDiffs.length\n              ? html`<mwc-list-item noninteractive\n                    >${get('merge.children')}</mwc-list-item\n                  >\n                  <li padded divider role=\"separator\"></li>`\n              : ''}\n            ${repeat(\n              childDiffs,\n              e => e,\n              (diff, index) =>\n                html`<mwc-check-list-item\n                  value=${index}\n                  class=\"child\"\n                  twoline\n                  left\n                  hasMeta\n                  .selected=${options?.selected?.(diff) ?? false}\n                  .disabled=${options?.disabled?.(diff) ?? false}\n                  style=\"--mdc-checkbox-checked-color: var(--mdc-theme-${diff.ours\n                    ? diff.theirs\n                      ? 'secondary'\n                      : 'error'\n                    : 'primary'});\"\n                >\n                  <span>${diff.ours?.tagName ?? diff.theirs?.tagName}</span>\n                  <span slot=\"secondary\"\n                    >${diff.ours ? describe(diff.ours) : ''}\n                    ${diff.ours &&\n                    diff.theirs &&\n                    describe(diff.ours) + describe(diff.theirs)\n                      ? html`&cularr;`\n                      : ' '}\n                    ${diff.theirs ? describe(diff.theirs) : ''}</span\n                  >\n                  <mwc-icon slot=\"meta\"\n                    >${diff.ours\n                      ? diff.theirs\n                        ? 'merge_type'\n                        : 'delete'\n                      : 'add'}</mwc-icon\n                  >\n                </mwc-check-list-item>`\n            )}\n          </mwc-list>\n        `,\n      ],\n    },\n  ];\n}\n"]}