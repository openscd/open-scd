{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../src/editors/protocol104/foundation/actions.ts"],"names":[],"mappings":"AAGA;;;;;;;;;;;;;GAaG;AACH,MAAM,UAAU,aAAa,CAC3B,SAAkB,EAClB,eAAwB,EACxB,SAAkB,EAClB,MAAe,EACf,EAAU,EACV,QAAiB,EACjB,aAA4B;IAE5B,OAAO,aAAa,CAAC,MAAM,CACzB,SAAS,EACT,eAAe,EACf,SAAS,EACT,MAAM,EACN,EAAE,EACF,aAAa,CAAC,OAAO;IACrB,+EAA+E;IAC/E,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAC1C,CAAC;AACJ,CAAC;AAED;;;;;;;;;;;;GAYG;AACH,MAAM,UAAU,kBAAkB,CAChC,SAAkB,EAClB,eAAwB,EACxB,SAAkB,EAClB,MAAe,EACf,EAAU,EACV,aAA4B;IAE5B,IAAI,aAAa,CAAC,YAAY,IAAI,aAAa,CAAC,WAAW,EAAE;QAC3D,OAAO,aAAa,CAAC,WAAW,CAC9B,SAAS,EACT,eAAe,EACf,SAAS,EACT,MAAM,EACN,EAAE,EACF,aAAa,CAAC,YAAY,CAC3B,CAAC;KACH;IACD,OAAO,EAAE,CAAC;AACZ,CAAC","sourcesContent":["import { Create } from '@openscd/core/foundation/deprecated/editor.js';\nimport { TiInformation } from './cdc.js';\n\n/**\n * Create a list of Create Actions using the parameters passed. First search for the DAI Elements\n * that can be effected. Next create the action and add it to this list, also start the Edit\n * Address Element wizard for all Address Elements created.\n *\n * @param lnElement       - The LN Element.\n * @param lnClonedElement - The Cloned LN Element, used to create new structure and determine which Create actions are needed.\n * @param doElement       - The DO Element.\n * @param wizard          - The Wizard to dispatch the Open Wizard event on.\n * @param ti              - The TI Value set on the new Address Elements.\n * @param inverted        - Indicates if the Engineer want to create inverted Address Elements, if applicable.\n * @param tiInformation   - Information about how to create the Address Elements for the passed TI.\n * @returns A list of Create Action that will be added to the complex action.\n */\nexport function createActions(\n  lnElement: Element,\n  lnClonedElement: Element,\n  doElement: Element,\n  wizard: Element,\n  ti: string,\n  inverted: boolean,\n  tiInformation: TiInformation\n): Create[] {\n  return tiInformation.create(\n    lnElement,\n    lnClonedElement,\n    doElement,\n    wizard,\n    ti,\n    tiInformation.daPaths,\n    // If the TI Allows inverted and the Engineer selected it, true will be passed.\n    tiInformation.inverted ? inverted : false\n  );\n}\n\n/**\n * Create a list of Create Actions using the parameters passed. First search for the DAI Elements [name=\"Check\"].\n * Next create the action and add it to this list, also start the Edit Address Element wizard for all Address Elements\n * created.\n *\n * @param lnElement       - The LN Element.\n * @param lnClonedElement - The Cloned LN Element, used to create new structure and determine which Create actions are needed.\n * @param doElement       - The DO Element.\n * @param wizard          - The Wizard to dispatch the Open Wizard event on.\n * @param ti              - The TI Value set on the new Address Elements.\n * @param tiInformation   - Information about how to create the Address Elements for the passed TI.\n * @returns A list of Create Action that will be added to the complex action.\n */\nexport function createCheckActions(\n  lnElement: Element,\n  lnClonedElement: Element,\n  doElement: Element,\n  wizard: Element,\n  ti: string,\n  tiInformation: TiInformation\n): Create[] {\n  if (tiInformation.checkDaPaths && tiInformation.checkCreate) {\n    return tiInformation.checkCreate(\n      lnElement,\n      lnClonedElement,\n      doElement,\n      wizard,\n      ti,\n      tiInformation.checkDaPaths\n    );\n  }\n  return [];\n}\n"]}