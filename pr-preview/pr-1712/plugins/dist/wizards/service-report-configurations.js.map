{"version":3,"file":"service-report-configurations.js","sourceRoot":"","sources":["../../src/wizards/service-report-configurations.ts"],"names":[],"mappings":"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","sourcesContent":["import { TemplateResult } from 'lit-html';\nimport { get } from 'lit-translate';\nimport { WizardPage } from '@openscd/open-scd/src/foundation.js';\n\nimport {\n  createFormDivider,\n  createFormElementsFromInputs,\n  isEmptyObject,\n} from './services.js';\n\ninterface ReportSettings {\n  cbName: string | null;\n  datSet: string | null;\n  rptID: string | null;\n  optFields: string | null;\n  bufTime: string | null;\n  trgOps: string | null;\n  intgPd: string | null;\n  resvTms: string | null;\n  owner: string | null;\n}\n\ninterface ConfReportControl {\n  max: string | null;\n  bufMode: string | null;\n  maxBuf: string | null;\n  bufConf: string | null;\n}\n\ninterface ClientServices {\n  maxReports: string | null;\n  bufReport: string | null;\n  unbufReport: string | null;\n}\n\ninterface DynDataSet {\n  max: string | null;\n  maxAttributes: string | null;\n}\n\ninterface ContentOptions {\n  reportSettings: ReportSettings;\n  confReportControl: ConfReportControl;\n  clientServices: ClientServices;\n  dynDataSet: DynDataSet;\n}\n\nexport function createReportConfigurationsWizardPage(\n  services: Element\n): WizardPage | null {\n  const content: TemplateResult[] | null =\n    createReportConfigurationsWizard(services);\n\n  return content\n    ? {\n        title: get('wizard.title.edit', { tagName: 'Report Settings' }),\n        content: [...content],\n        element: services,\n      }\n    : null;\n}\n\nfunction createReportConfigurationsWizard(\n  parent: Element\n): TemplateResult[] | null {\n  const content: ContentOptions = {\n    reportSettings: {\n      cbName:\n        parent.querySelector('ReportSettings')?.getAttribute('cbName') ?? null,\n      datSet:\n        parent.querySelector('ReportSettings')?.getAttribute('datSet') ?? null,\n      rptID:\n        parent.querySelector('ReportSettings')?.getAttribute('rptID') ?? null,\n      optFields:\n        parent.querySelector('ReportSettings')?.getAttribute('optFields') ??\n        null,\n      bufTime:\n        parent.querySelector('ReportSettings')?.getAttribute('bufTime') ?? null,\n      trgOps:\n        parent.querySelector('ReportSettings')?.getAttribute('trgOps') ?? null,\n      intgPd:\n        parent.querySelector('ReportSettings')?.getAttribute('intgPd') ?? null,\n      resvTms:\n        parent.querySelector('ReportSettings')?.getAttribute('resvTms') ?? null,\n      owner:\n        parent.querySelector('ReportSettings')?.getAttribute('owner') ?? null,\n    },\n    confReportControl: {\n      max:\n        parent.querySelector('ConfReportControl')?.getAttribute('max') ?? null,\n      bufMode:\n        parent.querySelector('ConfReportControl')?.getAttribute('bufMode') ??\n        null,\n      maxBuf:\n        parent.querySelector('ConfReportControl')?.getAttribute('maxBuf') ??\n        null,\n      bufConf:\n        parent.querySelector('ConfReportControl')?.getAttribute('bufConf') ??\n        null,\n    },\n    clientServices: {\n      maxReports:\n        parent.querySelector('ClientServices')?.getAttribute('maxReports') ??\n        null,\n      bufReport:\n        parent.querySelector('ClientServices')?.getAttribute('bufReport') ??\n        null,\n      unbufReport:\n        parent.querySelector('ClientServices')?.getAttribute('unbufReport') ??\n        null,\n    },\n    dynDataSet: {\n      max: parent.querySelector('DynDataSet')?.getAttribute('max') ?? null,\n      maxAttributes:\n        parent.querySelector('DynDataSet')?.getAttribute('maxAttributes') ??\n        null,\n    },\n  };\n\n  return isEmptyObject(content)\n    ? null\n    : [\n        createFormDivider('Control Block Configuration'),\n        ...createFormElementsFromInputs([\n          {\n            kind: 'Select',\n            label: 'cbName',\n            maybeValue: content.reportSettings.cbName,\n            helper:\n              'Whether report control block name is configurable offline (Conf) or fixed (Fix)',\n            values: ['Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'datSet',\n            maybeValue: content.reportSettings.datSet,\n            helper:\n              'Whether report control blocks data set and its structure is configurable offline (Conf), online(Dyn) or is fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'rptID',\n            maybeValue: content.reportSettings.rptID,\n            helper:\n              'Whether report control blocks ID is configurable offline (Conf), online(Dyn) or is fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'optFields',\n            maybeValue: content.reportSettings.optFields,\n            helper:\n              'Whether report control blocks optional fields are configurable offline (Conf), online(Dyn) or are fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'bufTime',\n            maybeValue: content.reportSettings.bufTime,\n            helper:\n              'Whether report control blocks bufTime attribute is configurable offline (Conf), online(Dyn) or is fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'trgOps',\n            maybeValue: content.reportSettings.trgOps,\n            helper:\n              'Whether report control blocks trigger options are configurable offline (Conf), online(Dyn) or are fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'intgPd',\n            maybeValue: content.reportSettings.intgPd,\n            helper:\n              'Whether report control blocks integrity period is configurable offline (Conf), online(Dyn) or is fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'resvTms',\n            helper:\n              'Whether reserve time exists in all buffered report control blocks',\n            maybeValue: content.reportSettings.resvTms?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'owner',\n            helper:\n              'Whether owner attribute exists on all buffered report control blocks',\n            maybeValue: content.reportSettings.owner?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n        ]),\n        createFormDivider('Publisher Capabilities'),\n        ...createFormElementsFromInputs([\n          {\n            kind: 'TextField',\n            label: 'max',\n            required: true,\n            helper:\n              'The maximum number of report control blocks instantiable by system configuration tool',\n            maybeValue: content.confReportControl.max?.toString() ?? null,\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'bufMode',\n            maybeValue: content.confReportControl.bufMode,\n            helper:\n              'Whether buffered, unbuffered or both type of report control block can be created by system configuration tool',\n            values: ['unbuffered', 'buffered', 'both'],\n            default: 'both',\n            nullable: true,\n          },\n          {\n            kind: 'TextField',\n            label: 'maxBuf',\n            required: false,\n            helper:\n              'The maximum number of BUFFERED report control blocks instantiable by system configuration tool',\n            maybeValue: content.confReportControl.maxBuf?.toString() ?? null,\n            nullable: true,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'bufConf',\n            helper:\n              'Whether buffered attribute can be configured by system configuration tool',\n            maybeValue: content.confReportControl.bufConf?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n        ]),\n        createFormDivider('Client Capabilities'),\n        ...createFormElementsFromInputs([\n          {\n            kind: 'TextField',\n            label: 'maxReports',\n            required: true,\n            helper:\n              'The maximal number of report control blocks the client can work with',\n            maybeValue: content.clientServices.maxReports?.toString() ?? null,\n            nullable: true,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'bufReport',\n            helper:\n              'Whether the IED can use buffered report control blocks as a client',\n            maybeValue: content.clientServices.bufReport?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'unbufReport',\n            helper:\n              'Whether the IED can use un-buffered report control blocks as a client',\n            maybeValue: content.clientServices.unbufReport?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n        ]),\n        createFormDivider('Dynamic Reporting/DataSets'),\n        ...createFormElementsFromInputs([\n          {\n            kind: 'TextField',\n            label: 'max',\n            required: true,\n            helper:\n              'The maximum number data sets (including preconfigured once)',\n            maybeValue: content.dynDataSet.max?.toString() ?? null,\n            nullable: true,\n          },\n          {\n            kind: 'TextField',\n            label: 'maxAttributes',\n            required: false,\n            helper:\n              'The maximum number of data entries (FCDA) allowed within a dynamic data set',\n            maybeValue: content.dynDataSet.maxAttributes?.toString() ?? null,\n            nullable: true,\n          },\n        ]),\n      ];\n}\n"]}