{"version":3,"file":"controlwithiedname.js","sourceRoot":"","sources":["../../src/wizards/controlwithiedname.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-icon';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-check-list-item';\nimport { List } from '@material/mwc-list';\n\nimport '@openscd/open-scd/src/filtered-list.js';\nimport {\n  findControlBlocks,\n  identity,\n  Wizard,\n  WizardAction,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport { createElement } from '@openscd/xml';\n\nimport { EditorAction } from '@openscd/core/foundation/deprecated/editor.js';\nimport { inputIcon } from '@openscd/open-scd/src/icons/icons.js';\nimport {\n  getSourceReferences,\n  openCommunicationMappingWizard,\n} from './commmap-wizards.js';\n\nfunction findIEDNameTarget(iedName: Element): Element | null {\n  const name = iedName.textContent ?? '';\n  const [apRef, ldInst, prefix, lnClass, lnInst] = [\n    'apRef',\n    'ldInst',\n    'prefix',\n    'lnClass',\n    'lnInst',\n  ].map(name => iedName.getAttribute(name));\n  const ied = iedName.ownerDocument.querySelector(`:root > IED[name=${name}]`);\n  if (!ied) return null;\n\n  const apRefSelector = apRef ? `AccessPoint[name=\"${apRef}\"]` : '``';\n  const ldInstSeletor = ldInst ? `LDevice[inst=\"${ldInst}\"]` : '';\n  const lnClassSelector = lnClass\n    ? lnClass === 'LLN0'\n      ? `LN0`\n      : `LN[lnClass=\"${lnClass}\"]`\n    : '';\n  const prefixSelector = prefix ? `[prefix=\"${prefix}\"]` : '';\n  const lnInstSelector = lnInst ? `[inst=\"${lnInst}\"]` : '';\n\n  const selector = ` ${apRefSelector} ${ldInstSeletor} ${lnClassSelector}${prefixSelector}${lnInstSelector}`;\n\n  return ied.querySelector(selector);\n}\n\nfunction disconnectExtRefs(extRefs: Element[]): EditorAction[] {\n  const actions = <EditorAction[]>[];\n  extRefs.forEach(extRef => {\n    const [intAddr, desc, serviceType, pServT, pLN, pDO, pDA] = [\n      'intAddr',\n      'desc',\n      'serviceType',\n      'pServT',\n      'pLN',\n      'pDO',\n      'pDA',\n    ].map(name => extRef.getAttribute(name));\n\n    if (intAddr) {\n      // cannot delete extRef but only DAPath attributes\n      const newExtRef = createElement(extRef.ownerDocument, 'ExtRef', {\n        intAddr,\n        desc,\n        serviceType,\n        pServT,\n        pLN,\n        pDO,\n        pDA,\n      });\n\n      actions.push({\n        new: {\n          element: newExtRef,\n        },\n        old: {\n          element: extRef,\n        },\n      });\n    } else {\n      actions.push({\n        old: {\n          parent: extRef.parentElement!,\n          element: extRef,\n          reference: extRef.nextElementSibling,\n        },\n      });\n    }\n  });\n\n  // cbConnectionWizard shows connections sources in ONE controlBlock\n  const sinkReference: Set<Element> = new Set();\n  extRefs.forEach(extRef => {\n    findControlBlocks(extRef).forEach(cb => {\n      const ied = extRef.closest('IED')?.getAttribute('name');\n      const ld = extRef.closest('LDevice')?.getAttribute('inst');\n      const ap = extRef.closest('AccessPoint')?.getAttribute('name');\n      const ln = extRef.closest('LN0') || extRef.closest('LN');\n      const [prefix, lnClass, inst] = ['prefix', 'lnClass', 'inst'].map(name =>\n        ln?.getAttribute(name)\n      );\n      const iedNames = Array.from(cb.getElementsByTagName('IEDName')).filter(\n        iedName =>\n          iedName.textContent === ied &&\n          (iedName.getAttribute('apRef') || ap) === ap &&\n          (iedName.getAttribute('ldInst') || ld) === ld &&\n          (iedName.getAttribute('prefix') || prefix) === prefix &&\n          (iedName.getAttribute('lnClass') || lnClass) === lnClass &&\n          (iedName.getAttribute('lnInst') || inst) === inst\n      );\n\n      iedNames.forEach(iedName => {\n        sinkReference.add(iedName);\n      });\n    });\n  });\n\n  const sourceReferences: Set<Element> = new Set();\n  sinkReference.forEach(iedName => {\n    sourceReferences.clear();\n\n    const target = findIEDNameTarget(iedName);\n\n    if (target)\n      getSourceReferences(target).forEach(sourceReference =>\n        sourceReferences.add(sourceReference)\n      );\n\n    extRefs.forEach(extRef => sourceReferences.delete(extRef));\n    if (sourceReferences.size === 0)\n      actions.push({\n        old: {\n          parent: iedName.parentElement!,\n          element: iedName,\n          reference: iedName.nextElementSibling,\n        },\n      });\n  });\n\n  return actions;\n}\n\nfunction disconnect(extRef: Element[]): WizardActor {\n  return (\n    inputs: WizardInputElement[],\n    wizard: Element,\n    list?: List | null\n  ): WizardAction[] => {\n    const items = <Set<number>>list!.index;\n    const selectedExtRefs = Array.from(items).map(index => extRef[index]);\n\n    const actions: WizardAction[] = [];\n    disconnectExtRefs(selectedExtRefs).forEach(action => actions.push(action));\n\n    return actions;\n  };\n}\n\nexport function selectExtRefsWizard(\n  sinkExtRefs: Element[],\n  sourceControlBlock: Element | null | undefined,\n  root: XMLDocument | Element\n): Wizard | undefined {\n  if (!sourceControlBlock) return undefined;\n\n  const iedName = sinkExtRefs[0].closest('IED')?.getAttribute('name');\n  const cbId = identity(sourceControlBlock);\n\n  return [\n    {\n      title: cbId + ' - ' + iedName,\n      primary: {\n        icon: 'delete',\n        label: get('disconnect'),\n        action: disconnect(sinkExtRefs),\n      },\n      secondary: {\n        icon: '',\n        label: get('back'),\n        action: openCommunicationMappingWizard(root),\n      },\n      content: [\n        html`<filtered-list multi\n          >${sinkExtRefs.map(extRef => {\n            const reference =\n              (extRef.getAttribute('prefix') ?? '') +\n              extRef.getAttribute('lnClass') +\n              (extRef.getAttribute('lnInst') ?? '') +\n              '>' +\n              extRef.getAttribute('doName') +\n              '.' +\n              (extRef.getAttribute('daName') ?? '');\n\n            return html`<mwc-check-list-item graphic=\"icon\" twoline>\n              <span>${reference}</span>\n              <span slot=\"secondary\"\n                >${extRef.getAttribute('ldInst') ?? ''}</span\n              >\n              <mwc-icon slot=\"graphic\">${inputIcon}</mwc-icon>\n            </mwc-check-list-item> `;\n          })}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n"]}