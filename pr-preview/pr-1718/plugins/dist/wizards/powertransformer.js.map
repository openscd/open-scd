{"version":3,"file":"powertransformer.js","sourceRoot":"","sources":["../../src/wizards/powertransformer.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport {\n  getValue,\n  isPublic,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport {\n  createElement,\n} from '@openscd/xml';\n\nimport { EditorAction } from '@openscd/core/foundation/deprecated/editor.js';\n\nimport { replaceNamingAction } from './foundation/actions.js';\n\nconst defaultPowerTransformerType = 'PTR';\n\nexport function createAction(parent: Element): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const name = getValue(inputs.find(i => i.label === 'name')!);\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n    const element = createElement(parent.ownerDocument, 'PowerTransformer', {\n      name,\n      desc,\n      type: defaultPowerTransformerType,\n    });\n\n    const action = {\n      new: {\n        parent,\n        element,\n      },\n    };\n\n    return [action];\n  };\n}\n\nexport function renderPowerTransformerWizard(\n  name: string | null,\n  desc: string | null,\n  type: string | null,\n  reservedNames: string[]\n): TemplateResult[] {\n  return [\n    html`<wizard-textfield\n      label=\"name\"\n      .maybeValue=${name}\n      helper=\"${get('powertransformer.wizard.nameHelper')}\"\n      required\n      validationMessage=\"${get('textfield.required')}\"\n      dialogInitialFocus\n      .reservedValues=${reservedNames}\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"desc\"\n      .maybeValue=${desc}\n      nullable\n      helper=\"${get('powertransformer.wizard.descHelper')}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"type\"\n      .maybeValue=${type}\n      disabled\n      helper=\"${get('powertransformer.wizard.typeHelper')}\"\n    ></wizard-textfield>`,\n  ];\n}\n\nexport function reservedNamesPowerTransformer(\n  parent: Element,\n  currentName?: string | null\n): string[] {\n  return Array.from(parent.querySelectorAll('PowerTransformer'))\n    .filter(isPublic)\n    .map(pwt => pwt.getAttribute('name') ?? '')\n    .filter(name => currentName && name !== currentName);\n}\n\nexport function createPowerTransformerWizard(parent: Element): Wizard {\n  const reservedNames = reservedNamesPowerTransformer(parent);\n\n  return [\n    {\n      title: get('powertransformer.wizard.title.add'),\n      element: undefined,\n      primary: {\n        icon: '',\n        label: get('add'),\n        action: createAction(parent),\n      },\n      content: renderPowerTransformerWizard(\n        '',\n        null,\n        defaultPowerTransformerType,\n        reservedNames\n      ),\n    },\n  ];\n}\n\nexport function editPowerTransformerWizard(element: Element): Wizard {\n  const reservedNames = reservedNamesPowerTransformer(\n    <Element>element.parentNode!,\n    element.getAttribute('name')\n  );\n\n  return [\n    {\n      title: get('powertransformer.wizard.title.edit'),\n      element,\n      primary: {\n        icon: 'edit',\n        label: get('save'),\n        action: replaceNamingAction(element),\n      },\n      content: renderPowerTransformerWizard(\n        element.getAttribute('name'),\n        element.getAttribute('desc'),\n        element.getAttribute('type'),\n        reservedNames\n      ),\n    },\n  ];\n}\n"]}