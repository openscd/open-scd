{"version":3,"file":"trgops.js","sourceRoot":"","sources":["../../src/wizards/trgops.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-list/mwc-list-item';\n\nimport '@openscd/open-scd/src/wizard-checkbox.js';\nimport '@openscd/open-scd/src/wizard-select.js';\n\nimport { cloneElement } from '@openscd/xml';\n\nimport {\n  getValue,\n  Wizard,\n  WizardAction,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\ninterface ContentOptions {\n  dchg: string | null;\n  qchg: string | null;\n  dupd: string | null;\n  period: string | null;\n  gi: string | null;\n}\n\nexport function contentTrgOpsWizard(option: ContentOptions): TemplateResult[] {\n  return Object.entries(option).map(\n    ([key, value]) =>\n      html`<wizard-checkbox\n        label=\"${key}\"\n        .maybeValue=${value}\n        nullable\n        helper=\"${get(`scl.${key}`)}\"\n      ></wizard-checkbox>`\n  );\n}\n\nfunction updateTrgOpsAction(element: Element): WizardActor {\n  return (inputs: WizardInputElement[]): WizardAction[] => {\n    const dchg = getValue(inputs.find(i => i.label === 'dchg')!);\n    const qchg = getValue(inputs.find(i => i.label === 'qchg')!);\n    const dupd = getValue(inputs.find(i => i.label === 'dupd')!);\n    const period = getValue(inputs.find(i => i.label === 'period')!);\n    const gi = getValue(inputs.find(i => i.label === 'gi')!);\n\n    if (\n      dchg === element.getAttribute('dchg') &&\n      qchg === element.getAttribute('qchg') &&\n      dupd === element.getAttribute('dupd') &&\n      period === element.getAttribute('period') &&\n      gi === element.getAttribute('gi')\n    )\n      return [];\n\n    const newElement = cloneElement(element, {\n      dchg,\n      qchg,\n      dupd,\n      period,\n      gi,\n    });\n    const trgOptAction = { old: { element }, new: { element: newElement } };\n\n    return [trgOptAction];\n  };\n}\n\nexport function editTrgOpsWizard(element: Element): Wizard {\n  const [dchg, qchg, dupd, period, gi] = [\n    'dchg',\n    'qchg',\n    'dupd',\n    'period',\n    'gi',\n  ].map(trgOp => element.getAttribute(trgOp));\n\n  return [\n    {\n      title: get('wizard.title.edit', { tagName: element.tagName }),\n      primary: {\n        icon: 'save',\n        label: get('save'),\n        action: updateTrgOpsAction(element),\n      },\n      content: contentTrgOpsWizard({ dchg, qchg, dupd, period, gi }),\n    },\n  ];\n}\n"]}