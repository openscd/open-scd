{"version":3,"file":"ln.js","sourceRoot":"","sources":["../../src/wizards/ln.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport {\n  getValue,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport { cloneElement } from '@openscd/xml';\n\nimport { SimpleAction } from '@openscd/core/foundation/deprecated/editor.js';\n\nexport function renderLNWizard(\n  lnType: string | null,\n  desc: string | null,\n  prefix: string | null,\n  lnClass: string | null,\n  inst: string | null,\n  reservedInst: string[]\n): TemplateResult[] {\n  return [\n    html`<wizard-textfield\n      label=\"lnType\"\n      .maybeValue=${lnType}\n      readonly\n      required\n      helper=\"${get('ln.wizard.lnTypeHelper')}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"desc\"\n      .maybeValue=${desc}\n      nullable\n      helper=\"${get('ln.wizard.descHelper')}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"prefix\"\n      nullable\n      .maybeValue=${prefix}\n      helper=\"${get('ln.wizard.prefixHelper')}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"lnClass\"\n      readonly\n      required\n      .maybeValue=${lnClass}\n      helper=\"${get('ln.wizard.lnClassHelper')}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"inst\"\n      .maybeValue=${inst}\n      helper=\"${get('ln.wizard.instHelper')}\"\n      pattern=\"[0-9]{1,12}\"\n      required\n      .reservedValues=${reservedInst}\n    ></wizard-textfield>`,\n  ];\n}\n\nfunction updateAction(element: Element): WizardActor {\n  return (inputs: WizardInputElement[]): SimpleAction[] => {\n    const ldAttrs: Record<string, string | null> = {};\n    const ldKeys = ['lnType', 'desc', 'prefix', 'lnClass', 'inst'];\n    ldKeys.forEach(key => {\n      ldAttrs[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n\n    if (!ldKeys.some(key => ldAttrs[key] !== element.getAttribute(key))) {\n      return [];\n    }\n\n    const ldevice = element.closest('LDevice');\n    if (ldevice) {\n      const newPrefix = ldAttrs['prefix'] || '';\n      const newLnClass = ldAttrs['lnClass'];\n      const newInst = ldAttrs['inst'];\n\n      const isDuplicate = Array.from(\n        ldevice.querySelectorAll(':scope > LN')\n      ).some(\n        ln =>\n          ln !== element &&\n          (ln.getAttribute('prefix') || '') === newPrefix &&\n          ln.getAttribute('lnClass') === newLnClass &&\n          ln.getAttribute('inst') === newInst\n      );\n\n      if (isDuplicate) {\n        return [];\n      }\n    }\n\n    const newElement = cloneElement(element, ldAttrs);\n    return [\n      {\n        old: { element },\n        new: { element: newElement },\n      },\n    ];\n  };\n}\n\nfunction reservedInstLN(\n  currentElement: Element,\n  prefixInput?: string\n): string[] {\n  const ldevice = currentElement.closest('LDevice');\n  if (!ldevice) return [];\n\n  const currentLnClass = currentElement.getAttribute('lnClass');\n\n  const targetPrefix =\n    prefixInput !== undefined\n      ? prefixInput\n      : currentElement.getAttribute('prefix') || '';\n\n  const lnElements = Array.from(ldevice.querySelectorAll(':scope > LN')).filter(\n    ln =>\n      ln !== currentElement &&\n      (ln.getAttribute('prefix') || '') === targetPrefix &&\n      ln.getAttribute('lnClass') === currentLnClass\n  );\n\n  return lnElements\n    .map(ln => ln.getAttribute('inst'))\n    .filter(inst => inst !== null) as string[];\n}\n\nexport function editLNWizard(element: Element): Wizard {\n  return [\n    {\n      title: get('ln.wizard.title.edit'),\n      element,\n      primary: {\n        icon: 'edit',\n        label: get('save'),\n        action: updateAction(element),\n      },\n      content: renderLNWizard(\n        element.getAttribute('lnType'),\n        element.getAttribute('desc'),\n        element.getAttribute('prefix'),\n        element.getAttribute('lnClass'),\n        element.getAttribute('inst'),\n        reservedInstLN(element)\n      ),\n    },\n  ];\n}\n"]}