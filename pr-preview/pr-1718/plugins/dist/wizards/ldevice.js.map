{"version":3,"file":"ldevice.js","sourceRoot":"","sources":["../../src/wizards/ldevice.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAkB,MAAM,aAAa,CAAC;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAEpC,OAAO,oBAAoB,CAAC;AAC5B,OAAO,kCAAkC,CAAC;AAE1C,OAAO,2CAA2C,CAAC;AACnD,OAAO,EACL,QAAQ,GAIT,MAAM,qCAAqC,CAAC;AAE7C,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAG5C,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAElD,MAAM,kBAAkB,GACtB,4BAA4B;IAC5B,6BAA6B;IAC7B,6BAA6B;IAC7B,kCAAkC;IAClC,gCAAgC;IAChC,oBAAoB,CAAC;AAEvB,MAAM,UAAU,mBAAmB,CACjC,MAAqB,EACrB,QAAiB,EACjB,IAAmB,EACnB,IAAmB,EACnB,YAAsB;IAEtB,OAAO;QACL,QAAQ;YACN,CAAC,CAAC,IAAI,CAAA;;wBAEY,MAAM;oBACV,GAAG,CAAC,oCAAoC,CAAC;;;;6BAIhC;YACvB,CAAC,CAAC,IAAI,CAAA;;wBAEY,MAAM;;oBAEV,GAAG,CAAC,2BAA2B,CAAC;+BACrB,GAAG,CAAC,oBAAoB,CAAC;;qBAEnC,kBAAkB;6BACV;QACzB,IAAI,CAAA;;oBAEY,IAAI;;gBAER,GAAG,CAAC,2BAA2B,CAAC;iBAC/B,QAAQ,CAAC,gBAAgB;yBACjB;QACrB,IAAI,CAAA;;oBAEY,IAAI;;gBAER,GAAG,CAAC,2BAA2B,CAAC;2BACrB,GAAG,CAAC,oBAAoB,CAAC;iBACnC,QAAQ,CAAC,gBAAgB;wBAClB,YAAY;yBACX;KACtB,CAAC;AACJ,CAAC;AAED,SAAS,eAAe,CAAC,OAAgB;IACvC,MAAM,UAAU,GAAG,OAAO;SACvB,OAAO,CAAC,KAAK,CAAC;QACf,EAAE,aAAa,CAAC,uBAAuB,CAAC,CAAC;IAC3C,IAAI,UAAU;QAAE,OAAO,IAAI,CAAC;IAE5B,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,mBAAmB,CAAC,cAAuB;IAClD,MAAM,GAAG,GAAG,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC1C,IAAI,CAAC,GAAG;QAAE,OAAO,EAAE,CAAC;IAEpB,OAAO,KAAK,CAAC,IAAI,CACf,GAAG,CAAC,gBAAgB,CAAC,yCAAyC,CAAC,CAChE;SACE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SACxC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;AAClE,CAAC;AAED,SAAS,YAAY,CAAC,OAAgB;IACpC,OAAO,CAAC,MAA4B,EAAkB,EAAE;QACtD,MAAM,OAAO,GAAkC,EAAE,CAAC;QAClD,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,CAAE,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;YAClE,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAClD,OAAO;gBACL;oBACE,GAAG,EAAE,EAAE,OAAO,EAAE;oBAChB,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE;iBAC7B;aACF,CAAC;SACH;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,OAAgB;IAChD,OAAO;QACL;YACE,KAAK,EAAE,GAAG,CAAC,2BAA2B,CAAC;YACvC,OAAO;YACP,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC;gBAClB,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC;aAC9B;YACD,OAAO,EAAE,mBAAmB,CAC1B,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,EAC9B,CAAC,eAAe,CAAC,OAAO,CAAC,EACzB,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,EAC5B,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,EAC5B,mBAAmB,CAAC,OAAO,CAAC,CAC7B;SACF;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-list-item';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport {\n  getValue,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport { cloneElement } from '@openscd/xml';\n\nimport { SimpleAction } from '@openscd/core/foundation/deprecated/editor.js';\nimport { patterns } from './foundation/limits.js';\n\nconst lDeviceNamePattern =\n  '[A-Za-z][0-9A-Za-z_]{0,2}|' +\n  '[A-Za-z][0-9A-Za-z_]{4,63}|' +\n  '[A-MO-Za-z][0-9A-Za-z_]{3}|' +\n  'N[0-9A-Za-np-z_][0-9A-Za-z_]{2}|' +\n  'No[0-9A-Za-mo-z_][0-9A-Za-z_]|' +\n  'Non[0-9A-Za-df-z_]';\n\nexport function renderLdeviceWizard(\n  ldName: string | null,\n  readOnly: boolean,\n  desc: string | null,\n  inst: string | null,\n  reservedInst: string[]\n): TemplateResult[] {\n  return [\n    readOnly\n      ? html`<wizard-textfield\n          label=\"ldName\"\n          .maybeValue=${ldName}\n          helper=\"${get('ldevice.wizard.noNameSupportHelper')}\"\n          helperPersistent\n          readOnly\n          disabled\n        ></wizard-textfield>`\n      : html`<wizard-textfield\n          label=\"ldName\"\n          .maybeValue=${ldName}\n          nullable\n          helper=\"${get('ldevice.wizard.nameHelper')}\"\n          validationMessage=\"${get('textfield.required')}\"\n          dialogInitialFocus\n          pattern=\"${lDeviceNamePattern}\"\n        ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"desc\"\n      .maybeValue=${desc}\n      nullable\n      helper=\"${get('ldevice.wizard.descHelper')}\"\n      pattern=\"${patterns.normalizedString}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"inst\"\n      .maybeValue=${inst}\n      required\n      helper=\"${get('ldevice.wizard.instHelper')}\"\n      validationMessage=\"${get('textfield.required')}\"\n      pattern=\"${patterns.normalizedString}\"\n      .reservedValues=${reservedInst}\n    ></wizard-textfield>`,\n  ];\n}\n\nfunction ldNameIsAllowed(element: Element): boolean {\n  const ConfLdName = element\n    .closest('IED')\n    ?.querySelector('Services > ConfLdName');\n  if (ConfLdName) return true;\n\n  return false;\n}\n\nfunction reservedInstLDevice(currentElement: Element): string[] {\n  const ied = currentElement.closest('IED');\n  if (!ied) return [];\n\n  return Array.from(\n    ied.querySelectorAll(':scope > AccessPoint > Server > LDevice')\n  )\n    .map(ld => ld.getAttribute('inst') ?? '')\n    .filter(name => name !== currentElement.getAttribute('inst'));\n}\n\nfunction updateAction(element: Element): WizardActor {\n  return (inputs: WizardInputElement[]): SimpleAction[] => {\n    const ldAttrs: Record<string, string | null> = {};\n    const ldKeys = ['desc', 'inst'];\n    ldKeys.forEach(key => {\n      ldAttrs[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n\n    if (ldKeys.some(key => ldAttrs[key] !== element.getAttribute(key))) {\n      const newElement = cloneElement(element, ldAttrs);\n      return [\n        {\n          old: { element },\n          new: { element: newElement },\n        },\n      ];\n    }\n    return [];\n  };\n}\n\nexport function editLDeviceWizard(element: Element): Wizard {\n  return [\n    {\n      title: get('ldevice.wizard.title.edit'),\n      element,\n      primary: {\n        icon: 'edit',\n        label: get('save'),\n        action: updateAction(element),\n      },\n      content: renderLdeviceWizard(\n        element.getAttribute('ldName'),\n        !ldNameIsAllowed(element),\n        element.getAttribute('desc'),\n        element.getAttribute('inst'),\n        reservedInstLDevice(element)\n      ),\n    },\n  ];\n}\n"]}