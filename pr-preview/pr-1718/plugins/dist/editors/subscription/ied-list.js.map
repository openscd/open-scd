{"version":3,"file":"ied-list.js","sourceRoot":"","sources":["../../../src/editors/subscription/ied-list.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,GAAG,EACH,aAAa,EACb,IAAI,EACJ,UAAU,EACV,QAAQ,GAET,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAEpC,OAAO,oBAAoB,CAAC;AAC5B,OAAO,kCAAkC,CAAC;AAE1C,OAAO,wCAAwC,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAE,MAAM,qCAAqC,CAAC;AACvE,OAAO,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAE5E,IAAI,WAAgC,CAAC;AAErC,SAAS,8BAA8B;IACrC,WAAW,GAAG,SAAS,CAAC;AAC1B,CAAC;AACD,gBAAgB,CAAC,UAAU,EAAE,8BAA8B,CAAC,CAAC;AAGtD,IAAM,OAAO,GAAb,MAAM,OAAQ,SAAQ,UAAU;IAAhC;;QAIL,cAAS,GAAG,CAAC,CAAC,CAAC;IA4CjB,CAAC;IAvCS,WAAW,CAAC,OAAgB;QAClC,WAAW,GAAG,OAAO,CAAC;QAEtB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;IAES,OAAO;QACf,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;IAES,YAAY;QACpB,WAAW,GAAG,SAAS,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;UAEL,GAAG,CAAC,gBAAgB,IAAI,CAAC,WAAW,0BAA0B,CAAC;;;UAG/D,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAC5B,GAAG,CAAC,EAAE,CACJ,IAAI,CAAA;;yBAES,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;;;wBAG5B,gBAAgB,CAAC,GAAG,CAAC;;;aAGhC,CACJ;;eAEM,CAAC;IACd,CAAC;;AAEM,cAAM,GAAG,GAAG,CAAA;MACf,MAAM;GACT,CAAC;AA7CF;IADC,QAAQ,EAAE;oCACO;AAElB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0CACZ;AAGf;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;4CACG;AAPnB,OAAO;IADnB,aAAa,CAAC,UAAU,CAAC;GACb,OAAO,CAgDnB;SAhDY,OAAO","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-icon';\nimport '@material/mwc-list/mwc-list-item';\n\nimport '@openscd/open-scd/src/filtered-list.js';\nimport { getNameAttribute } from '@openscd/open-scd/src/foundation.js';\nimport { getOrderedIeds, newIEDSelectEvent, styles } from './foundation.js';\n\nlet selectedIed: Element | undefined;\n\nfunction onOpenDocResetSelectedGooseMsg() {\n  selectedIed = undefined;\n}\naddEventListener('open-doc', onOpenDocResetSelectedGooseMsg);\n\n@customElement('ied-list')\nexport class IedList extends LitElement {\n  @property()\n  doc!: XMLDocument;\n  @property({ type: Number })\n  editCount = -1;\n\n  @property({ type: String })\n  serviceType?: 'goose' | 'smv';\n\n  private onIedSelect(element: Element): void {\n    selectedIed = element;\n\n    this.dispatchEvent(newIEDSelectEvent(selectedIed));\n  }\n\n  protected updated(): void {\n    this.dispatchEvent(newIEDSelectEvent(selectedIed));\n  }\n\n  protected firstUpdated(): void {\n    selectedIed = undefined;\n  }\n\n  render(): TemplateResult {\n    return html` <section tabindex=\"0\">\n      <h1>\n        ${get(`subscription.${this.serviceType}.subscriber.iedListTitle`)}\n      </h1>\n      <filtered-list activatable>\n        ${getOrderedIeds(this.doc).map(\n          ied =>\n            html`\n              <mwc-list-item\n                @click=${() => this.onIedSelect(ied)}\n                graphic=\"icon\"\n              >\n                <span>${getNameAttribute(ied)}</span>\n                <mwc-icon slot=\"graphic\">developer_board</mwc-icon>\n              </mwc-list-item>\n            `\n        )}\n      </filtered-list>\n    </section>`;\n  }\n\n  static styles = css`\n    ${styles}\n  `;\n}\n"]}