{"version":3,"file":"substation.js","sourceRoot":"","sources":["../../src/wizards/substation.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-checkbox';\nimport '@material/mwc-formfield';\n\nimport { createElement } from '@openscd/xml';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport {\n  getValue,\n  Wizard,\n  WizardAction,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\nimport { guessVoltageLevel } from '../editors/substation/guess-wizard.js';\nimport { updateNamingAttributeWithReferencesAction } from './foundation/actions.js';\n\nfunction render(\n  name: string,\n  desc: string | null,\n  guessable: boolean\n): TemplateResult[] {\n  return [\n    html`<wizard-textfield\n      label=\"name\"\n      .maybeValue=${name}\n      helper=\"${get('substation.wizard.nameHelper')}\"\n      required\n      validationMessage=\"${get('textfield.required')}\"\n      dialogInitialFocus\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"desc\"\n      .maybeValue=${desc}\n      nullable\n      helper=\"${get('substation.wizard.descHelper')}\"\n    ></wizard-textfield>`,\n    guessable\n      ? html`<mwc-formfield label=\"${get('guess.wizard.primary')}\">\n          <mwc-checkbox></mwc-checkbox>\n        </mwc-formfield>`\n      : html``,\n  ];\n}\n\nexport function createAction(parent: Element): WizardActor {\n  return (inputs: WizardInputElement[], wizard: Element): WizardAction[] => {\n    const name = getValue(inputs.find(i => i.label === 'name')!);\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n    const guess = wizard.shadowRoot?.querySelector('mwc-checkbox')?.checked;\n    parent.ownerDocument.createElement('Substation');\n    const substation = createElement(parent.ownerDocument, 'Substation', {\n      name,\n      desc,\n    });\n\n    if (guess)\n      return [() => guessVoltageLevel(parent.ownerDocument, substation)];\n\n    return [{ new: { parent, element: substation } }];\n  };\n}\n\nexport function createSubstationWizard(parent: Element): Wizard {\n  const guessable =\n    parent.ownerDocument.querySelector('Substation') === null &&\n    parent.tagName === 'SCL';\n\n  return [\n    {\n      title: get('substation.wizard.title.add'),\n      element: undefined,\n      primary: {\n        icon: 'add',\n        label: get('add'),\n        action: createAction(parent),\n      },\n      content: render('', '', guessable),\n    },\n  ];\n}\n\nexport function substationEditWizard(element: Element): Wizard {\n  return [\n    {\n      title: get('substation.wizard.title.edit'),\n      element,\n      primary: {\n        icon: 'edit',\n        label: get('save'),\n        action: updateNamingAttributeWithReferencesAction(\n          element,\n          'substation.action.updatesubstation'\n        ),\n      },\n      content: render(\n        element.getAttribute('name') ?? '',\n        element.getAttribute('desc'),\n        false\n      ),\n    },\n  ];\n}\n"]}