{"version":3,"file":"fcda-binding-list.js","sourceRoot":"","sources":["../../../src/editors/subscription/fcda-binding-list.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  state,\n  TemplateResult,\n} from 'lit-element';\nimport { nothing, SVGTemplateResult } from 'lit-html';\nimport { classMap } from 'lit-html/directives/class-map.js';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-icon';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-list-item';\nimport '@material/mwc-list/mwc-check-list-item';\nimport '@material/mwc-menu';\nimport '@material/mwc-icon-button';\n\nimport { Icon } from '@material/mwc-icon';\nimport { List } from '@material/mwc-list';\nimport { Menu } from '@material/mwc-menu';\n\nimport {\n  getDescriptionAttribute,\n  getNameAttribute,\n  identity,\n  newWizardEvent,\n} from '@openscd/open-scd/src/foundation.js';\nimport { gooseIcon, smvIcon } from '@openscd/open-scd/src/icons/icons.js';\nimport { wizards } from '../../wizards/wizard-library.js';\n\nimport {\n  getFcdaSubtitleValue,\n  getFcdaTitleValue,\n  newFcdaSelectEvent,\n  styles,\n  SubscriptionChangedEvent,\n} from './foundation.js';\nimport { getSubscribedExtRefElements } from './later-binding/foundation.js';\n\ntype controlTag = 'SampledValueControl' | 'GSEControl';\n\ntype iconLookup = Record<controlTag, SVGTemplateResult>;\n\n/**\n * A sub element for showing all Goose/Sampled Value Controls.\n * A control can be edited using the standard wizard.\n * And when selecting a FCDA Element a custom event is fired, so other list can be updated.\n */\n@customElement('fcda-binding-list')\nexport class FcdaBindingList extends LitElement {\n  @property({ attribute: false })\n  doc!: XMLDocument;\n  @property({ type: Number })\n  editCount = -1;\n  @property()\n  controlTag!: controlTag;\n  @property()\n  includeLaterBinding!: boolean;\n\n  // The selected Elements when a FCDA Line is clicked.\n  @state()\n  private selectedControlElement: Element | undefined;\n  @state()\n  private selectedFcdaElement: Element | undefined;\n  @state()\n  private extRefCounters = new Map();\n\n  @property({\n    type: Boolean,\n    hasChanged() {\n      return false;\n    },\n  })\n  get hideSubscribed(): boolean {\n    return (\n      localStorage.getItem(\n        `fcda-binding-list-${\n          this.includeLaterBinding ? 'later-binding' : 'data-binding'\n        }-${this.controlTag}$hideSubscribed`\n      ) === 'true' ?? false\n    );\n  }\n\n  set hideSubscribed(value: boolean) {\n    const oldValue = this.hideSubscribed;\n    localStorage.setItem(\n      `fcda-binding-list-${\n        this.includeLaterBinding ? 'later-binding' : 'data-binding'\n      }-${this.controlTag}$hideSubscribed`,\n      `${value}`\n    );\n    this.requestUpdate('hideSubscribed', oldValue);\n  }\n\n  @property({\n    type: Boolean,\n    hasChanged() {\n      return false;\n    },\n  })\n  get hideNotSubscribed(): boolean {\n    return (\n      localStorage.getItem(\n        `fcda-binding-list-${\n          this.includeLaterBinding ? 'later-binding' : 'data-binding'\n        }-${this.controlTag}$hideNotSubscribed`\n      ) === 'true' ?? false\n    );\n  }\n\n  set hideNotSubscribed(value: boolean) {\n    const oldValue = this.hideNotSubscribed;\n    localStorage.setItem(\n      `fcda-binding-list-${\n        this.includeLaterBinding ? 'later-binding' : 'data-binding'\n      }-${this.controlTag}$hideNotSubscribed`,\n      `${value}`\n    );\n    this.requestUpdate('hideNotSubscribed', oldValue);\n  }\n\n  @query('.actions-menu') actionsMenu!: Menu;\n  @query('.actions-menu-icon') actionsMenuIcon!: Icon;\n  @query('.control-block-list') controlBlockList!: List;\n\n  private iconControlLookup: iconLookup = {\n    SampledValueControl: smvIcon,\n    GSEControl: gooseIcon,\n  };\n\n  constructor() {\n    super();\n\n    this.resetSelection = this.resetSelection.bind(this);\n    parent.addEventListener('open-doc', this.resetSelection);\n\n    const parentDiv = this.closest('.container');\n    if (parentDiv) {\n      this.resetExtRefCount = this.resetExtRefCount.bind(this);\n      parentDiv.addEventListener('subscription-changed', this.resetExtRefCount);\n    }\n  }\n\n  private getControlElements(): Element[] {\n    if (this.doc) {\n      return Array.from(this.doc.querySelectorAll(`LN0 > ${this.controlTag}`));\n    }\n    return [];\n  }\n\n  private getFcdaElements(controlElement: Element): Element[] {\n    const lnElement = controlElement.parentElement;\n    if (lnElement) {\n      return Array.from(\n        lnElement.querySelectorAll(\n          `:scope > DataSet[name=${controlElement.getAttribute(\n            'datSet'\n          )}] > FCDA`\n        )\n      );\n    }\n    return [];\n  }\n\n  private resetExtRefCount(event: SubscriptionChangedEvent): void {\n    if (event.detail.control && event.detail.fcda) {\n      const controlBlockFcdaId = `${identity(event.detail.control)} ${identity(\n        event.detail.fcda\n      )}`;\n      this.extRefCounters.delete(controlBlockFcdaId);\n    }\n  }\n\n  private getExtRefCount(\n    fcdaElement: Element,\n    controlElement: Element\n  ): number {\n    const controlBlockFcdaId = `${identity(controlElement)} ${identity(\n      fcdaElement\n    )}`;\n    if (!this.extRefCounters.has(controlBlockFcdaId)) {\n      const extRefCount = getSubscribedExtRefElements(\n        <Element>this.doc.getRootNode(),\n        this.controlTag,\n        fcdaElement,\n        controlElement!,\n        this.includeLaterBinding\n      ).length;\n      this.extRefCounters.set(controlBlockFcdaId, extRefCount);\n    }\n    return this.extRefCounters.get(controlBlockFcdaId);\n  }\n\n  private openEditWizard(controlElement: Element): void {\n    const wizard = wizards[this.controlTag].edit(controlElement);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  private resetSelection(): void {\n    this.selectedControlElement = undefined;\n    this.selectedFcdaElement = undefined;\n  }\n\n  private onFcdaSelect(controlElement: Element, fcdaElement: Element) {\n    this.resetSelection();\n\n    this.selectedControlElement = controlElement;\n    this.selectedFcdaElement = fcdaElement;\n  }\n\n  protected updated(_changedProperties: PropertyValues): void {\n    super.updated(_changedProperties);\n\n    // When a new document is loaded or the selection is changed\n    // we will fire the FCDA Select Event.\n    if (\n      _changedProperties.has('doc') ||\n      _changedProperties.has('selectedControlElement') ||\n      _changedProperties.has('selectedFcdaElement')\n    ) {\n      this.dispatchEvent(\n        newFcdaSelectEvent(\n          this.selectedControlElement,\n          this.selectedFcdaElement\n        )\n      );\n    }\n\n    // When a new document is loaded we will reset the Map to clear old entries.\n    if (_changedProperties.has('doc')) {\n      this.extRefCounters = new Map();\n    }\n  }\n\n  renderFCDA(controlElement: Element, fcdaElement: Element): TemplateResult {\n    const fcdaCount = this.getExtRefCount(fcdaElement, controlElement);\n\n    const filterClasses = {\n      subitem: true,\n      'show-subscribed': fcdaCount !== 0,\n      'show-not-subscribed': fcdaCount === 0,\n    };\n\n    return html`<mwc-list-item\n      graphic=\"large\"\n      ?hasMeta=${fcdaCount !== 0}\n      twoline\n      class=\"${classMap(filterClasses)}\"\n      @click=${() => this.onFcdaSelect(controlElement, fcdaElement)}\n      value=\"${identity(controlElement)}\n             ${identity(fcdaElement)}\"\n    >\n      <span>${getFcdaTitleValue(fcdaElement)}</span>\n      <span slot=\"secondary\">${getFcdaSubtitleValue(fcdaElement)}</span>\n      <mwc-icon slot=\"graphic\">subdirectory_arrow_right</mwc-icon>\n      ${fcdaCount !== 0 ? html`<span slot=\"meta\">${fcdaCount}</span>` : nothing}\n    </mwc-list-item>`;\n  }\n\n  updateBaseFilterState(): void {\n    !this.hideSubscribed\n      ? this.controlBlockList!.classList.add('show-subscribed')\n      : this.controlBlockList!.classList.remove('show-subscribed');\n    !this.hideNotSubscribed\n      ? this.controlBlockList!.classList.add('show-not-subscribed')\n      : this.controlBlockList!.classList.remove('show-not-subscribed');\n  }\n\n  protected firstUpdated(): void {\n    this.actionsMenu.anchor = <HTMLElement>this.actionsMenuIcon;\n\n    this.actionsMenu.addEventListener('closed', () => {\n      this.hideSubscribed = !(<Set<number>>this.actionsMenu.index).has(0);\n      this.hideNotSubscribed = !(<Set<number>>this.actionsMenu.index).has(1);\n      this.updateBaseFilterState();\n    });\n\n    this.updateBaseFilterState();\n  }\n\n  renderTitle(): TemplateResult {\n    const menuClasses = {\n      'filter-off': this.hideSubscribed || this.hideNotSubscribed,\n    };\n    return html`<h1>\n      ${get(`subscription.${this.controlTag}.controlBlockList.title`)}\n      <mwc-icon-button\n        class=\"actions-menu-icon ${classMap(menuClasses)}\"\n        icon=\"filter_list\"\n        @click=${() => {\n          if (!this.actionsMenu.open) this.actionsMenu.show();\n          else this.actionsMenu.close();\n        }}\n      ></mwc-icon-button>\n      <mwc-menu\n        multi\n        class=\"actions-menu\"\n        corner=\"BOTTOM_RIGHT\"\n        menuCorner=\"END\"\n      >\n        <mwc-check-list-item\n          class=\"filter-subscribed\"\n          left\n          ?selected=${!this.hideSubscribed}\n        >\n          <span>${get('subscription.subscriber.subscribed')}</span>\n        </mwc-check-list-item>\n        <mwc-check-list-item\n          class=\"filter-not-subscribed\"\n          left\n          ?selected=${!this.hideNotSubscribed}\n        >\n          <span>${get('subscription.subscriber.notSubscribed')}</span>\n        </mwc-check-list-item>\n      </mwc-menu>\n    </h1> `;\n  }\n\n  renderControls(controlElements: Element[]): TemplateResult {\n    return html`<filtered-list class=\"control-block-list\" activatable>\n      ${controlElements\n        .filter(controlElement => this.getFcdaElements(controlElement).length)\n        .map(controlElement => {\n          const fcdaElements = this.getFcdaElements(controlElement);\n          const showSubscribed = fcdaElements.some(\n            fcda => this.getExtRefCount(fcda, controlElement) !== 0\n          );\n          const showNotSubscribed = fcdaElements.some(\n            fcda => this.getExtRefCount(fcda, controlElement) === 0\n          );\n\n          const filterClasses = {\n            control: true,\n            'show-subscribed': showSubscribed,\n            'show-not-subscribed': showNotSubscribed,\n          };\n\n          return html`\n            <mwc-list-item\n              noninteractive\n              class=\"${classMap(filterClasses)}\"\n              graphic=\"icon\"\n              twoline\n              hasMeta\n              value=\"${identity(controlElement)}${fcdaElements\n                .map(\n                  fcdaElement => `\n                        ${getFcdaTitleValue(fcdaElement)}\n                        ${getFcdaSubtitleValue(fcdaElement)}\n                        ${identity(fcdaElement)}`\n                )\n                .join('')}\"\n            >\n              <mwc-icon-button\n                slot=\"meta\"\n                icon=\"edit\"\n                class=\"interactive\"\n                @click=${() => this.openEditWizard(controlElement)}\n              ></mwc-icon-button>\n              <span\n                >${getNameAttribute(controlElement)}\n                ${getDescriptionAttribute(controlElement)\n                  ? html`${getDescriptionAttribute(controlElement)}`\n                  : nothing}</span\n              >\n              <span slot=\"secondary\">${identity(controlElement)}</span>\n              <mwc-icon slot=\"graphic\"\n                >${this.iconControlLookup[this.controlTag]}</mwc-icon\n              >\n            </mwc-list-item>\n            <li divider role=\"separator\"></li>\n            ${fcdaElements.map(fcdaElement =>\n              this.renderFCDA(controlElement, fcdaElement)\n            )}\n          `;\n        })}\n    </filtered-list>`;\n  }\n\n  render(): TemplateResult {\n    const controlElements = this.getControlElements();\n    return html`<section tabindex=\"0\">\n      ${this.renderTitle()}\n      ${controlElements\n        ? this.renderControls(controlElements)\n        : html`<h4>${get('subscription.subscriber.notSubscribed')}</h4> `}\n    </section>`;\n  }\n\n  static styles = css`\n    ${styles}\n\n    mwc-list-item.hidden[noninteractive] + li[divider] {\n      display: none;\n    }\n\n    mwc-list-item {\n      --mdc-list-item-meta-size: 48px;\n    }\n\n    section {\n      position: relative;\n    }\n\n    .actions-menu-icon {\n      float: right;\n    }\n\n    .actions-menu-icon.filter-off {\n      color: var(--secondary);\n      background-color: var(--mdc-theme-background);\n    }\n\n    /* Filtering rules for control blocks end up implementing logic to allow\n    very fast CSS response. The following rules appear to be minimal but can be\n    hard to understand intuitively for the multiple conditions. If modifying,\n    it is suggested to create a truth-table to check for side-effects */\n\n    /* remove all control blocks if no filters */\n    filtered-list.control-block-list:not(.show-subscribed, .show-not-subscribed)\n      mwc-list-item {\n      display: none;\n    }\n\n    /* remove control blocks taking care to respect multiple conditions */\n    filtered-list.control-block-list.show-not-subscribed:not(.show-subscribed)\n      mwc-list-item.control.show-subscribed:not(.show-not-subscribed) {\n      display: none;\n    }\n\n    filtered-list.control-block-list.show-subscribed:not(.show-not-subscribed)\n      mwc-list-item.control.show-not-subscribed:not(.show-subscribed) {\n      display: none;\n    }\n\n    /* remove fcdas if not part of filter */\n    filtered-list.control-block-list:not(.show-not-subscribed)\n      mwc-list-item.subitem.show-not-subscribed {\n      display: none;\n    }\n\n    filtered-list.control-block-list:not(.show-subscribed)\n      mwc-list-item.subitem.show-subscribed {\n      display: none;\n    }\n\n    .interactive {\n      pointer-events: all;\n    }\n\n    .subitem {\n      padding-left: var(--mdc-list-side-padding, 16px);\n    }\n  `;\n}\n"]}