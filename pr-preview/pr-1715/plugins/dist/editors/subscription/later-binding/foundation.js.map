{"version":3,"file":"foundation.js","sourceRoot":"","sources":["../../../../src/editors/subscription/later-binding/foundation.ts"],"names":[],"mappings":"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","sourcesContent":["import { getSclSchemaVersion } from '@openscd/open-scd/src/foundation.js';\nimport { serviceTypes } from '../foundation.js';\n\nfunction dataAttributeSpecification(\n  anyLn: Element,\n  doName: string,\n  daName: string\n): { cdc: string | null; bType: string | null } {\n  const doc = anyLn.ownerDocument;\n  const lNodeType = doc.querySelector(\n    `LNodeType[id=\"${anyLn.getAttribute('lnType')}\"]`\n  );\n\n  const doNames = doName.split('.');\n  let leaf: Element | null | undefined = lNodeType;\n  for (const doName of doNames) {\n    const dO: Element | null | undefined = leaf?.querySelector(\n      `DO[name=\"${doName}\"], SDO[name=\"${doName}\"]`\n    );\n    leaf = doc.querySelector(`DOType[id=\"${dO?.getAttribute('type')}\"]`);\n  }\n  if (!leaf || !leaf.getAttribute('cdc')) return { cdc: null, bType: null };\n\n  const cdc = leaf.getAttribute('cdc')!;\n\n  const daNames = daName.split('.');\n  for (const daName of daNames) {\n    const dA: Element | null | undefined = leaf?.querySelector(\n      `DA[name=\"${daName}\"], BDA[name=\"${daName}\"]`\n    );\n    leaf =\n      daNames.indexOf(daName) < daNames.length - 1\n        ? doc.querySelector(`DAType[id=\"${dA?.getAttribute('type')}\"]`)\n        : dA;\n  }\n  if (!leaf || !leaf.getAttribute('bType')) return { cdc, bType: null };\n\n  const bType = leaf.getAttribute('bType')!;\n\n  return { bType, cdc };\n}\n\n/**\n * @param fcda - Data attribute reference in a data set\n * @returns Data objects `CDC` and data attributes `bType`\n */\nexport function fcdaSpecification(fcda: Element): {\n  cdc: string | null;\n  bType: string | null;\n} {\n  const [doName, daName] = ['doName', 'daName'].map(attr =>\n    fcda.getAttribute(attr)\n  );\n  if (!doName || !daName) return { cdc: null, bType: null };\n\n  const ied = fcda.closest('IED');\n\n  const anyLn = Array.from(\n    ied?.querySelectorAll(\n      `LDevice[inst=\"${fcda.getAttribute(\n        'ldInst'\n      )}\"] > LN, LDevice[inst=\"${fcda.getAttribute('inst')}\"] LN0`\n    ) ?? []\n  ).find(anyLn => {\n    return (\n      (anyLn.getAttribute('prefix') ?? '') ===\n        (fcda.getAttribute('prefix') ?? '') &&\n      (anyLn.getAttribute('lnClass') ?? '') ===\n        (fcda.getAttribute('lnClass') ?? '') &&\n      (anyLn.getAttribute('inst') ?? '') === (fcda.getAttribute('lnInst') ?? '')\n    );\n  });\n  if (!anyLn) return { cdc: null, bType: null };\n\n  return dataAttributeSpecification(anyLn, doName, daName);\n}\n\n/**\n * Edition 2 and later SCL files allow to restrict subscription on\n * later binding type inputs (`ExtRef` elements) based on a `CDC` and\n * basic type `bType`.\n * @param extRef - A later binding type input in the sink IED\n * @returns data objects `CDC` and data attribute basic type `bType` or `null`\n */\nexport function inputRestriction(extRef: Element): {\n  cdc: string | null;\n  bType: string | null;\n} {\n  const [pLN, pDO, pDA] = ['pLN', 'pDO', 'pDA'].map(attr =>\n    extRef.getAttribute(attr)\n  );\n  if (!pLN || !pDO || !pDA) return { cdc: null, bType: null };\n\n  const anyLns = Array.from(\n    extRef\n      .closest('IED')\n      ?.querySelectorAll(`LN[lnClass=\"${pLN}\"],LN0[lnClass=\"${pLN}\"]`) ?? []\n  );\n\n  for (const anyLn of anyLns) {\n    const dataSpec = dataAttributeSpecification(anyLn, pDO, pDA);\n    if (dataSpec.cdc !== null && dataSpec.bType !== null) return dataSpec;\n  }\n\n  return { cdc: null, bType: null };\n}\n\n/**\n * Simple function to check if the attribute of the Left Side has the same value as the attribute of the Right Element.\n *\n * @param leftElement   - The Left Element to check against.\n * @param rightElement  - The Right Element to check.\n * @param attributeName - The name of the attribute to check.\n */\nexport function sameAttributeValue(\n  leftElement: Element | undefined,\n  rightElement: Element | undefined,\n  attributeName: string\n): boolean {\n  return (\n    (leftElement?.getAttribute(attributeName) ?? '') ===\n    (rightElement?.getAttribute(attributeName) ?? '')\n  );\n}\n\n/**\n * Simple function to check if the attribute of the Left Side has the same value as the attribute of the Right Element.\n *\n * @param leftElement        - The Left Element to check against.\n * @param leftAttributeName  - The name of the attribute (left) to check against.\n * @param rightElement       - The Right Element to check.\n * @param rightAttributeName - The name of the attribute (right) to check.\n */\nexport function sameAttributeValueDiffName(\n  leftElement: Element | undefined,\n  leftAttributeName: string,\n  rightElement: Element | undefined,\n  rightAttributeName: string\n): boolean {\n  return (\n    (leftElement?.getAttribute(leftAttributeName) ?? '') ===\n    (rightElement?.getAttribute(rightAttributeName) ?? '')\n  );\n}\n\n/**\n * If needed check version specific attributes against FCDA Element.\n *\n * @param controlTag     - Indicates which type of control element.\n * @param controlElement - The Control Element to check against.\n * @param extRefElement  - The Ext Ref Element to check.\n */\nfunction checkEditionSpecificRequirements(\n  controlTag: 'SampledValueControl' | 'GSEControl',\n  controlElement: Element | undefined,\n  extRefElement: Element\n): boolean {\n  // For 2003 Edition no extra check needed.\n  if (getSclSchemaVersion(extRefElement.ownerDocument) === '2003') {\n    return true;\n  }\n\n  const lDeviceElement = controlElement?.closest('LDevice') ?? undefined;\n  const lnElement = controlElement?.closest('LN0') ?? undefined;\n\n  // If ExtRef is missing 'srcLNClass', it defaults to 'LLN0' as specified in the standard\n  const extRefIsMissingSrcLNClass = !extRefElement.hasAttribute('srcLNClass');\n  const isLnClassLLN0 = lnElement?.getAttribute('lnClass') === 'LLN0';\n  const canIgnoreSrcLNClass = isLnClassLLN0 && extRefIsMissingSrcLNClass;\n\n  // For the 2007B and 2007B4 Edition we need to check some extra attributes.\n  return (\n    (extRefElement.getAttribute('serviceType') ?? '') ===\n      serviceTypes[controlTag] &&\n    sameAttributeValueDiffName(\n      extRefElement,\n      'srcLDInst',\n      lDeviceElement,\n      'inst'\n    ) &&\n    sameAttributeValueDiffName(\n      extRefElement,\n      'scrPrefix',\n      lnElement,\n      'prefix'\n    ) &&\n    (canIgnoreSrcLNClass || sameAttributeValueDiffName(\n      extRefElement,\n      'srcLNClass',\n      lnElement,\n      'lnClass'\n    )) &&\n    sameAttributeValueDiffName(extRefElement, 'srcLNInst', lnElement, 'inst') &&\n    sameAttributeValueDiffName(\n      extRefElement,\n      'srcCBName',\n      controlElement,\n      'name'\n    )\n  );\n}\n\n/**\n * Check if specific attributes from the ExtRef Element are the same as the ones from the FCDA Element\n * and also if the IED Name is the same. If that is the case this ExtRef subscribes to the selected FCDA\n * Element.\n *\n * @param controlTag     - Indicates which type of control element.\n * @param controlElement - The Control Element to check against.\n * @param fcdaElement    - The FCDA Element to check against.\n * @param extRefElement  - The Ext Ref Element to check.\n */\nexport function isSubscribedTo(\n  controlTag: 'SampledValueControl' | 'GSEControl',\n  controlElement: Element | undefined,\n  fcdaElement: Element | undefined,\n  extRefElement: Element\n): boolean {\n  return (\n    extRefElement.getAttribute('iedName') ===\n      fcdaElement?.closest('IED')?.getAttribute('name') &&\n    sameAttributeValue(fcdaElement, extRefElement, 'ldInst') &&\n    sameAttributeValue(fcdaElement, extRefElement, 'prefix') &&\n    sameAttributeValue(fcdaElement, extRefElement, 'lnClass') &&\n    sameAttributeValue(fcdaElement, extRefElement, 'lnInst') &&\n    sameAttributeValue(fcdaElement, extRefElement, 'doName') &&\n    sameAttributeValue(fcdaElement, extRefElement, 'daName') &&\n    checkEditionSpecificRequirements(controlTag, controlElement, extRefElement)\n  );\n}\n\n/**\n * Check if the ExtRef is already subscribed to a FCDA Element.\n *\n * @param extRefElement - The Ext Ref Element to check.\n */\nexport function isSubscribed(extRefElement: Element): boolean {\n  return (\n    extRefElement.hasAttribute('iedName') &&\n    extRefElement.hasAttribute('ldInst') &&\n    extRefElement.hasAttribute('prefix') &&\n    extRefElement.hasAttribute('lnClass') &&\n    extRefElement.hasAttribute('lnInst') &&\n    extRefElement.hasAttribute('doName') &&\n    extRefElement.hasAttribute('daName')\n  );\n}\n\nexport function getExtRefElements(\n  rootElement: Element,\n  fcdaElement: Element | undefined,\n  includeLaterBinding: boolean\n): Element[] {\n  return Array.from(rootElement.querySelectorAll('ExtRef'))\n    .filter(\n      element =>\n        (includeLaterBinding && element.hasAttribute('intAddr')) ||\n        (!includeLaterBinding && !element.hasAttribute('intAddr'))\n    )\n    .filter(element => element.closest('IED') !== fcdaElement?.closest('IED'));\n}\n\nexport function getSubscribedExtRefElements(\n  rootElement: Element,\n  controlTag: 'SampledValueControl' | 'GSEControl',\n  fcdaElement: Element | undefined,\n  controlElement: Element | undefined,\n  includeLaterBinding: boolean\n): Element[] {\n  return getExtRefElements(\n    rootElement,\n    fcdaElement,\n    includeLaterBinding\n  ).filter(extRefElement =>\n    isSubscribedTo(controlTag, controlElement, fcdaElement, extRefElement)\n  );\n}\n"]}