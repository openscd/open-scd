{"version":3,"file":"accesspoint.js","sourceRoot":"","sources":["../../src/wizards/accesspoint.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\r\nimport { get } from 'lit-translate';\r\n\r\nimport '@openscd/open-scd/src/wizard-textfield.js';\r\nimport {\r\n  newWizardEvent,\r\n  Wizard,\r\n  WizardInputElement,\r\n  WizardActor,\r\n  isPublic,\r\n  identity,\r\n} from '@openscd/open-scd/src/foundation.js';\r\nimport {\r\n  Delete,\r\n  ComplexAction,\r\n  EditorAction,\r\n} from '@openscd/core/foundation/deprecated/editor.js';\r\nimport { updateNamingAttributeWithReferencesAction } from './foundation/actions.js';\r\nimport { deleteReferences } from './foundation/references.js';\r\nimport { patterns } from './foundation/limits.js';\r\n\r\nexport function renderAccessPointWizard(\r\n  name: string | null,\r\n  desc: string | null,\r\n  reservedNames: string[]\r\n): TemplateResult[] {\r\n  return [\r\n    html`<wizard-textfield\r\n      label=\"name\"\r\n      .maybeValue=${name}\r\n      helper=\"${get('accesspoint.wizard.nameHelper')}\"\r\n      required\r\n      validationMessage=\"${get('textfield.required')}\"\r\n      dialogInitialFocus\r\n      .reservedValues=${reservedNames}\r\n    >\r\n    </wizard-textfield>`,\r\n    html`<wizard-textfield\r\n      label=\"desc\"\r\n      .maybeValue=${desc}\r\n      nullable\r\n      helper=\"${get('accesspoint.wizard.descHelper')}\"\r\n      pattern=\"${patterns.normalizedString}\"\r\n    >\r\n    </wizard-textfield>`,\r\n  ];\r\n}\r\nexport function removeAccessPointWizard(element: Element): Wizard | null {\r\n  const references = deleteReferences(element);\r\n  if (references.length > 0) {\r\n    return [\r\n      {\r\n        title: get('accesspoint.wizard.title.delete'),\r\n        content: renderAccessPointReferencesWizard(references),\r\n        primary: {\r\n          icon: 'delete',\r\n          label: get('remove'),\r\n          action: removeAccessPointAndReferences(element),\r\n        },\r\n      },\r\n    ];\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function editAccessPointWizard(element: Element): Wizard {\r\n  const name = element.getAttribute('name');\r\n  const desc = element.getAttribute('desc');\r\n  return [\r\n    {\r\n      title: get('accesspoint.wizard.title.edit'),\r\n      element,\r\n      primary: {\r\n        icon: 'edit',\r\n        label: get('save'),\r\n        action: updateNamingAttributeWithReferencesAction(\r\n          element,\r\n          'accesspoint.action.updateAccessPoint'\r\n        ),\r\n      },\r\n      content: renderAccessPointWizard(\r\n        name,\r\n        desc,\r\n        reservedNamesAccessPoint(element)\r\n      ),\r\n    },\r\n  ];\r\n}\r\n\r\nfunction renderAccessPointReferencesWizard(\r\n  references: Delete[]\r\n): TemplateResult[] {\r\n  return [\r\n    html` <section>\r\n      <h3 style=\"margin: 0;\">${get('accesspoint.wizard.title.references')}</h3>\r\n      <mwc-list>\r\n        ${references.map(reference => {\r\n          const oldElement = <Element>reference.old.element;\r\n          return html` <mwc-list-item noninteractive twoline>\r\n            <span>${oldElement.tagName}</span>\r\n            <span slot=\"secondary\"\r\n              >${identity(<Element>reference.old.element)}</span\r\n            >\r\n          </mwc-list-item>`;\r\n        })}\r\n      </mwc-list>\r\n    </section>`,\r\n  ];\r\n}\r\n\r\nfunction reservedNamesAccessPoint(currentElement: Element): string[] {\r\n  const ied = currentElement.closest('IED');\r\n  if (!ied) return [];\r\n\r\n  return Array.from(ied.querySelectorAll(':scope > AccessPoint'))\r\n    .filter(isPublic)\r\n    .map(ap => ap.getAttribute('name') ?? '')\r\n    .filter(name => name !== currentElement.getAttribute('name'));\r\n}\r\n\r\nfunction removeAccessPointAndReferences(element: Element): WizardActor {\r\n  return (inputs: WizardInputElement[], wizard: Element): EditorAction[] => {\r\n    // Close Edit Wizard, if open.\r\n    wizard.dispatchEvent(newWizardEvent());\r\n\r\n    // Get Delete Actions for other elements that also need to be removed\r\n    const referencesDeleteActions = deleteReferences(element);\r\n    // Use the ExtRef Elements to check if after removing the ExtRef there are empty Inputs that can also be removed.\r\n    const extRefsDeleteActions = referencesDeleteActions.filter(\r\n      deleteAction => (<Element>deleteAction.old.element).tagName === 'ExtRef'\r\n    );\r\n\r\n    // Create Complex Action to remove AccessPoint and all references.\r\n    const name = element.getAttribute('name') ?? 'Unknown';\r\n    const complexAction: ComplexAction = {\r\n      actions: [],\r\n      title: get('ied.action.deleteAccessPoint', { name }),\r\n    };\r\n    complexAction.actions.push({\r\n      old: { parent: element.parentElement!, element },\r\n    });\r\n    complexAction.actions.push(...referencesDeleteActions);\r\n    return [complexAction];\r\n  };\r\n}\r\n"]}