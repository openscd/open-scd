{"version":3,"file":"ln-container.js","sourceRoot":"","sources":["../../../src/editors/ied/ln-container.ts"],"names":[],"mappings":"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","sourcesContent":["import { customElement, html, query, TemplateResult } from 'lit-element';\nimport { nothing } from 'lit-html';\nimport { until } from 'lit-html/directives/until';\nimport { get } from 'lit-translate';\n\nimport {\n  getInstanceAttribute,\n  getNameAttribute,\n  newWizardEvent,\n} from '@openscd/open-scd/src/foundation.js';\nimport { IconButtonToggle } from '@material/mwc-icon-button-toggle';\n\nimport '@openscd/open-scd/src/action-pane.js';\nimport './do-container.js';\n\nimport { Container } from './foundation.js';\nimport { wizards } from '../../wizards/wizard-library.js';\n\n/** [[`IED`]] plugin subeditor for editing `LN` and `LN0` element. */\n@customElement('ln-container')\nexport class LNContainer extends Container {\n  @query('#toggleButton')\n  toggleButton!: IconButtonToggle | undefined;\n\n  private header(): TemplateResult {\n    const prefix = this.element.getAttribute('prefix');\n    const inst = getInstanceAttribute(this.element);\n    const desc = this.element.getAttribute('desc');\n\n    const data = this.nsdoc.getDataDescription(this.element);\n\n    return html`${prefix != null ? html`${prefix} &mdash; ` : nothing}\n    ${data.label} ${inst ? html` &mdash; ${inst}` : nothing}\n    ${desc ? html` &mdash; ${desc}` : nothing}`;\n  }\n\n  /**\n   * Get the DO child elements of this LN(0) section.\n   * @returns The DO child elements, or an empty array if none are found.\n   */\n  private getDOElements(): Element[] {\n    const lnType = this.element.getAttribute('lnType') ?? undefined;\n    const lNodeType = this.element\n      .closest('SCL')!\n      .querySelector(`:root > DataTypeTemplates > LNodeType[id=\"${lnType}\"]`);\n    if (lNodeType != null) {\n      return Array.from(lNodeType.querySelectorAll(':scope > DO'));\n    }\n    return [];\n  }\n\n  /**\n   * Get the instance element (DOI) of a DO element (if available)\n   * @param dO - The DO object to use.\n   * @returns The optional DOI object.\n   */\n  private getInstanceElement(dO: Element): Element | null {\n    const doName = getNameAttribute(dO);\n    return this.element.querySelector(`:scope > DOI[name=\"${doName}\"]`);\n  }\n\n  private openEditWizard(): void {\n    const wizardType = this.element.tagName === 'LN' ? 'LN' : 'LN0';\n    const wizard = wizards[wizardType].edit(this.element);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  render(): TemplateResult {\n    const doElements = this.getDOElements();\n\n    return html`<action-pane .label=\"${until(this.header())}\">\n      ${doElements.length > 0\n        ? html`<abbr slot=\"action\">\n          <mwc-icon-button\n            slot=\"action\"\n            mini\n            icon=\"edit\"\n            @click=\"${() => this.openEditWizard()}}\"\n          ></mwc-icon-button>\n        </abbr>\n        <abbr\n            slot=\"action\"\n            title=\"${get('iededitor.toggleChildElements')}\"\n          >\n            <mwc-icon-button-toggle\n              id=\"toggleButton\"\n              onIcon=\"keyboard_arrow_up\"\n              offIcon=\"keyboard_arrow_down\"\n              @click=${() => this.requestUpdate()}\n            ></mwc-icon-button-toggle>\n          </abbr>`\n        : nothing}\n      ${this.toggleButton?.on\n        ? doElements.map(\n            dO => html`<do-container\n              .editCount=${this.editCount}\n              .doc=${this.doc}\n              .element=${dO}\n              .instanceElement=${this.getInstanceElement(dO)}\n              .nsdoc=${this.nsdoc}\n              .ancestors=${[...this.ancestors, this.element]}\n            ></do-container> `\n          )\n        : nothing}\n    </action-pane>`;\n  }\n}\n"]}