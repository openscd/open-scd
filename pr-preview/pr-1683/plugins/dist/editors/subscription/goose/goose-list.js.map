{"version":3,"file":"goose-list.js","sourceRoot":"","sources":["../../../../src/editors/subscription/goose/goose-list.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,GAAG,EACH,aAAa,EACb,IAAI,EACJ,UAAU,EACV,QAAQ,GAET,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AACpC,OAAO,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AAEzD,OAAO,oBAAoB,CAAC;AAC5B,OAAO,kCAAkC,CAAC;AAE1C,OAAO,wCAAwC,CAAC;AAChD,OAAO,EACL,gBAAgB,EAChB,QAAQ,EACR,cAAc,GACf,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,OAAO,EAAE,MAAM,oCAAoC,CAAC;AAC7D,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1D,IAAI,kBAAuC,CAAC;AAC5C,IAAI,eAA2C,CAAC;AAEhD,SAAS,8BAA8B;IACrC,kBAAkB,GAAG,SAAS,CAAC;IAC/B,eAAe,GAAG,SAAS,CAAC;AAC9B,CAAC;AACD,gBAAgB,CAAC,UAAU,EAAE,8BAA8B,CAAC,CAAC;AAE7D,uEAAuE;AAEhE,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,UAAU;IAAlC;;QAIL,cAAS,GAAG,CAAC,CAAC,CAAC;IA0GjB,CAAC;IAxGS,QAAQ,CAAC,UAAmB;QAClC,IAAI,UAAU,IAAI,kBAAkB;YAAE,OAAO;QAE7C,MAAM,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC;QACpC,MAAM,OAAO,GAAG,EAAE,EAAE,aAAa,CAC/B,gBAAgB,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CACrD,CAAC;QAEF,kBAAkB,GAAG,UAAU,CAAC;QAChC,eAAe,GAAG,OAAO,CAAC;QAE1B,IAAI,CAAC,aAAa,CAChB,mBAAmB,CAAC,kBAAkB,EAAE,eAAgB,CAAC,CAC1D,CAAC;QAEF,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,WAAW,CAAC,UAAmB;QAC7B,OAAO,IAAI,CAAA;eACA,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;;;eAG/B,QAAQ,CAAC,UAAU,CAAC;;iCAEF,SAAS;cAC5B,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC;;iBAE5B,QAAQ,CAAC;YAChB,MAAM,EAAE,UAAU,KAAK,kBAAkB;SAC1C,CAAC;;;iBAGO,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;;qBAEjC,CAAC;IACpB,CAAC;IAEO,cAAc,CAAC,UAAmB;QACxC,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,MAAM;YAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC;IAES,OAAO;QACf,IAAI,CAAC,aAAa,CAChB,mBAAmB,CAAC,kBAAkB,EAAE,eAAe,IAAI,SAAS,CAAC,CACtE,CAAC;IACJ,CAAC;IAES,YAAY;QACpB,kBAAkB,GAAG,SAAS,CAAC;QAC/B,eAAe,GAAG,SAAS,CAAC;IAC9B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;YACH,GAAG,CAAC,oCAAoC,CAAC;;UAE3C,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAC5B,GAAG,CAAC,EAAE,CACJ,IAAI,CAAA;;;;yBAIS,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;aACpD,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;aACvC,GAAG,CAAC,OAAO,CAAC,EAAE;YACb,MAAM,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAW,CAAC;YACvC,OAAO,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1C,CAAC,CAAC;aACD,IAAI,CAAC,GAAG,CAAC;;wBAEJ,gBAAgB,CAAC,GAAG,CAAC;;;;gBAI7B,KAAK,CAAC,IAAI,CACV,GAAG,CAAC,gBAAgB,CAClB,4DAA4D,CAC7D,CACF;aACE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;aACvC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAC7C,CACJ;;eAEM,CAAC;IACd,CAAC;;AAEM,gBAAM,GAAG,GAAG,CAAA;MACf,MAAM;;;;;;;;;;;;;GAaT,CAAC;AA3GF;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;sCACb;AAElB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;4CACZ;AAJJ,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CA8GrB;SA9GY,SAAS","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from 'lit-element';\nimport { get } from 'lit-translate';\nimport { classMap } from 'lit-html/directives/class-map';\n\nimport '@material/mwc-icon';\nimport '@material/mwc-list/mwc-list-item';\n\nimport '@openscd/open-scd/src/filtered-list.js';\nimport {\n  getNameAttribute,\n  identity,\n  newWizardEvent,\n} from '@openscd/open-scd/src/foundation.js';\nimport { newGOOSESelectEvent } from './foundation.js';\nimport { gooseIcon } from '@openscd/open-scd/src/icons/icons.js';\nimport { wizards } from '../../../wizards/wizard-library.js';\nimport { getOrderedIeds, styles } from '../foundation.js';\n\nlet selectedGseControl: Element | undefined;\nlet selectedDataSet: Element | undefined | null;\n\nfunction onOpenDocResetSelectedGooseMsg() {\n  selectedGseControl = undefined;\n  selectedDataSet = undefined;\n}\naddEventListener('open-doc', onOpenDocResetSelectedGooseMsg);\n\n/** An sub element for showing all published GOOSE messages per IED. */\n@customElement('goose-list')\nexport class GooseList extends LitElement {\n  @property({ attribute: false })\n  doc!: XMLDocument;\n  @property({ type: Number })\n  editCount = -1;\n\n  private onSelect(gseControl: Element): void {\n    if (gseControl == selectedGseControl) return;\n\n    const ln = gseControl.parentElement;\n    const dataset = ln?.querySelector(\n      `DataSet[name=${gseControl.getAttribute('datSet')}]`\n    );\n\n    selectedGseControl = gseControl;\n    selectedDataSet = dataset;\n\n    this.dispatchEvent(\n      newGOOSESelectEvent(selectedGseControl, selectedDataSet!)\n    );\n\n    this.requestUpdate();\n  }\n\n  renderGoose(gseControl: Element): TemplateResult {\n    return html`<mwc-list-item\n      @click=${() => this.onSelect(gseControl)}\n      graphic=\"large\"\n      hasMeta\n      value=\"${identity(gseControl)}\"\n    >\n      <mwc-icon slot=\"graphic\">${gooseIcon}</mwc-icon>\n      <span>${gseControl.getAttribute('name')}</span>\n      <mwc-icon-button\n        class=\"${classMap({\n          hidden: gseControl !== selectedGseControl,\n        })}\"\n        slot=\"meta\"\n        icon=\"edit\"\n        @click=${() => this.openEditWizard(gseControl)}\n      ></mwc-icon-button>\n    </mwc-list-item>`;\n  }\n\n  private openEditWizard(gseControl: Element): void {\n    const wizard = wizards['GSEControl'].edit(gseControl);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  protected updated(): void {\n    this.dispatchEvent(\n      newGOOSESelectEvent(selectedGseControl, selectedDataSet ?? undefined)\n    );\n  }\n\n  protected firstUpdated(): void {\n    selectedGseControl = undefined;\n    selectedDataSet = undefined;\n  }\n\n  render(): TemplateResult {\n    return html` <section tabindex=\"0\">\n      <h1>${get('subscription.goose.publisher.title')}</h1>\n      <filtered-list activatable>\n        ${getOrderedIeds(this.doc).map(\n          ied =>\n            html`\n              <mwc-list-item\n                noninteractive\n                graphic=\"icon\"\n                value=\"${Array.from(ied.querySelectorAll('GSEControl'))\n                  .filter(cb => cb.hasAttribute('datSet'))\n                  .map(element => {\n                    const id = identity(element) as string;\n                    return typeof id === 'string' ? id : '';\n                  })\n                  .join(' ')}\"\n              >\n                <span>${getNameAttribute(ied)}</span>\n                <mwc-icon slot=\"graphic\">developer_board</mwc-icon>\n              </mwc-list-item>\n              <li divider role=\"separator\"></li>\n              ${Array.from(\n                ied.querySelectorAll(\n                  ':scope > AccessPoint > Server > LDevice > LN0 > GSEControl'\n                )\n              )\n                .filter(cb => cb.hasAttribute('datSet'))\n                .map(control => this.renderGoose(control))}\n            `\n        )}\n      </filtered-list>\n    </section>`;\n  }\n\n  static styles = css`\n    ${styles}\n\n    mwc-list-item {\n      --mdc-list-item-meta-size: 48px;\n    }\n\n    mwc-icon-button.hidden {\n      display: none;\n    }\n\n    mwc-list-item.hidden[noninteractive] + li[divider] {\n      display: none;\n    }\n  `;\n}\n"]}