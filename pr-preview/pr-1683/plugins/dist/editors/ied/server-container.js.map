{"version":3,"file":"server-container.js","sourceRoot":"","sources":["../../../src/editors/ied/server-container.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,aAAa,EACb,IAAI,EACJ,QAAQ,EAER,KAAK,GAEN,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AAEnC,OAAO,sCAAsC,CAAC;AAC9C,OAAO,wBAAwB,CAAC;AAChC,OAAO,EAAE,UAAU,EAAE,MAAM,0CAA0C,CAAC;AACtE,OAAO,EAAE,uBAAuB,EAAE,MAAM,qCAAqC,CAAC;AAC9E,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,+DAA+D;AAExD,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,SAAS;IAAvC;;QAEL,sBAAiB,GAAa,EAAE,CAAC;IAiDnC,CAAC;IA/CS,MAAM;QACZ,MAAM,IAAI,GAAG,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEnD,OAAO,IAAI,CAAA,SAAS,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IAChE,CAAC;IAES,OAAO,CAAC,kBAAkC;QAClD,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAElC,gGAAgG;QAChG,IAAI,kBAAkB,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAE;YAC/C,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;SACvC;IACH,CAAC;IAGD,IAAY,eAAe;QACzB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC,MAAM,CACzE,OAAO,CAAC,EAAE;YACR,OAAO,CACL,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAC5D,OAAO,CAAC,EAAE;gBACR,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBACtD,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAClD,CAAC,CACF,CAAC,MAAM,GAAG,CAAC,CACb,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,wBAAwB,IAAI,CAAC,MAAM,EAAE;8BACtB,UAAU;QAChC,IAAI,CAAC,eAAe,CAAC,GAAG,CACxB,MAAM,CAAC,EAAE,CACP,IAAI,CAAA;yBACW,IAAI,CAAC,SAAS;mBACpB,IAAI,CAAC,GAAG;uBACJ,MAAM;qBACR,IAAI,CAAC,KAAK;iCACE,IAAI,CAAC,iBAAiB;yBAC9B,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC;gCAC1B,CACzB;mBACY,CAAC;IAClB,CAAC;CACF,CAAA;AAjDC;IADC,QAAQ,EAAE;0DACsB;AAkBjC;IADC,KAAK,EAAE;sDAcP;AAjCU,eAAe;IAD3B,aAAa,CAAC,kBAAkB,CAAC;GACrB,eAAe,CAmD3B;SAnDY,eAAe","sourcesContent":["import {\n  customElement,\n  html,\n  property,\n  PropertyValues,\n  state,\n  TemplateResult,\n} from 'lit-element';\nimport { nothing } from 'lit-html';\n\nimport '@openscd/open-scd/src/action-pane.js';\nimport './ldevice-container.js';\nimport { serverIcon } from '@openscd/open-scd/src/icons/ied-icons.js';\nimport { getDescriptionAttribute } from '@openscd/open-scd/src/foundation.js';\nimport { Container } from './foundation.js';\n\n/** [[`IED`]] plugin subeditor for editing `Server` element. */\n@customElement('server-container')\nexport class ServerContainer extends Container {\n  @property()\n  selectedLNClasses: string[] = [];\n\n  private header(): TemplateResult {\n    const desc = getDescriptionAttribute(this.element);\n\n    return html`Server${desc ? html` &mdash; ${desc}` : nothing}`;\n  }\n\n  protected updated(_changedProperties: PropertyValues): void {\n    super.updated(_changedProperties);\n\n    // When the LN Classes filter is updated, we also want to trigger rendering for the LN Elements.\n    if (_changedProperties.has('selectedLNClasses')) {\n      this.requestUpdate('lDeviceElements');\n    }\n  }\n\n  @state()\n  private get lDeviceElements(): Element[] {\n    return Array.from(this.element.querySelectorAll(':scope > LDevice')).filter(\n      element => {\n        return (\n          Array.from(element.querySelectorAll(':scope > LN,LN0')).filter(\n            element => {\n              const lnClass = element.getAttribute('lnClass') ?? '';\n              return this.selectedLNClasses.includes(lnClass);\n            }\n          ).length > 0\n        );\n      }\n    );\n  }\n\n  render(): TemplateResult {\n    return html`<action-pane .label=\"${this.header()}\">\n      <mwc-icon slot=\"icon\">${serverIcon}</mwc-icon>\n      ${this.lDeviceElements.map(\n        server =>\n          html`<ldevice-container\n            .editCount=${this.editCount}\n            .doc=${this.doc}\n            .element=${server}\n            .nsdoc=${this.nsdoc}\n            .selectedLNClasses=${this.selectedLNClasses}\n            .ancestors=${[...this.ancestors, this.element]}\n          ></ldevice-container>`\n      )}\n    </action-pane>`;\n  }\n}\n"]}