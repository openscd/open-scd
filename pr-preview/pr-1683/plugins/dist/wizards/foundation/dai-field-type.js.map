{"version":3,"file":"dai-field-type.js","sourceRoot":"","sources":["../../../src/wizards/foundation/dai-field-type.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-html';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-list/mwc-list-item';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport '@openscd/open-scd/src/wizard-select.js';\n\nimport {\n  getValue,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nexport interface CustomField {\n  render(\n    element: Element,\n    instanceElement?: Element,\n    numOfSGs?: number | null\n  ): TemplateResult[];\n  value(inputs: WizardInputElement[], sGroup?: number | null): string | null;\n}\n\nconst daiFieldTypes = [\n  'BOOLEAN',\n  'Enum',\n  'FLOAT32',\n  'FLOAT64',\n  'INT8',\n  'INT16',\n  'INT24',\n  'INT32',\n  'INT64',\n  'INT128',\n  'INT8U',\n  'INT16U',\n  'INT24U',\n  'INT32U',\n  'Timestamp',\n  'VisString32',\n  'VisString64',\n  'VisString65',\n  'VisString129',\n  'VisString255',\n  'ObjRef',\n  'Currency',\n  'Octet64',\n  'Octet6',\n  'Octet16',\n] as const;\nexport type DaiFieldTypes = (typeof daiFieldTypes)[number];\nconst emptyIfNull = <T>(item: T | null, value: string): string => {\n  return item === null ? '' : value;\n};\nexport function getCustomField(): Record<DaiFieldTypes, CustomField> {\n  return {\n    BOOLEAN: booleanField(),\n    Enum: enumField(),\n    FLOAT32: floatField('FLOAT32', -(2 ** 32), 2 ** 32 - 1),\n    FLOAT64: floatField('FLOAT64', -(2 ** 64), 2 ** 64 - 1),\n    INT8: integerField('INT8', -(2 ** 8), 2 ** 8 - 1),\n    INT16: integerField('INT16', -(2 ** 16), 2 ** 16 - 1),\n    INT24: integerField('INT24', -(2 ** 24), 2 ** 24 - 1),\n    INT32: integerField('INT32', -(2 ** 32), 2 ** 32 - 1),\n    INT64: integerField('INT64', -(2 ** 64), 2 ** 64 - 1),\n    INT128: integerField('INT128', -(2 ** 128), 2 ** 128 - 1),\n    INT8U: integerField('INT8U', 0, 2 ** 8 - 1),\n    INT16U: integerField('INT16U', 0, 2 ** 16 - 1),\n    INT24U: integerField('INT24U', 0, 2 ** 24 - 1),\n    INT32U: integerField('INT32U', 0, 2 ** 32 - 1),\n    Timestamp: timestampField(),\n    VisString32: stringField('VisString32', 32),\n    VisString64: stringField('VisString64', 64),\n    VisString65: stringField('VisString65', 65),\n    VisString129: stringField('VisString129', 129),\n    VisString255: stringField('VisString255', 255),\n    ObjRef: stringField('VisString129', 129),\n    Currency: stringField('Currency', 3),\n    Octet64: stringField('Octet64', 64 * 2),\n    Octet6: stringField('Octet6', 6 * 2),\n    Octet16: stringField('Octet16', 16 * 2),\n  };\n\n  function booleanField(): CustomField {\n    return {\n      render: (\n        element: Element,\n        instanceElement?: Element,\n        numOfSGs: number | null = null\n      ) => {\n        // If numOfSGs is -1, then it is a single value, otherwise it is treated as a group of values\n        return (numOfSGs ? [...Array(numOfSGs)] : [numOfSGs]).map((item, i) => {\n          return html`<wizard-select\n            id=\"Val${emptyIfNull(item, `${i + 1}`)}\"\n            label=\"Val${emptyIfNull(item, ` for sGroup ${i + 1}`)}\"\n            .maybeValue=${getInstanceValue(instanceElement)}\n            fixedMenuPosition\n          >\n            <mwc-list-item value=\"true\">true</mwc-list-item>\n            <mwc-list-item value=\"false\">false</mwc-list-item>\n          </wizard-select>`;\n        });\n      },\n      value: (inputs: WizardInputElement[], sGroup: number | null) => {\n        return getValue(\n          inputs.find(input => input.id === `Val${sGroup || ''}`)!\n        );\n      },\n    };\n  }\n\n  function enumField(): CustomField {\n    return {\n      render: (\n        element: Element,\n        instanceElement?: Element,\n        numOfSGs: number | null = null\n      ) => {\n        // If numOfSGs is -1, then it is a single value, otherwise it is treated as a group of values\n        return (numOfSGs ? [...Array(numOfSGs)] : [numOfSGs]).map((item, i) => {\n          return html`<wizard-select\n            id=\"Val${emptyIfNull(item, `${i + 1}`)}\"\n            label=\"Val${emptyIfNull(item, ` for sGroup ${i + 1}`)}\"\n            .maybeValue=${getInstanceValue(instanceElement)}\n            fixedMenuPosition\n          >\n            ${getEnumValues(element).map(enumValue => {\n              return html`<mwc-list-item value=\"${enumValue}\"\n                >${enumValue}</mwc-list-item\n              >`;\n            })}\n          </wizard-select>`;\n        });\n      },\n      value: (inputs: WizardInputElement[], sGroup: number | null) => {\n        return getValue(\n          inputs.find(input => input.id === `Val${sGroup || ''}`)!\n        );\n      },\n    };\n  }\n\n  function floatField(type: string, min: number, max: number): CustomField {\n    return {\n      render: (\n        element: Element,\n        instanceElement?: Element,\n        numOfSGs: number | null = null\n      ) => {\n        // If numOfSGs is -1, then it is a single value, otherwise it is treated as a group of values\n        return (numOfSGs ? [...Array(numOfSGs)] : [numOfSGs]).map((item, i) => {\n          return html`<wizard-textfield\n            id=\"Val${emptyIfNull(item, `${i + 1}`)}\"\n            label=\"Val${emptyIfNull(item, ` for sGroup ${i + 1}`)}\"\n            .maybeValue=${getInstanceValue(instanceElement)}\n            helper=\"${get('dai.wizard.valueHelper', { type })}\"\n            type=\"number\"\n            min=${min}\n            max=${max}\n            step=\"0.1\"\n          >\n          </wizard-textfield>`;\n        });\n      },\n      value: (inputs: WizardInputElement[], sGroup: number | null) => {\n        return getValue(\n          inputs.find(input => input.id === `Val${sGroup || ''}`)!\n        );\n      },\n    };\n  }\n\n  function integerField(type: string, min: number, max: number): CustomField {\n    return {\n      render: (\n        element: Element,\n        instanceElement?: Element,\n        numOfSGs: number | null = null\n      ) => {\n        // If numOfSGs is -1, then it is a single value, otherwise it is treated as a group of values\n        return (numOfSGs ? [...Array(numOfSGs)] : [numOfSGs]).map((item, i) => {\n          return html`<wizard-textfield\n            id=\"Val${emptyIfNull(item, `${i + 1}`)}\"\n            label=\"Val${emptyIfNull(item, ` for sGroup ${i + 1}`)}\"\n            .maybeValue=${getInstanceValue(instanceElement)}\n            helper=\"${get('dai.wizard.valueHelper', { type })}\"\n            type=\"number\"\n            min=${min}\n            max=${max}\n          >\n          </wizard-textfield>`;\n        });\n      },\n      value: (inputs: WizardInputElement[], sGroup: number | null) => {\n        return getValue(\n          inputs.find(input => input.id === `Val${sGroup || ''}`)!\n        );\n      },\n    };\n  }\n\n  function timestampField(): CustomField {\n    return {\n      render: (\n        element: Element,\n        instanceElement?: Element,\n        numOfSGs: number | null = null\n      ) => {\n        // If numOfSGs is -1, then it is a single value, otherwise it is treated as a group of values\n        const value = getInstanceValue(instanceElement);\n        return (numOfSGs ? [...Array(numOfSGs)] : [numOfSGs]).reduce(\n          (acc: TemplateResult[], item, i) => {\n            return acc.concat([\n              html`<wizard-textfield\n                id=\"ValDate${emptyIfNull(item, `${i + 1}`)}\"\n                label=\"Val (Date)${emptyIfNull(item, ` for sGroup ${i + 1}`)}\"\n                .maybeValue=${getDateValueFromTimestamp(value)}\n                type=\"date\"\n              >\n              </wizard-textfield>`,\n              html`<wizard-textfield\n                id=\"ValTime${emptyIfNull(item, `${i + 1}`)}\"\n                label=\"Val (Time)${emptyIfNull(item, ` for sGroup ${i + 1}`)}\"\n                .maybeValue=${getTimeValueFromTimestamp(value)}\n                type=\"time\"\n                step=\"1\"\n              >\n              </wizard-textfield>`,\n            ]);\n          },\n          []\n        );\n      },\n      value: (inputs: WizardInputElement[], sGroup: number | null) => {\n        const values = [`ValDate${sGroup || ''}`, `ValTime${sGroup || ''}`].map(\n          id => getValue(inputs.find(input => input.id === id)!)\n        );\n\n        const dateValue = values[0] ? values[0] : '0000-00-00';\n        const timeValue = values[1] ? values[1] : '00:00:00';\n\n        return dateValue + 'T' + timeValue + '.000';\n      },\n    };\n  }\n\n  function stringField(type: string, maxNrOfCharacters: number): CustomField {\n    return {\n      render: (\n        element: Element,\n        instanceElement?: Element,\n        numOfSGs: number | null = null\n      ) => {\n        // If numOfSGs is -1, then it is a single value, otherwise it is treated as a group of values\n        return (numOfSGs ? [...Array(numOfSGs)] : [numOfSGs]).map((item, i) => {\n          return html`<wizard-textfield\n            id=\"Val${emptyIfNull(item, ` ${i + 1}`)}\"\n            label=\"Val${emptyIfNull(item, ` for sGroup ${i + 1}`)}\"\n            .maybeValue=${getInstanceValue(instanceElement)}\n            helper=\"${get('dai.wizard.valueHelper', { type })}\"\n            maxLength=${maxNrOfCharacters}\n            type=\"text\"\n          >\n          </wizard-textfield>`;\n        });\n      },\n      value: (inputs: WizardInputElement[], sGroup: number | null) => {\n        return getValue(\n          inputs.find(input => input.id === `Val${sGroup || ''}`)!\n        );\n      },\n    };\n  }\n\n  function getInstanceValue(daiOrVal?: Element): string {\n    const val = daiOrVal?.querySelector('Val')\n      ? daiOrVal?.querySelector('Val')\n      : daiOrVal;\n\n    return val?.textContent?.trim() ?? '';\n  }\n\n  function getEnumValues(element: Element): string[] {\n    const daType = element.getAttribute('type');\n    const values: string[] = [];\n\n    // No retrieve all the EnumVal Element to process these as values for the Select Element.\n    // Sort them on the attribute 'ord' and filter the ones that don't have a value.\n    Array.from(\n      element.ownerDocument.querySelectorAll(\n        `EnumType[id=\"${daType}\"] > EnumVal`\n      )\n    )\n      .filter(\n        enumValElement =>\n          enumValElement.textContent && enumValElement.textContent !== ''\n      )\n      .sort(\n        (eve1, eve2) =>\n          parseInt(eve1.getAttribute('ord') ?? '0') -\n          parseInt(eve2.getAttribute('ord') ?? '0')\n      )\n      .forEach(enumValElement => {\n        values.push(enumValElement.textContent ?? '');\n      });\n\n    return values;\n  }\n}\n\nexport function getDateValueFromTimestamp(value: string): string | null {\n  const values = value.split('T');\n  let dateValue: string | null = values[0];\n  // Check if the date is in the correct value.\n  if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(dateValue)) {\n    dateValue = null;\n  }\n  if (dateValue === '0000-00-00') {\n    dateValue = null;\n  }\n  return dateValue;\n}\n\nexport function getTimeValueFromTimestamp(value: string): string | null {\n  const values = value.split('T');\n  let timeValue = null;\n  if (values.length == 2) {\n    timeValue = values[1];\n    if (timeValue.length > 8) {\n      timeValue = timeValue.substring(0, 8);\n    }\n    if (!/^\\d{2}:\\d{2}:\\d{2}$/.test(timeValue)) {\n      timeValue = null;\n    }\n    if (timeValue === '00:00:00') {\n      timeValue = null;\n    }\n  }\n  return timeValue;\n}\n"]}