{"version":3,"file":"UpdateDescriptionSEL.js","sourceRoot":"","sources":["../../src/menu/UpdateDescriptionSEL.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement, query, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-list/mwc-check-list-item';\nimport { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport '@openscd/open-scd/src/filtered-list.js';\nimport {\n  find,\n  identity,\n  isPublic,\n  newWizardEvent,\n  SCLTag,\n  Wizard,\n  WizardAction,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport { cloneElement } from '@openscd/xml';\n\ninterface SignalDescription {\n  desc: string;\n  tag: SCLTag;\n  identity: string | number;\n}\n\nfunction addDescriptionToSEL(\n  ied: Element,\n  signalList: string[][]\n): SignalDescription[] {\n  const iedName = ied.getAttribute('name');\n  const manufacturer = ied.getAttribute('manufacturer');\n  if (!iedName || manufacturer !== 'SEL') return [];\n\n  return <SignalDescription[]>Array.from(ied.getElementsByTagName('DAI'))\n    .filter(element => isPublic(element))\n    .filter(dai => {\n      const datasrc = dai.getAttributeNS(\n        'http://www.selinc.com/2006/61850',\n        'datasrc'\n      );\n      return datasrc?.startsWith('db:');\n    })\n    .map(dai => {\n      //the next lines are vendor dependant!!\n      const datasrc = dai.getAttributeNS(\n        'http://www.selinc.com/2006/61850',\n        'datasrc'\n      );\n\n      const tag = datasrc ? datasrc.replace('db:', '') : null;\n      const desc =\n        signalList.find(row => row[2] === tag && row[1] === iedName)?.[0] ??\n        null;\n\n      return desc ? { desc, tag: 'DAI', identity: identity(dai) } : null;\n    })\n    .filter(signalDescription => signalDescription);\n}\n\nfunction addDescriptionAction(doc: XMLDocument): WizardActor {\n  return (\n    _: WizardInputElement[],\n    wizard: Element,\n    list: List | null | undefined\n  ): WizardAction[] => {\n    const selectedItems = <ListItemBase[]>list!.selected;\n\n    const actions = selectedItems.map(item => {\n      const desc = (<Element>item.querySelector('span')).textContent;\n      const [tag, identity] = item.value.split(' | ');\n\n      const oldElement = find(doc, tag, identity)!;\n      const newElement = cloneElement(oldElement, { desc });\n      return { old: { element: oldElement }, new: { element: newElement } };\n    });\n\n    return [\n      {\n        title: get('updatedesc.sel'),\n        actions,\n      },\n    ];\n  };\n}\n\nfunction createLogWizard(doc: XMLDocument, items: SignalDescription[]): Wizard {\n  return [\n    {\n      title: get('wizard.title.add', { tagName: 'desc' }),\n      primary: {\n        label: get('save'),\n        icon: 'save',\n        action: addDescriptionAction(doc),\n      },\n      content: [\n        html`<filtered-list multi\n          >${Array.from(\n            items.map(\n              item =>\n                html`<mwc-check-list-item\n                  twoline\n                  selected\n                  value=\"${item.tag + ' | ' + item.identity}\"\n                  ><span>${item.desc}</span\n                  ><span slot=\"secondary\"\n                    >${item.tag + ' | ' + item.identity}</span\n                  ></mwc-check-list-item\n                >`\n            )\n          )}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n\nfunction parseCsv(str: string, delimiter: ',' | ';'): string[][] {\n  // predefined for later use\n  const quoteChar = '\"',\n    escapeChar = '\\\\';\n\n  const entries: string[][] = [];\n  let isInsideQuote = false;\n\n  // Iterate over each character, keep track of current row and column (of the returned array)\n  for (let row = 0, col = 0, char = 0; char < str.length; char++) {\n    const currentChar = str[char];\n    const nextChar = str[char + 1];\n\n    entries[row] = entries[row] || [];\n    entries[row][col] = entries[row][col] || '';\n\n    //Ignore escape character\n    if (currentChar === escapeChar) {\n      entries[row][col] += nextChar;\n      ++char;\n      continue;\n    }\n\n    // Check for quoted characters. Do not miss-interpret delimiter within field\n    if (currentChar === quoteChar) {\n      isInsideQuote = !isInsideQuote;\n      continue;\n    }\n\n    if (!isInsideQuote) {\n      if (currentChar === delimiter) {\n        ++col;\n        entries[row][col] = '';\n        continue;\n      }\n\n      if (currentChar === '\\n' || currentChar === '\\r') {\n        ++row;\n        col = 0;\n\n        // Skip the next character for CRLF\n        if (currentChar === '\\r' && nextChar === '\\n') ++char;\n\n        continue;\n      }\n    }\n\n    entries[row][col] += currentChar;\n  }\n\n  return entries;\n}\n\nfunction getGuessDelimiter(csvString: string): ';' | ',' {\n  let numberComma = 0,\n    numberSemicolon = 0;\n\n  const quoteChar = '\"';\n\n  let isInsideQuote = false;\n  for (const currentChar of csvString) {\n    // Check for quoted characters. Do not miss-interpret delimiter within field\n    if (currentChar === quoteChar) {\n      isInsideQuote = !isInsideQuote;\n      continue;\n    }\n\n    if (!isInsideQuote) {\n      if (currentChar === ';') {\n        numberSemicolon++;\n        continue;\n      }\n\n      if (currentChar === ',') {\n        numberComma++;\n        continue;\n      }\n    }\n  }\n\n  return numberComma > numberSemicolon ? ',' : ';';\n}\n\n/**\n * Plug-in that enriches the desc attribute in SEL type IED elements based on a signal list\n * The signal list must be a  ; or , separated CSV file with 3 columns.\n * 1st column: signal name\n * 2nd column: IED name\n * 3rd column: identifier from the SEL namespace excluding the prefix of \"db:\",\n *             similar to relay word bit name (RWB), e.g. SV24T, 51P1T, IN203\n */\nexport default class UpdateDescriptionSel extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  doc!: XMLDocument;\n\n  @query('#plugin-input') pluginFileUI!: HTMLInputElement;\n\n  processSignalList(csvString: string): void {\n    const signalList = parseCsv(csvString, getGuessDelimiter(csvString));\n\n    const items = Array.from(this.doc.querySelectorAll('IED'))\n      .filter(ied => isPublic(ied))\n      .flatMap(ied => addDescriptionToSEL(ied, signalList));\n\n    this.dispatchEvent(newWizardEvent(createLogWizard(this.doc, items)));\n  }\n\n  private async onFileInput(e: Event): Promise<void> {\n    const file = (<HTMLInputElement | null>e.target)?.files?.item(0) ?? false;\n    if (!file) return;\n\n    this.processSignalList(await file.text());\n  }\n\n  /** Entry point for this plug-in */\n  async run(): Promise<void> {\n    this.pluginFileUI.click();\n  }\n\n  render(): TemplateResult {\n    return html`<input @click=${(event: MouseEvent) =>\n      ((<HTMLInputElement>event.target).value = '')} @change=${(e: Event) =>\n      this.onFileInput(\n        e\n      )} id=\"plugin-input\" accept=\".csv\" type=\"file\"></input>`;\n  }\n\n  static styles = css`\n    input {\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n  `;\n}\n"]}