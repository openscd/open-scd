{"version":3,"file":"Communication.js","sourceRoot":"","sources":["../../src/editors/Communication.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAkB,QAAQ,EAAE,GAAG,EAAE,MAAM,aAAa,CAAC;AAC9E,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAEpC,OAAO,mBAAmB,CAAC;AAE3B,OAAO,sCAAsC,CAAC;AAC9C,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,qCAAqC,CAAC;AAE/E,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAE7C,OAAO,EAAE,cAAc,EAAE,MAAM,+CAA+C,CAAC;AAC/E,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAElE,sEAAsE;AACtE,MAAM,CAAC,OAAO,OAAO,mBAAoB,SAAQ,UAAU;IAA3D;;QAKE,cAAS,GAAG,CAAC,CAAC,CAAC;IA6FjB,CAAC;IA3FC;;;OAGG;IACK,mBAAmB;QACzB,MAAM,OAAO,GAAY,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,aAAa,CAChB,cAAc,CAAC;YACb,GAAG,EAAE;gBACH,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,eAAe;gBAChC,OAAO,EAAE,OAAO;aACjB;SACF,CAAC,CACH,CAAC;QACF,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,0EAA0E;IAClE,0BAA0B;QAChC,MAAM,MAAM,GACV,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB,CAAC;YAC/C,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,sBAAsB,CAAC,MAAO,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,mCAAmC,CAAC;YAC/D,OAAO,IAAI,CAAA;4CAC2B,GAAG,CAAC,uBAAuB,CAAC;;;;mBAIrD,GAAG,CAAC,6BAA6B,CAAC;mBAClC,GAAG,EAAE,CAAC,IAAI,CAAC,0BAA0B,EAAE;;YAE9C,CAAC;QAET,OAAO,IAAI,CAAA;;;iBAGE,GAAG,CAAC,6BAA6B,CAAC;iBAClC,GAAG,EAAE,CAAC,IAAI,CAAC,0BAA0B,EAAE;;;UAG9C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aACxD,MAAM,CAAC,QAAQ,CAAC;aAChB,GAAG,CACF,UAAU,CAAC,EAAE,CACX,IAAI,CAAA;6BACW,IAAI,CAAC,SAAS;uBACpB,IAAI,CAAC,GAAG;2BACJ,UAAU;oCACD,CACzB;kBACO,CAAC;IACjB,CAAC;;AAEM,0BAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgClB,CAAC;AA9FF;IADC,QAAQ,EAAE;gDACO;AAElB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sDACZ","sourcesContent":["import { LitElement, html, TemplateResult, property, css } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-fab';\n\nimport './communication/subnetwork-editor.js';\nimport { newWizardEvent, isPublic } from '@openscd/open-scd/src/foundation.js';\n\nimport { createElement } from '@openscd/xml';\n\nimport { newActionEvent } from '@openscd/core/foundation/deprecated/editor.js';\nimport { createSubNetworkWizard } from '../wizards/subnetwork.js';\n\n/** An editor [[`plugin`]] for editing the `Communication` section. */\nexport default class CommunicationPlugin extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  @property()\n  doc!: XMLDocument;\n  @property({ type: Number })\n  editCount = -1;\n\n  /**\n   * Creates the Communication Element and returns the created Element\n   * @returns {Element} Communication `Element`\n   */\n  private createCommunication(): Element {\n    const element: Element = createElement(this.doc, 'Communication', {});\n    this.dispatchEvent(\n      newActionEvent({\n        new: {\n          parent: this.doc.documentElement,\n          element: element,\n        },\n      })\n    );\n    return element;\n  }\n\n  /** Opens a [[`WizardDialog`]] for creating a new `SubNetwork` element. */\n  private openCreateSubNetworkWizard(): void {\n    const parent =\n      this.doc.querySelector(':root > Communication') ||\n      this.createCommunication();\n\n    this.dispatchEvent(newWizardEvent(createSubNetworkWizard(parent!)));\n  }\n\n  render(): TemplateResult {\n    if (!this.doc?.querySelector(':root > Communication >SubNetwork'))\n      return html`<h1>\n        <span style=\"color: var(--base1)\">${get('communication.missing')}</span\n        ><mwc-fab\n          extended\n          icon=\"add\"\n          label=\"${get('subnetwork.wizard.title.add')}\"\n          @click=${() => this.openCreateSubNetworkWizard()}\n        ></mwc-fab>\n      </h1>`;\n\n    return html`<mwc-fab\n        extended\n        icon=\"add\"\n        label=\"${get('subnetwork.wizard.title.add')}\"\n        @click=${() => this.openCreateSubNetworkWizard()}\n      ></mwc-fab>\n      <section>\n        ${Array.from(this.doc.querySelectorAll('SubNetwork') ?? [])\n          .filter(isPublic)\n          .map(\n            subnetwork =>\n              html`<subnetwork-editor\n                .editCount=${this.editCount}\n                .doc=${this.doc}\n                .element=${subnetwork}\n              ></subnetwork-editor>`\n          )}\n      </section> `;\n  }\n\n  static styles = css`\n    :host {\n      width: 100vw;\n    }\n\n    h1 {\n      color: var(--mdc-theme-on-surface);\n      font-family: 'Roboto', sans-serif;\n      font-weight: 300;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      margin: 0px;\n      line-height: 48px;\n      padding-left: 0.3em;\n      transition: background-color 150ms linear;\n    }\n\n    section {\n      outline: none;\n      padding: 8px 12px 16px;\n    }\n\n    subnetwork-editor {\n      margin: 8px 12px 16px;\n    }\n\n    mwc-fab {\n      position: fixed;\n      bottom: 32px;\n      right: 32px;\n    }\n  `;\n}\n"]}