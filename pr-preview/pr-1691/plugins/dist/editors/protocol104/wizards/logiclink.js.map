{"version":3,"file":"logiclink.js","sourceRoot":"","sources":["../../../../src/editors/protocol104/wizards/logiclink.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport { pTypesLogicLink104 } from '../foundation/p-types.js';\nimport {\n  getValue,\n  newWizardEvent,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n  WizardMenuActor,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport { cloneElement, createElement } from '@openscd/xml';\n\nimport {\n  ComplexAction,\n  EditorAction,\n  newActionEvent,\n  SimpleAction,\n} from '@openscd/core/foundation/deprecated/editor.js';\nimport { createNetworkTextField } from '../foundation/foundation.js';\n\nexport function editLogicLinkWizard(\n  parent: Element,\n  rGNumber: number,\n  lLNumber: number\n): Wizard {\n  return [\n    {\n      title: get('protocol104.network.logicLink.wizard.title.edit'),\n      menuActions: [\n        {\n          icon: 'delete',\n          label: get('remove'),\n          action: remove(parent, rGNumber, lLNumber),\n        },\n      ],\n      primary: {\n        icon: 'save',\n        label: get('save'),\n        action: editLogicLinkAction(parent, rGNumber, lLNumber),\n      },\n      content: [\n        html`<wizard-textfield\n            readOnly\n            label=\"${get(\n              'protocol104.network.logicLink.wizard.logicLinkNumberLabel'\n            )}\"\n            .maybeValue=${lLNumber}\n          ></wizard-textfield>\n          ${pTypesLogicLink104.map(\n            pType =>\n              html`${createNetworkTextField(\n                pType,\n                parent.querySelector(\n                  `Address > P[type$=\"RG${rGNumber}-LL${lLNumber}-${pType}\"]`\n                )?.innerHTML\n              )}`\n          )}`,\n      ],\n    },\n  ];\n}\n\nexport function createLogicLinkWizard(\n  parent: Element,\n  rGNumber: number,\n  occupiedLLNumbers: number[]\n): Wizard {\n  // Calculate the first available number for the Logic Link group.\n  let lLNumber = 1;\n  while (occupiedLLNumbers.find(n => n == lLNumber)) {\n    lLNumber++;\n  }\n\n  return [\n    {\n      title: get('protocol104.network.logicLink.wizard.title.add'),\n      primary: {\n        icon: '',\n        label: get('save'),\n        action: addLogicLinkAction(parent, rGNumber, lLNumber),\n      },\n      content: [\n        html`<wizard-textfield\n            readOnly\n            label=\"${get(\n              'protocol104.network.logicLink.wizard.logicLinkNumberLabel'\n            )}\"\n            value=\"${lLNumber}\"\n          ></wizard-textfield>\n          ${pTypesLogicLink104.map(\n            pType => html`${createNetworkTextField(pType)}`\n          )}`,\n      ],\n    },\n  ];\n}\n\n/**\n * Remove all P elements belonging to a single Logic Link group.\n * @param parent - The parent element of the P elements to remove.\n * @param rGNumber - The Redundancy Group number of all the P elements to remove.\n * @param lLNumber - The Logic Link Group number of all the P elements to remove.\n * @returns - Removing all P elements belonging to a Logic Link group.\n */\nfunction remove(\n  parent: Element,\n  rGNumber: number,\n  lLNumber: number\n): WizardMenuActor {\n  return (wizard: Element): void => {\n    const addressElement = parent.querySelector('Address');\n\n    const complexAction: ComplexAction = {\n      actions: [],\n      title: get('protocol104.network.logicLink.wizard.removedLogicLink', {\n        subNetworkName: parent.parentElement!.getAttribute('name')!,\n        apName: parent.getAttribute('apName')!,\n        iedName: parent.getAttribute('iedName')!,\n      }),\n    };\n\n    addressElement!\n      .querySelectorAll(`P[type^=\"RG${rGNumber}-LL${lLNumber}-\"]`)\n      .forEach(p => {\n        complexAction.actions.push({\n          old: {\n            parent: addressElement!,\n            element: p!,\n          },\n        });\n      });\n\n    wizard.dispatchEvent(newActionEvent(complexAction));\n    wizard.dispatchEvent(newWizardEvent());\n  };\n}\n\nfunction editLogicLinkAction(\n  parent: Element,\n  rGNumber: number,\n  lLNumber: number\n): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const actions: SimpleAction[] = [];\n\n    pTypesLogicLink104.forEach(type => {\n      const inputValue = getValue(inputs.find(i => i.label === type)!)!;\n      const elementOriginal = parent.querySelector(\n        `Address > P[type=\"RG${rGNumber}-LL${lLNumber}-${type}\"]`\n      );\n\n      if (elementOriginal == null) {\n        const element = createElement(parent.ownerDocument, 'P', {\n          type: `RG${rGNumber}-LL${lLNumber}-${type}`,\n        });\n        element.textContent = getValue(inputs.find(i => i.label === type)!)!;\n\n        actions.push({\n          new: {\n            parent: parent.querySelector('Address')!,\n            element: element,\n          },\n        });\n      } else if (inputValue !== elementOriginal?.textContent) {\n        const elementClone = cloneElement(elementOriginal!, {});\n        elementClone.textContent = inputValue;\n\n        actions.push({\n          old: {\n            element: elementOriginal!,\n          },\n          new: {\n            element: elementClone,\n          },\n        });\n      }\n    });\n\n    return actions.length != 0\n      ? [\n          {\n            actions,\n            title: get('protocol104.network.logicLink.wizard.editedLogicLink', {\n              subNetworkName: parent.parentElement!.getAttribute('name')!,\n              apName: parent.getAttribute('apName')!,\n              iedName: parent.getAttribute('iedName')!,\n            }),\n          },\n        ]\n      : [];\n  };\n}\n\nfunction addLogicLinkAction(\n  parent: Element,\n  rGNumber: number,\n  lLNumber: number\n): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const complexAction: ComplexAction = {\n      actions: [],\n      title: get('protocol104.network.logicLink.wizard.addedLogicLink', {\n        subNetworkName: parent.parentElement!.getAttribute('name')!,\n        apName: parent.getAttribute('apName')!,\n        iedName: parent.getAttribute('iedName')!,\n      }),\n    };\n\n    pTypesLogicLink104.forEach(type => {\n      const element = createElement(parent.ownerDocument, 'P', {\n        type: `RG${rGNumber}-LL${lLNumber}-${type}`,\n      });\n      element.textContent = getValue(inputs.find(i => i.label === type)!)!;\n\n      complexAction.actions.push({\n        new: {\n          parent: parent.querySelector('Address')!,\n          element: element,\n        },\n      });\n    });\n\n    return [complexAction];\n  };\n}\n"]}