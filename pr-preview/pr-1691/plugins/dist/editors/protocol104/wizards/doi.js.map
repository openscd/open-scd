{"version":3,"file":"doi.js","sourceRoot":"","sources":["../../../../src/editors/protocol104/wizards/doi.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-textarea';\n\nimport {\n  getNameAttribute,\n  newWizardEvent,\n  Wizard,\n  WizardMenuActor,\n} from '@openscd/open-scd/src/foundation.js';\nimport {\n  ComplexAction,\n  newActionEvent,\n} from '@openscd/core/foundation/deprecated/editor.js';\nimport '@openscd/open-scd/src/wizard-textfield.js';\n\nimport {\n  getCdcValueFromDOIElement,\n  getCtlModel,\n  getDoElement,\n  getFullPath,\n} from '../foundation/foundation.js';\nimport { cdcProcessings, SupportedCdcType } from '../foundation/cdc.js';\nimport { PROTOCOL_104_PRIVATE } from '../foundation/private.js';\n\nfunction renderTiOverview(foundTis: string[], label: string): TemplateResult {\n  if (foundTis.length > 0) {\n    return html` <wizard-textfield\n      label=\"${label}\"\n      .maybeValue=${foundTis.join(', ')}\n      disabled\n      readonly\n    >\n    </wizard-textfield>`;\n  }\n  return html``;\n}\n\nexport function renderDOIWizard(doiElement: Element): TemplateResult[] {\n  const iedElement = doiElement.closest('IED');\n  const fullpath = getFullPath(doiElement, 'IED');\n  const foundCdc = getCdcValueFromDOIElement(doiElement);\n  const cdc = foundCdc === 'WYE' || foundCdc === 'DEL' ? 'CMV' : foundCdc;\n\n  // Add the basic fields to the list.\n  const fields: TemplateResult[] = [\n    html`<wizard-textfield\n      label=\"IED\"\n      .maybeValue=${getNameAttribute(iedElement!)}\n      disabled\n      readonly\n    >\n    </wizard-textfield>`,\n    html`<mwc-textarea\n      label=\"DOI\"\n      value=\"${fullpath}\"\n      rows=\"2\"\n      cols=\"40\"\n      readonly\n      disabled\n    >\n    </mwc-textarea>`,\n    html`<wizard-textfield\n      label=\"Common Data Class\"\n      .maybeValue=${cdc}\n      disabled\n      readonly\n    >\n    </wizard-textfield>`,\n  ];\n\n  const lnElement = doiElement.closest('LN0, LN');\n  const doName = getNameAttribute(doiElement);\n  if (lnElement && doName) {\n    const doElement = getDoElement(lnElement, doName);\n    if (doElement) {\n      const ctlModel = getCtlModel(lnElement, doElement);\n      if (ctlModel !== null) {\n        fields.push(html` <wizard-textfield\n          label=\"ctlModel\"\n          .maybeValue=${ctlModel}\n          disabled\n          readonly\n        >\n        </wizard-textfield>`);\n      }\n    }\n  }\n\n  let monitorTis: string[] = [];\n  let controlTis: string[] = [];\n  const cdcProcessing = cdcProcessings[<SupportedCdcType>cdc];\n  fields.push(html`<wizard-textfield\n    label=\"104 Configuration available\"\n    .maybeValue=${cdcProcessing !== undefined}\n    disabled\n    readonly\n  >\n  </wizard-textfield>`);\n  if (cdcProcessing) {\n    monitorTis = Object.keys(cdcProcessing.monitor);\n    controlTis = Object.keys(cdcProcessing.control);\n  }\n\n  let foundTis = Array.from(\n    doiElement.querySelectorAll(\n      `DAI > Private[type=\"${PROTOCOL_104_PRIVATE}\"] > Address`\n    )\n  )\n    .filter(element => element.getAttribute('ti') !== '')\n    .map(element => element.getAttribute('ti')!);\n  // Remove duplicates from the array.\n  foundTis = [...new Set(foundTis)];\n\n  const foundMonitorTis = foundTis.filter(ti => monitorTis.includes(ti));\n  const foundControlTis = foundTis.filter(ti => controlTis.includes(ti));\n  const otherTis = foundTis\n    .filter(ti => !foundMonitorTis.includes(ti))\n    .filter(ti => !foundControlTis.includes(ti));\n\n  fields.push(renderTiOverview(monitorTis, 'Available Monitor TIs'));\n  fields.push(renderTiOverview(foundMonitorTis, 'Found Monitor TIs'));\n  fields.push(renderTiOverview(controlTis, 'Available Control TIs'));\n  fields.push(renderTiOverview(foundControlTis, 'Found Control TIs'));\n  fields.push(renderTiOverview(otherTis, 'Other TIs'));\n  return fields;\n}\n\nexport function remove104Private(doiElement: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    // The 104 Private Element only contains Address Elements, so we can remove all the 104 Private Elements\n    // to remove all the Address Elements also.\n    const privateElements = doiElement.querySelectorAll(\n      `DAI > Private[type=\"${PROTOCOL_104_PRIVATE}\"] > Address`\n    );\n    if (privateElements.length > 0) {\n      const complexAction: ComplexAction = {\n        actions: [],\n        title: get('protocol104.values.removedAddresses', {\n          name: getFullPath(doiElement, 'SCL'),\n          nrOfAddresses: privateElements.length,\n        }),\n      };\n      privateElements.forEach(privateElement => {\n        complexAction.actions.push({\n          old: {\n            parent: privateElement.parentElement!,\n            element: privateElement,\n          },\n        });\n      });\n\n      wizard.dispatchEvent(newActionEvent(complexAction));\n      wizard.dispatchEvent(newWizardEvent());\n    }\n  };\n}\n\nexport function showDOIInfoWizard(doiElement: Element): Wizard {\n  return [\n    {\n      title: get('protocol104.wizard.title.doiInfo'),\n      menuActions: [\n        {\n          label: get('protocol104.values.removeAddresses'),\n          icon: 'delete',\n          action: remove104Private(doiElement),\n        },\n      ],\n      content: renderDOIWizard(doiElement),\n    },\n  ];\n}\n"]}