{"version":3,"file":"service-sampled-values.js","sourceRoot":"","sources":["../../src/wizards/service-sampled-values.ts"],"names":[],"mappings":"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","sourcesContent":["import { TemplateResult } from 'lit-html';\nimport { get } from 'lit-translate';\nimport { WizardPage } from '@openscd/open-scd/src/foundation.js';\n\nimport {\n  createFormDivider,\n  createFormElementsFromInputs,\n  isEmptyObject,\n} from './services.js';\n\ninterface ControlBlockConfiguration {\n  cbName: string | null;\n  datSet: string | null;\n  svID: string | null;\n  optFields: string | null;\n  smpRate: string | null;\n  nofASDU: string | null;\n  samplesPerSec: string | null;\n  synchSrcId: string | null;\n  pdcTimeStamp: string | null;\n  kdaParticipant: string | null;\n  signature: string | null;\n  encryption: string | null;\n  smpRateVal: string | null;\n  samplesPerSecVal: string | null;\n  secPerSamplesVal: string | null;\n}\n\ninterface PublisherCapabilities {\n  max: string | null;\n  delivery: string | null;\n  deliveryConf: string | null;\n  sv: string | null;\n  rSV: string | null;\n}\n\ninterface SubscriptionCapabilities {\n  sv: string | null;\n  maxSMV: string | null;\n  rSV: string | null;\n}\n\ninterface SuperVisionCapabilities {\n  maxSv: string | null;\n}\n\ninterface ContentOptions {\n  controlBlockConfiguration: ControlBlockConfiguration;\n  publisherCapabilities: PublisherCapabilities;\n  subscriptionCapabilities: SubscriptionCapabilities;\n  superVisionCapabilities: SuperVisionCapabilities;\n}\n\nexport function createSampledValuesWizardPage(\n  services: Element\n): WizardPage | null {\n  const content: TemplateResult[] | null = createSampledValuesWizard(services);\n\n  return content\n    ? {\n        title: get('wizard.title.edit', { tagName: 'Sampled Values' }),\n        content: [...content],\n        element: services,\n      }\n    : null;\n}\n\nfunction createSampledValuesWizard(parent: Element): TemplateResult[] | null {\n  const content: ContentOptions = {\n    controlBlockConfiguration: {\n      cbName:\n        parent.querySelector('SMVSettings')?.getAttribute('cbName') ?? null,\n      datSet:\n        parent.querySelector('SMVSettings')?.getAttribute('datSet') ?? null,\n      svID: parent.querySelector('SMVSettings')?.getAttribute('svID') ?? null,\n      optFields:\n        parent.querySelector('SMVSettings')?.getAttribute('optFields') ?? null,\n      smpRate:\n        parent.querySelector('SMVSettings')?.getAttribute('smpRate') ?? null,\n      nofASDU:\n        parent.querySelector('SMVSettings')?.getAttribute('nofASDU') ?? null,\n      samplesPerSec:\n        parent.querySelector('SMVSettings')?.getAttribute('samplesPerSec') ??\n        null,\n      synchSrcId:\n        parent.querySelector('SMVSettings')?.getAttribute('synchSrcId') ?? null,\n      pdcTimeStamp:\n        parent.querySelector('SMVSettings')?.getAttribute('pdcTimeStamp') ??\n        null,\n      kdaParticipant:\n        parent.querySelector('SMVSettings')?.getAttribute('kdaParticipant') ??\n        null,\n      signature:\n        parent\n          .querySelector('SMVSettings > McSecurity')\n          ?.getAttribute('signature') ?? null,\n      encryption:\n        parent\n          .querySelector('SMVSettings > McSecurity')\n          ?.getAttribute('encryption') ?? null,\n      smpRateVal:\n        parent.querySelector('SMVSettings>SmpRate')?.childNodes[0]?.nodeValue ??\n        null,\n      samplesPerSecVal:\n        parent.querySelector('SMVSettings > SamplesPerSec')?.childNodes[0]\n          ?.nodeValue ?? null,\n      secPerSamplesVal:\n        parent.querySelector('SMVSettings > SecPerSamples')?.childNodes[0]\n          ?.nodeValue ?? null,\n    },\n    publisherCapabilities: {\n      max: parent.querySelector('SMVsc')?.getAttribute('max') ?? null,\n      delivery: parent.querySelector('SMVsc')?.getAttribute('delivery') ?? null,\n      deliveryConf:\n        parent.querySelector('SMVsc')?.getAttribute('deliveryConf') ?? null,\n      sv: parent.querySelector('SMVsc')?.getAttribute('sv') ?? null,\n      rSV: parent.querySelector('SMVsc')?.getAttribute('rSV') ?? null,\n    },\n    subscriptionCapabilities: {\n      sv: parent.querySelector('ClientServices')?.getAttribute('sv') ?? null,\n      maxSMV:\n        parent.querySelector('ClientServices')?.getAttribute('maxSMV') ?? null,\n      rSV: parent.querySelector('ClientServices')?.getAttribute('rSV') ?? null,\n    },\n    superVisionCapabilities: {\n      maxSv:\n        parent.querySelector('SupSubscription')?.getAttribute('maxSv') ?? null,\n    },\n  };\n\n  return isEmptyObject(content)\n    ? null\n    : [\n        createFormDivider('Control Block Configuration'),\n        ...createFormElementsFromInputs([\n          {\n            kind: 'Select',\n            label: 'cbName',\n            maybeValue: content.controlBlockConfiguration.cbName,\n            helper:\n              'Whether SMV control block name is configurable offline (Conf) or fixed (Fix)',\n            values: ['Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'datSet',\n            maybeValue: content.controlBlockConfiguration.datSet,\n            helper:\n              'Whether SMV control blocks data set and its structure is configurable offline (Conf), online(Dyn) or is fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'svID',\n            maybeValue: content.controlBlockConfiguration.svID,\n            helper:\n              'Whether SMV control blocks ID is configurable offline (Conf), online(Dyn) or is fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'optFields',\n            maybeValue: content.controlBlockConfiguration.optFields,\n            helper:\n              'Whether SMV control blocks optional fields are configurable offline (Conf), online(Dyn) or are fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'smpRate',\n            maybeValue: content.controlBlockConfiguration.smpRate,\n            helper:\n              'Whether SMV control blocks attribute smpRate is configurable offline (Conf), online(Dyn) or is fixed (Fix)',\n            values: ['Dyn', 'Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'nofASDU',\n            maybeValue: content.controlBlockConfiguration.nofASDU,\n            helper:\n              'Whether SMV control blocks attribute noASDU (number of timesstapms per packet) is configurable offline (Conf), online(Dyn) or is fixed (Fix)',\n            values: ['Conf', 'Fix'],\n            default: 'Fix',\n            nullable: true,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'samplesPerSec',\n            helper:\n              'Whether SMV supported sample rate definition as SamplesPerSec or SecPerSamples',\n            maybeValue:\n              content.controlBlockConfiguration.samplesPerSec?.toString() ??\n              null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'synchSrcId',\n            helper: 'Whether grandmaster clock ID can be included in the SMV',\n            maybeValue:\n              content.controlBlockConfiguration.synchSrcId?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'pdcTimeStamp',\n            helper: 'Whether the PDC timestamp can be included into SMV',\n            maybeValue:\n              content.controlBlockConfiguration.pdcTimeStamp?.toString() ??\n              null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'kdaParticipant',\n            helper: 'Whether server supports key delivery assurance (KDA)',\n            maybeValue:\n              content.controlBlockConfiguration.kdaParticipant?.toString() ??\n              null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'signature',\n            helper:\n              'Whether calculation of a signature is supported for each GOOSE',\n            maybeValue:\n              content.controlBlockConfiguration.signature?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'encryption',\n            helper: 'Whether message encryption is supported for each GOOSE',\n            maybeValue:\n              content.controlBlockConfiguration.encryption?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'TextField',\n            label: 'SmpRate',\n            required: true,\n            helper: 'Defines the implemented SmpRate in the IED',\n            maybeValue:\n              content.controlBlockConfiguration.smpRateVal?.toString() ?? null,\n            nullable: true,\n          },\n          {\n            kind: 'TextField',\n            label: 'SamplesPerSec',\n            required: true,\n            helper: 'Defines the implemented SamplesPerSec in the IED',\n            maybeValue:\n              content.controlBlockConfiguration.samplesPerSecVal?.toString() ??\n              null,\n            nullable: true,\n          },\n          {\n            kind: 'TextField',\n            label: 'SecPerSamples',\n            required: true,\n            helper: 'Defines the implemented SecPerSamples in the IED',\n            maybeValue:\n              content.controlBlockConfiguration.secPerSamplesVal?.toString() ??\n              null,\n            nullable: true,\n          },\n        ]),\n        createFormDivider('Publisher Capabilities'),\n        ...createFormElementsFromInputs([\n          {\n            kind: 'TextField',\n            label: 'max',\n            required: true,\n            helper:\n              'The maximum number of SMV control blocks the IED can publish',\n            maybeValue: content.publisherCapabilities.max?.toString() ?? null,\n            nullable: true,\n          },\n          {\n            kind: 'Select',\n            label: 'delivery',\n            maybeValue: content.publisherCapabilities.delivery,\n            helper:\n              'Whether the IED supports publishing of muslticast, unicast or both types of SMV streams',\n            values: ['unicast', 'multicast', 'both'],\n            default: 'multicast',\n            nullable: true,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'deliveryConf',\n            helper:\n              'Whether the system configurator is allowed to configure SMV control blocks',\n            maybeValue:\n              content.publisherCapabilities.deliveryConf?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'sv',\n            helper: 'Whether IED supports layer 2 sampled value streams',\n            maybeValue: content.publisherCapabilities.sv?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'rSV',\n            helper: 'Whether the IED supports layer 3 sampled value streams',\n            maybeValue: content.publisherCapabilities.rSV?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n        ]),\n        createFormDivider('Client Capabilities'),\n        ...createFormElementsFromInputs([\n          {\n            kind: 'Checkbox',\n            label: 'sv',\n            helper: 'Whether the IED supports client side SMV related services',\n            maybeValue: content.subscriptionCapabilities.sv?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n          {\n            kind: 'TextField',\n            label: 'maxSMV',\n            required: false,\n            helper:\n              'The maximal number of layer 2 sampled value streams the client can subscribe to',\n            maybeValue:\n              content.subscriptionCapabilities.maxSMV?.toString() ?? null,\n            nullable: true,\n          },\n          {\n            kind: 'Checkbox',\n            label: 'rSV',\n            helper:\n              'The maximal number of layer 3 sampled value streams the client can subscribe to',\n            maybeValue:\n              content.subscriptionCapabilities.rSV?.toString() ?? null,\n            nullable: true,\n            default: false,\n          },\n        ]),\n        createFormDivider('Dynamic Reporting/DataSets'),\n        ...createFormElementsFromInputs([\n          {\n            kind: 'TextField',\n            label: 'maxSv',\n            required: false,\n            helper:\n              'The maximum number of SMV supervision supported by this IED (LSVS)',\n            maybeValue:\n              content.superVisionCapabilities.maxSv?.toString() ?? null,\n            nullable: true,\n          },\n        ]),\n      ];\n}\n"]}