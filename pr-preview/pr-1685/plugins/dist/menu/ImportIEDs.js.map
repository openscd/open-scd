{"version":3,"file":"ImportIEDs.js","sourceRoot":"","sources":["../../src/menu/ImportIEDs.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  html,\n  LitElement,\n  property,\n  query,\n  state,\n  TemplateResult,\n} from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-list/mwc-check-list-item';\nimport '@material/dialog';\nimport '@material/mwc-button';\nimport { Dialog } from '@material/mwc-dialog';\nimport { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport '@openscd/open-scd/src/filtered-list.js';\nimport { find, identity, isPublic } from '@openscd/open-scd/src/foundation.js';\n\nimport { createElement } from '@openscd/xml';\n\nimport {\n  SimpleAction,\n  newActionEvent,\n} from '@openscd/core/foundation/deprecated/editor.js';\nimport { newLogEvent } from '@openscd/core/foundation/deprecated/history';\n\nfunction uniqueTemplateIedName(doc: XMLDocument, ied: Element): string {\n  const [manufacturer, type] = ['manufacturer', 'type'].map(attr =>\n    ied.getAttribute(attr)?.replace(/[^A-Za-z0-9_]/g, '')\n  );\n  const nameCore =\n    manufacturer || type\n      ? `${manufacturer ?? ''}${type ? '_' + type : ''}`\n      : 'TEMPLATE_IED';\n\n  const siblingNames = Array.from(doc.querySelectorAll('IED'))\n    .filter(isPublic)\n    .map(child => child.getAttribute('name') ?? child.tagName);\n  if (!siblingNames.length) return nameCore + '_001';\n\n  let newName = '';\n  for (let i = 0; i < siblingNames.length + 1; i++) {\n    const newDigit = (i + 1).toString().padStart(3, '0');\n    newName = nameCore + '_' + newDigit;\n\n    if (!siblingNames.includes(newName)) return newName;\n  }\n\n  return newName;\n}\n\n/**\n * Transfer namespaces from one element to another\n * @param destElement - Element to transfer namespaces to\n * @param sourceElement  - Element to transfer namespaces from\n */\nfunction updateNamespaces(destElement: Element, sourceElement: Element) {\n  Array.prototype.slice\n    .call(sourceElement.attributes)\n    .filter(attr => attr.name.startsWith('xmlns:'))\n    .filter(attr => !destElement.hasAttribute(attr.name))\n    .forEach(attr => {\n      destElement.setAttributeNS(\n        'http://www.w3.org/2000/xmlns/',\n        attr.name,\n        attr.value\n      );\n    });\n}\n\nfunction getSubNetwork(elements: Element[], element: Element): Element {\n  const existElement = elements.find(\n    item => item.getAttribute('name') === element.getAttribute('name')\n  );\n  return existElement ? existElement : <Element>element.cloneNode(false);\n}\n\nfunction addCommunicationElements(\n  ied: Element,\n  doc: XMLDocument\n): SimpleAction[] {\n  const actions = [];\n\n  const oldCommunicationElement = doc.querySelector(':root > Communication');\n\n  const communication = oldCommunicationElement\n    ? oldCommunicationElement\n    : createElement(doc, 'Communication', {});\n\n  if (!oldCommunicationElement)\n    actions.push({\n      new: {\n        parent: doc.querySelector(':root')!,\n        element: communication,\n      },\n    });\n\n  const connectedAPs = Array.from(\n    ied.ownerDocument.querySelectorAll(\n      `:root > Communication > SubNetwork > ConnectedAP[iedName=\"${ied.getAttribute(\n        'name'\n      )}\"]`\n    )\n  );\n\n  const createdSubNetworks: Element[] = [];\n\n  connectedAPs.forEach(connectedAP => {\n    const newSubNetwork = <Element>connectedAP.parentElement!;\n    const oldSubNetworkMatch = communication.querySelector(\n      `:root > Communication > SubNetwork[name=\"${newSubNetwork.getAttribute(\n        'name'\n      )}\"]`\n    );\n\n    const subNetwork = oldSubNetworkMatch\n      ? oldSubNetworkMatch\n      : getSubNetwork(createdSubNetworks, newSubNetwork);\n    const element = <Element>connectedAP.cloneNode(true);\n\n    if (!oldSubNetworkMatch && !createdSubNetworks.includes(subNetwork)) {\n      actions.push({\n        new: {\n          parent: communication,\n          element: subNetwork,\n        },\n      });\n      createdSubNetworks.push(subNetwork);\n    }\n\n    actions.push({\n      new: {\n        parent: subNetwork,\n        element,\n      },\n    });\n  });\n\n  return actions;\n}\n\nfunction hasConnectionToIed(type: Element, ied: Element): boolean {\n  const data: Element = type.parentElement!;\n  const id = type.getAttribute('id');\n\n  if (!data || !id) return false;\n\n  if (type.tagName === 'EnumType')\n    return Array.from(\n      data.querySelectorAll(\n        `DOType > DA[type=\"${id}\"],DAType > BDA[type=\"${id}\"]`\n      )\n    ).some(typeChild => hasConnectionToIed(typeChild.parentElement!, ied));\n\n  if (type.tagName === 'DAType')\n    return Array.from(\n      data.querySelectorAll(\n        `DOType > DA[type=\"${id}\"],DAType > BDA[type=\"${id}\"]`\n      )\n    ).some(typeChild => hasConnectionToIed(typeChild.parentElement!, ied));\n\n  if (type.tagName === 'DOType')\n    return Array.from(\n      data.querySelectorAll(\n        `LNodeType > DO[type=\"${id}\"], DOType > SDO[type=\"${id}\"]`\n      )\n    ).some(typeChild => hasConnectionToIed(typeChild.parentElement!, ied));\n\n  return Array.from(ied.getElementsByTagName('LN0'))\n    .concat(Array.from(ied.getElementsByTagName('LN')))\n    .some(anyln => anyln.getAttribute('lnType') === id);\n}\n\nfunction addEnumType(\n  ied: Element,\n  enumType: Element,\n  parent: Element\n): SimpleAction | undefined {\n  if (!hasConnectionToIed(enumType, ied)) return;\n\n  const existEnumType = parent.querySelector(\n    `EnumType[id=\"${enumType.getAttribute('id')}\"]`\n  );\n  if (existEnumType && enumType.isEqualNode(existEnumType)) return;\n\n  if (existEnumType) {\n    // There is an `id` conflict in the project that must be resolved by\n    // concatenating the IED name with the id\n    const data: Element = enumType.parentElement!;\n    const idOld = enumType.getAttribute('id');\n    const idNew = ied.getAttribute('name')! + idOld;\n    enumType.setAttribute('id', idNew);\n\n    data\n      .querySelectorAll(\n        `DOType > DA[type=\"${idOld}\"],DAType > BDA[type=\"${idOld}\"]`\n      )\n      .forEach(type => type.setAttribute('type', idNew));\n  }\n\n  return {\n    new: {\n      parent,\n      element: enumType,\n    },\n  };\n}\n\nfunction addDAType(\n  ied: Element,\n  daType: Element,\n  parent: Element\n): SimpleAction | undefined {\n  if (!hasConnectionToIed(daType, ied)) return;\n\n  const existDAType = parent.querySelector(\n    `DAType[id=\"${daType.getAttribute('id')}\"]`\n  );\n  if (existDAType && daType.isEqualNode(existDAType)) return;\n\n  if (existDAType) {\n    // There is an `id` conflict in the project that must be resolved by\n    // concatenating the IED name with the id\n    const data: Element | null = daType.parentElement!;\n    const idOld = daType.getAttribute('id');\n    const idNew = ied.getAttribute('name')! + idOld;\n    daType.setAttribute('id', idNew);\n\n    data\n      .querySelectorAll(\n        `DOType > DA[type=\"${idOld}\"],DAType > BDA[type=\"${idOld}\"]`\n      )\n      .forEach(type => type.setAttribute('type', idNew));\n  }\n\n  return {\n    new: {\n      parent,\n      element: daType,\n    },\n  };\n}\n\nfunction addDOType(\n  ied: Element,\n  doType: Element,\n  parent: Element\n): SimpleAction | undefined {\n  if (!hasConnectionToIed(doType, ied)) return;\n\n  const existDOType = parent.querySelector(\n    `DOType[id=\"${doType.getAttribute('id')}\"]`\n  );\n  if (existDOType && doType.isEqualNode(existDOType)) return;\n\n  if (existDOType) {\n    // There is an `id` conflict in the project that must be resolved by\n    // concatenating the IED name with the id\n    const data: Element = doType.parentElement!;\n    const idOld = doType.getAttribute('id');\n    const idNew = ied.getAttribute('name')! + idOld;\n    doType.setAttribute('id', idNew);\n\n    data\n      .querySelectorAll(\n        `LNodeType > DO[type=\"${idOld}\"], DOType > SDO[type=\"${idOld}\"]`\n      )\n      .forEach(type => type.setAttribute('type', idNew));\n  }\n\n  return {\n    new: {\n      parent,\n      element: doType,\n    },\n  };\n}\n\nfunction addLNodeType(\n  ied: Element,\n  lNodeType: Element,\n  parent: Element\n): SimpleAction | undefined {\n  if (!hasConnectionToIed(lNodeType, ied)) return;\n\n  const existLNodeType = parent.querySelector(\n    `LNodeType[id=\"${lNodeType.getAttribute('id')}\"]`\n  );\n  if (existLNodeType && lNodeType.isEqualNode(existLNodeType)) return;\n\n  if (existLNodeType) {\n    // There is an `id` conflict in the project that must be resolved by\n    // concatenating the IED name with the id\n    const idOld = lNodeType.getAttribute('id')!;\n    const idNew = ied.getAttribute('name')!.concat(idOld);\n    lNodeType.setAttribute('id', idNew);\n\n    Array.from(\n      ied.querySelectorAll(`LN0[lnType=\"${idOld}\"],LN[lnType=\"${idOld}\"]`)\n    )\n      .filter(isPublic)\n      .forEach(ln => ln.setAttribute('lnType', idNew));\n  }\n\n  return {\n    new: {\n      parent,\n      element: lNodeType,\n    },\n  };\n}\n\nfunction addDataTypeTemplates(ied: Element, doc: XMLDocument): SimpleAction[] {\n  const actions: (SimpleAction | undefined)[] = [];\n\n  const dataTypeTemplates = doc.querySelector(':root > DataTypeTemplates')\n    ? doc.querySelector(':root > DataTypeTemplates')!\n    : createElement(doc, 'DataTypeTemplates', {});\n\n  if (!dataTypeTemplates.parentElement) {\n    actions.push({\n      new: {\n        parent: doc.querySelector('SCL')!,\n        element: dataTypeTemplates,\n      },\n    });\n  }\n\n  ied.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > LNodeType')\n    .forEach(lNodeType =>\n      actions.push(addLNodeType(ied, lNodeType, dataTypeTemplates!))\n    );\n\n  ied.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > DOType')\n    .forEach(doType =>\n      actions.push(addDOType(ied, doType, dataTypeTemplates!))\n    );\n\n  ied.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > DAType')\n    .forEach(daType =>\n      actions.push(addDAType(ied, daType, dataTypeTemplates!))\n    );\n\n  ied.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > EnumType')\n    .forEach(enumType =>\n      actions.push(addEnumType(ied, enumType, dataTypeTemplates!))\n    );\n\n  return <SimpleAction[]>actions.filter(item => item !== undefined);\n}\n\nfunction isIedNameUnique(ied: Element, doc: Document): boolean {\n  const existingIedNames = Array.from(doc.querySelectorAll(':root > IED')).map(\n    ied => ied.getAttribute('name')!\n  );\n  const importedIedName = ied.getAttribute('name')!;\n\n  if (existingIedNames.includes(importedIedName)) return false;\n\n  return true;\n}\n\nexport default class ImportingIedPlugin extends LitElement {\n  @property({ attribute: false })\n  doc!: XMLDocument;\n  @property({ type: Number })\n  editCount = -1;\n\n  @state()\n  iedSelection: TemplateResult[] = [];\n\n  @query('#importied-plugin-input') pluginFileUI!: HTMLInputElement;\n  @query('mwc-dialog') dialog!: Dialog;\n\n  async run(): Promise<void> {\n    this.iedSelection = [];\n    this.pluginFileUI.click();\n  }\n\n  async docUpdate(): Promise<void> {\n    await this.updateComplete;\n  }\n\n  private importIED(ied: Element): void {\n    if (ied.getAttribute('name') === 'TEMPLATE') {\n      const newIedName = uniqueTemplateIedName(this.doc, ied);\n\n      ied.setAttribute('name', newIedName);\n\n      Array.from(\n        ied.ownerDocument.querySelectorAll(\n          ':root > Communication > SubNetwork > ConnectedAP[iedName=\"TEMPLATE\"]'\n        )\n      ).forEach(connectedAp => connectedAp.setAttribute('iedName', newIedName));\n    }\n\n    if (!isIedNameUnique(ied, this.doc)) {\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'error',\n          title: get('import.log.nouniqueied', {\n            name: ied.getAttribute('name')!,\n          }),\n        })\n      );\n      return;\n    }\n\n    // This doesn't provide redo/undo capability as it is not using the Editing\n    // action API. To use it would require us to cache the full SCL file in\n    // OpenSCD as it is now which could use significant memory.\n\n    // TODO: In open-scd core update this to allow including in undo/redo.\n    updateNamespaces(\n      this.doc.documentElement,\n      ied.ownerDocument.documentElement\n    );\n\n    const dataTypeTemplateActions = addDataTypeTemplates(ied, this.doc);\n    const communicationActions = addCommunicationElements(ied, this.doc);\n    const actions = communicationActions.concat(dataTypeTemplateActions);\n    actions.push({\n      new: {\n        parent: this.doc!.querySelector(':root')!,\n        element: ied,\n      },\n    });\n\n    this.dispatchEvent(\n      newActionEvent({\n        title: get('editing.import', { name: ied.getAttribute('name')! }),\n        actions,\n      })\n    );\n  }\n\n  private async importIEDs(\n    importDoc: XMLDocument,\n    fileName: string\n  ): Promise<void> {\n    const documentDialog: Dialog = this.shadowRoot!.querySelector(\n      `mwc-dialog[data-file=\"${fileName}\"]`\n    )!;\n\n    const selectedItems = <ListItemBase[]>(\n      (<List>documentDialog.querySelector('filtered-list')).selected\n    );\n\n    const ieds = selectedItems\n      .map(item => {\n        return find(importDoc, 'IED', item.value);\n      })\n      .filter(ied => ied) as Element[];\n\n    documentDialog.close();\n\n    for (const ied of ieds) {\n      this.importIED(ied);\n      await this.docUpdate();\n    }\n  }\n\n  async prepareImport(importDoc: XMLDocument, fileName: string): Promise<void> {\n    if (!importDoc) {\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'error',\n          title: get('import.log.loaderror'),\n        })\n      );\n      return;\n    }\n\n    if (importDoc.querySelector('parsererror')) {\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'error',\n          title: get('import.log.parsererror'),\n        })\n      );\n      return;\n    }\n\n    const ieds = Array.from(importDoc.querySelectorAll(':root > IED'));\n    if (ieds.length === 0) {\n      this.dispatchEvent(\n        newLogEvent({\n          kind: 'error',\n          title: get('import.log.missingied'),\n        })\n      );\n      return;\n    }\n\n    if (ieds.length === 1) {\n      this.importIED(ieds[0]);\n      return await this.docUpdate();\n    }\n\n    this.buildIedSelection(importDoc, fileName);\n    await this.requestUpdate();\n    const dialog = <Dialog>(\n      this.shadowRoot!.querySelector(`mwc-dialog[data-file=\"${fileName}\"]`)\n    );\n    dialog.show();\n\n    // await closing of dialog\n    await new Promise<void>(resolve => {\n      dialog.addEventListener('closed', function onClosed(evt) {\n        evt.target?.removeEventListener('closed', onClosed);\n        resolve();\n      });\n    });\n  }\n\n  /** Loads the file `event.target.files[0]` into [[`src`]] as a `blob:...`. */\n  protected async onLoadFiles(event: Event): Promise<void> {\n    const files = Array.from(\n      (<HTMLInputElement | null>event.target)?.files ?? []\n    );\n\n    const promises = files.map(file => {\n      return {\n        text: file\n          .text()\n          .then(text =>\n            new DOMParser().parseFromString(text, 'application/xml')\n          ),\n        name: file.name,\n      };\n    });\n\n    for await (const file of promises) {\n      await this.prepareImport(await file.text, file.name);\n    }\n  }\n\n  protected renderInput(): TemplateResult {\n    return html`<input multiple @change=${(event: Event) => {\n      this.onLoadFiles(event);\n      (<HTMLInputElement>event.target).value = '';\n    }} id=\"importied-plugin-input\" accept=\".sed,.scd,.ssd,.isd,.iid,.cid,.icd\" type=\"file\"></input>`;\n  }\n\n  protected buildIedSelection(importDoc: XMLDocument, fileName: string): void {\n    this.iedSelection.push(html`<mwc-dialog data-file=\"${fileName}\">\n      <filtered-list hasSlot multi>\n        ${Array.from(importDoc?.querySelectorAll(':root > IED') ?? []).map(\n          ied =>\n            html`<mwc-check-list-item value=\"${identity(ied)}\"\n              >${ied.getAttribute('name')}</mwc-check-list-item\n            >`\n        )}\n        <mwc-icon-button slot=\"meta\" icon=\"edit\"></mwc-icon-button>\n      </filtered-list>\n      <mwc-button\n        dialogAction=\"close\"\n        label=\"${get('close')}\"\n        slot=\"secondaryAction\"\n        style=\"--mdc-theme-primary: var(--mdc-theme-error)\"\n      ></mwc-button>\n      <mwc-button\n        label=\"IEDs\"\n        slot=\"primaryAction\"\n        icon=\"add\"\n        @click=${() => this.importIEDs(importDoc, fileName)}\n      ></mwc-button>\n    </mwc-dialog>`);\n  }\n\n  render(): TemplateResult {\n    return html`${this.iedSelection}${this.renderInput()}`;\n  }\n\n  static styles = css`\n    input {\n      width: 0;\n      height: 0;\n      opacity: 0;\n    }\n  `;\n}\n"]}