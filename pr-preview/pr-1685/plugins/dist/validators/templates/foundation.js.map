{"version":3,"file":"foundation.js","sourceRoot":"","sources":["../../../src/validators/templates/foundation.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAC9C,OAAO,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AACzC,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAC9C,OAAO,EAAE,kBAAkB,EAAE,MAAM,gBAAgB,CAAC;AAEpD,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,CAAC,qCAAqC,CAAC;KACnE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAExE,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,CAAC,qCAAqC,CAAC;KACnE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAExE,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,CAAC,qCAAqC,CAAC;KACnE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAExE,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,CAAC,qCAAqC,CAAC;KACnE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAExE,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;CACN,CAAC;AAEF,MAAM,UAAU,aAAa,CAAC,OAAgB;IAC5C,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAChC,MAAM,eAAe,GACnB,OAAO,KAAK,IAAI;QAChB,OAAO,KAAK,KAAK;QACjB,CAAC,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC;YACtC,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,MAAM;gBACvC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;IAEnD,MAAM,aAAa,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAEpD,OAAO,eAAe,IAAI,aAAa,CAAC;AAC1C,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,OAAgB;IAC3C,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC;IAC5D,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC;IACxD,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC;IAEnE,MAAM,YAAY,GAAG,IAAI;QACvB,CAAC,CAAC,QAAQ;QACV,CAAC,CAAC,QAAQ,IAAI,MAAM;YACpB,CAAC,CAAC,QAAQ;gBACR,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,UAAU;YACd,CAAC,CAAC,IAAI,CAAC;IAET,IAAI,CAAC,YAAY;QAAE,OAAO,SAAS,CAAC;IAEpC,OAAO,CACL,OAAO;SACJ,OAAO,CAAC,mBAAmB,CAAC;QAC7B,EAAE,aAAa,CACb,GAAG,YAAY,QAAQ,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CACxD,IAAI,IAAI,CACZ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,GAAgB,EAAE,IAAY;IAC7D,IAAI,IAAI,KAAK,EAAE;QAAE,OAAO,EAAE,CAAC;IAC3B,MAAM,SAAS,GAAG,gBAAgB,CAChC,GAAG,EACH,GAAG;SACA,aAAa,CAAC,iBAAiB,IAAI,6BAA6B,IAAI,IAAI,CAAC;QAC1E,EAAE,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAC/B,CAAC;IACF,OAAO,KAAK,CAAC,IAAI,CACf,GAAG,CAAC,gBAAgB,CAClB,iBAAiB,IAAI,6BAA6B,IAAI,IAAI,CAC3D,CACF,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACtB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CACpC,OAAgB;IAEhB,MAAM,MAAM,GAAoB,EAAE,CAAC;IAEnC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAE9C,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;QAC5B,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS;YAAE,SAAS;QAEzB,MAAM,WAAW,GAAG,MAAM,SAAS,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,WAAW,CAAC,MAAM;YACpB,KAAK,MAAM,UAAU,IAAI,WAAW;gBAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACjE;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAID,MAAM,CAAC,MAAM,YAAY,GAAgD;IACvE,SAAS,EAAE,kBAAkB;IAC7B,MAAM,EAAE,eAAe;IACvB,MAAM,EAAE,eAAe;IACvB,EAAE,EAAE,WAAW;IACf,GAAG,EAAE,WAAW;IAChB,EAAE,EAAE,WAAW;IACf,GAAG,EAAE,WAAW;CACjB,CAAC","sourcesContent":["import { LogDetailBase } from '@openscd/core/foundation/deprecated/history.js';\n\nimport { dAValidator } from './dabda.js';\nimport { dATypeValidator } from './datype.js';\nimport { dOValidator } from './dosdo.js';\nimport { dOTypeValidator } from './dotype.js';\nimport { lNodeTypeValidator } from './lnodetype.js';\n\nexport const iec6185074 = fetch('public/xml/IEC_61850-7-4_2007B3.nsd')\n  .then(response => response.text())\n  .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\nexport const iec6185073 = fetch('public/xml/IEC_61850-7-3_2007B3.nsd')\n  .then(response => response.text())\n  .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\nexport const iec6185072 = fetch('public/xml/IEC_61850-7-2_2007B3.nsd')\n  .then(response => response.text())\n  .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\nexport const iec6185081 = fetch('public/xml/IEC_61850-8-1_2003A2.nsd')\n  .then(response => response.text())\n  .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\nexport const serviceCDCs = [\n  'SPC',\n  'DPC',\n  'INC',\n  'ENC',\n  'BSC',\n  'ISC',\n  'APC',\n  'BAC',\n];\n\nexport function isTypeMissing(element: Element): boolean {\n  const tagName = element.tagName;\n  const isTypeMandatory =\n    tagName === 'DO' ||\n    tagName === 'SDO' ||\n    ((tagName === 'DA' || tagName === 'BDA') &&\n      (element.getAttribute('bType') === 'Enum' ||\n        element.getAttribute('bType') === 'Struct'));\n\n  const isTypeMissing = !element.getAttribute('type');\n\n  return isTypeMandatory && isTypeMissing;\n}\n\nexport function getTypeChild(element: Element): Element | null | undefined {\n  const isStruct = element.getAttribute('bType') === 'Struct';\n  const isEnum = element.getAttribute('bType') === 'Enum';\n  const isDo = element.tagName === 'DO' || element.tagName === 'SDO';\n\n  const referenceTag = isDo\n    ? 'DOType'\n    : isStruct || isEnum\n    ? isStruct\n      ? 'DAType'\n      : 'EnumType'\n    : null;\n\n  if (!referenceTag) return undefined;\n\n  return (\n    element\n      .closest('DataTypeTemplates')\n      ?.querySelector(\n        `${referenceTag}[id=\"${element.getAttribute('type')}\"]`\n      ) ?? null\n  );\n}\n\nexport function getAdjacentClass(nsd: XMLDocument, base: string): Element[] {\n  if (base === '') return [];\n  const adjacents = getAdjacentClass(\n    nsd,\n    nsd\n      .querySelector(`LNClass[name=\"${base}\"], AbstractLNClass[name=\"${base}\"]`)\n      ?.getAttribute('base') ?? ''\n  );\n  return Array.from(\n    nsd.querySelectorAll(\n      `LNClass[name=\"${base}\"], AbstractLNClass[name=\"${base}\"]`\n    )\n  ).concat(adjacents);\n}\n\nexport async function validateChildren(\n  element: Element\n): Promise<LogDetailBase[]> {\n  const issues: LogDetailBase[] = [];\n\n  const children = Array.from(element.children);\n\n  for (const child of children) {\n    const validator = tagValidator[child.tagName];\n    if (!validator) continue;\n\n    const childIssues = await validator(child);\n    if (childIssues.length)\n      for (const childIssue of childIssues) issues.push(childIssue);\n  }\n\n  return issues;\n}\n\ntype ValidationFunction = (e: Element, r?: Element) => Promise<LogDetailBase[]>;\n\nexport const tagValidator: Partial<Record<string, ValidationFunction>> = {\n  LNodeType: lNodeTypeValidator,\n  DOType: dOTypeValidator,\n  DAType: dATypeValidator,\n  DO: dOValidator,\n  SDO: dOValidator,\n  DA: dAValidator,\n  BDA: dAValidator,\n};\n"]}