{"version":3,"file":"datype-wizards.js","sourceRoot":"","sources":["../../../src/editors/templates/datype-wizards.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-button';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-list-item';\nimport '@material/mwc-select';\nimport { List } from '@material/mwc-list';\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\nimport { Select } from '@material/mwc-select';\nimport { SingleSelectedEvent } from '@material/mwc-list/mwc-list-foundation';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport {\n  find,\n  getValue,\n  identity,\n  newSubWizardEvent,\n  newWizardEvent,\n  patterns,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n  WizardMenuActor,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport { cloneElement, createElement } from '@openscd/xml';\n\nimport {\n  Create,\n  EditorAction,\n  newActionEvent,\n  Replace,\n} from '@openscd/core/foundation/deprecated/editor.js';\nimport { createBDAWizard, editBDAWizard } from '../../wizards/bda.js';\nimport {\n  addReferencedDataTypes,\n  allDataTypeSelector,\n  unifyCreateActionArray,\n} from './foundation.js';\n\nfunction remove(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    wizard.dispatchEvent(\n      newActionEvent({ old: { parent: element.parentElement!, element } })\n    );\n    wizard.dispatchEvent(newWizardEvent());\n  };\n}\n\nfunction openAddBda(parent: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    wizard.dispatchEvent(newSubWizardEvent(() => createBDAWizard(parent)));\n  };\n}\n\nfunction updateDATpyeAction(element: Element): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const id = getValue(inputs.find(i => i.label === 'id')!)!;\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n\n    if (\n      id === element.getAttribute('id') &&\n      desc === element.getAttribute('desc')\n    )\n      return [];\n\n    const newElement = cloneElement(element, { id, desc });\n\n    const actions: Replace[] = [];\n    actions.push({ old: { element }, new: { element: newElement } });\n\n    const oldId = element.getAttribute('id')!;\n    Array.from(\n      element.ownerDocument.querySelectorAll(\n        `DOType > DA[type=\"${oldId}\"], DAType > BDA[type=\"${oldId}\"]`\n      )\n    ).forEach(oldDa => {\n      const newDa = <Element>oldDa.cloneNode(false);\n      newDa.setAttribute('type', id);\n\n      actions.push({ old: { element: oldDa }, new: { element: newDa } });\n    });\n\n    return [\n      { title: get('datype.action.edit', { oldId, newId: id }), actions },\n    ];\n  };\n}\n\nexport function editDaTypeWizard(\n  dATypeIdentity: string,\n  doc: XMLDocument\n): Wizard | undefined {\n  const datype = find(doc, 'DAType', dATypeIdentity);\n  if (!datype) return undefined;\n\n  const id = datype.getAttribute('id');\n  const desc = datype.getAttribute('desc');\n\n  return [\n    {\n      title: get('datype.wizard.title.edit'),\n      element: datype ?? undefined,\n      primary: {\n        icon: '',\n        label: get('save'),\n        action: updateDATpyeAction(datype),\n      },\n      menuActions: [\n        {\n          label: get('remove'),\n          icon: 'delete',\n          action: remove(datype),\n        },\n        {\n          label: get('scl.DA'),\n          icon: 'playlist_add',\n          action: openAddBda(datype),\n        },\n      ],\n      content: [\n        html`<wizard-textfield\n          label=\"id\"\n          helper=\"${get('scl.id')}\"\n          .maybeValue=${id}\n          required\n          maxlength=\"127\"\n          minlength=\"1\"\n          pattern=\"${patterns.nmToken}\"\n          dialogInitialFocus\n        ></wizard-textfield>`,\n        html`<wizard-textfield\n          label=\"desc\"\n          helper=\"${get('scl.desc')}\"\n          .maybeValue=${desc}\n          nullable\n          pattern=\"${patterns.normalizedString}\"\n        ></wizard-textfield>`,\n        html`<mwc-list\n          style=\"margin-top: 0px;\"\n          @selected=${(e: SingleSelectedEvent) => {\n            const bdaIdentity = (<ListItem>(<List>e.target).selected).value;\n            const bda = find(doc, 'BDA', bdaIdentity);\n\n            if (bda)\n              e.target!.dispatchEvent(newSubWizardEvent(editBDAWizard(bda)));\n          }}\n        >\n          ${Array.from(datype.querySelectorAll('BDA')).map(\n            bda =>\n              html`<mwc-list-item twoline tabindex=\"0\" value=\"${identity(bda)}\"\n                ><span>${bda.getAttribute('name')}</span\n                ><span slot=\"secondary\"\n                  >${bda.getAttribute('bType') === 'Enum' ||\n                  bda.getAttribute('bType') === 'Struct'\n                    ? '#' + bda.getAttribute('type')\n                    : bda.getAttribute('bType')}</span\n                ></mwc-list-item\n              >`\n          )}\n        </mwc-list> `,\n      ],\n    },\n  ];\n}\n\nfunction addPredefinedDAType(\n  parent: Element,\n  templates: XMLDocument\n): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const id = getValue(inputs.find(i => i.label === 'id')!);\n\n    if (!id) return [];\n\n    const existId = Array.from(\n      templates.querySelectorAll(allDataTypeSelector)\n    ).some(type => type.getAttribute('id') === id);\n\n    if (existId) return [];\n\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n    const values = <Select>inputs.find(i => i.label === 'values');\n    const selectedElement = values.selected\n      ? templates.querySelector(`DAType[id=\"${values.selected.value}\"]`)\n      : null;\n    const element = values.selected\n      ? <Element>selectedElement!.cloneNode(true)\n      : createElement(parent.ownerDocument, 'DAType', {});\n\n    element.setAttribute('id', id);\n    if (desc) element.setAttribute('desc', desc);\n\n    const actions: Create[] = [];\n\n    if (selectedElement)\n      addReferencedDataTypes(selectedElement, parent).forEach(action =>\n        actions.push(action)\n      );\n\n    actions.push({\n      new: {\n        parent,\n        element,\n      },\n    });\n\n    return unifyCreateActionArray(actions);\n  };\n}\n\nexport function createDATypeWizard(\n  parent: Element,\n  templates: Document\n): Wizard {\n  return [\n    {\n      title: get('datype.wizard.title.add'),\n      primary: {\n        icon: 'add',\n        label: get('add'),\n        action: addPredefinedDAType(parent, templates),\n      },\n      content: [\n        html`<mwc-select\n          fixedMenuPosition\n          outlined\n          icon=\"playlist_add_check\"\n          label=\"values\"\n          helper=\"Default enumerations\"\n        >\n          ${Array.from(templates.querySelectorAll('DAType')).map(\n            datype =>\n              html`<mwc-list-item\n                graphic=\"icon\"\n                hasMeta\n                value=\"${datype.getAttribute('id') ?? ''}\"\n                ><span\n                  >${datype.getAttribute('id')?.replace('OpenSCD_', '')}</span\n                >\n                <span slot=\"meta\"\n                  >${datype.querySelectorAll('BDA').length}</span\n                >\n              </mwc-list-item>`\n          )}\n        </mwc-select>`,\n        html`<wizard-textfield\n          label=\"id\"\n          helper=\"${get('scl.id')}\"\n          .maybeValue=${''}\n          required\n          maxlength=\"255\"\n          minlength=\"1\"\n          pattern=\"${patterns.nmToken}\"\n          dialogInitialFocus\n        ></wizard-textfield>`,\n        html`<wizard-textfield\n          label=\"desc\"\n          helper=\"${get('scl.desc')}\"\n          .maybeValue=${null}\n          nullable\n          pattern=\"${patterns.normalizedString}\"\n        ></wizard-textfield>`,\n      ],\n    },\n  ];\n}\n"]}