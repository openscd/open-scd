{"version":3,"file":"SclHistory.js","sourceRoot":"","sources":["../../src/menu/SclHistory.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,IAAI,EACJ,GAAG,EACH,QAAQ,EACR,KAAK,EAEL,UAAU,GACX,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAEpC,OAAO,sBAAsB,CAAC;AAC9B,OAAO,sBAAsB,CAAC;AAC9B,OAAO,oBAAoB,CAAC;AAC5B,OAAO,kCAAkC,CAAC;AAG1C,MAAM,CAAC,OAAO,OAAO,gBAAiB,SAAQ,UAAU;IAAxD;;QAIE,cAAS,GAAG,CAAC,CAAC,CAAC;IAiFjB,CAAC;IA7ES,aAAa,CACnB,GAAkB,EAClB,GAAkB;QAElB,IAAI,OAAO,GAAG,GAAG,CAAC;QAClB,IAAI,OAAO,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE;YACpC,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC;SACxB;aAAM,IAAI,GAAG,KAAK,IAAI,EAAE;YACvB,OAAO,GAAG,GAAG,CAAC;SACf;QACD,OAAO,OAAO,IAAI,SAAS,CAAC;IAC9B,CAAC;IAED,IAAI,UAAU;QACZ,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,OAAO,KAAK,CAAC,IAAI,CACf,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,kCAAkC,CAAC,CAC9D,CAAC;SACH;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,GAAG;QACP,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,qBAAqB,CAAC,OAAgB;QACpC,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAChC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAC3B,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAC5B,CAAC;QACF,MAAM,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAA,iBAAiB,KAAK;mDACc,CAAC,CAAC,OAAO;;gBAE5C,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC;YAChC,KAAK;;iCAEgB,OAAO;;MAElC,CAAC;IACL,CAAC;IAEO,gBAAgB;QACtB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;YAC5B,OAAO,IAAI,CAAC,UAAU;iBACnB,KAAK,EAAE;iBACP,OAAO,EAAE;iBACT,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;;YAEzC,OAAO,IAAI,CAAA;gBACD,GAAG,CAAC,mBAAmB,CAAC;uBACjB,CAAC;IACtB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,yCAAyC,GAAG,CAAC,cAAc,CAAC;;WAEhE,IAAI,CAAC,gBAAgB,EAAE;;;WAGvB,GAAG,CAAC,OAAO,CAAC;;kBAEL,CAAC;IACjB,CAAC;;AAEM,uBAAM,GAAG,GAAG,CAAA;;;;;;;;;;GAUlB,CAAC;AAlFF;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;6CACb;AAElB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;mDACZ;AAEO;IAArB,KAAK,CAAC,aAAa,CAAC;oDAAqB","sourcesContent":["import {\n  html,\n  css,\n  property,\n  query,\n  TemplateResult,\n  LitElement,\n} from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-button';\nimport '@material/mwc-dialog';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-list-item';\nimport { Dialog } from '@material/mwc-dialog';\n\nexport default class SclHistoryPlugin extends LitElement {\n  @property({ attribute: false })\n  doc!: XMLDocument;\n  @property({ type: Number })\n  editCount = -1;\n\n  @query('#historyLog') historyLog!: Dialog;\n\n  private createMessage(\n    who: string | null,\n    why: string | null\n  ): string | undefined {\n    let message = who;\n    if (message !== null && why !== null) {\n      message += ' : ' + why;\n    } else if (why !== null) {\n      message = why;\n    }\n    return message ?? undefined;\n  }\n\n  get sclHistory(): Element[] {\n    if (this.doc) {\n      return Array.from(\n        this.doc.querySelectorAll(':root > Header > History > Hitem')\n      );\n    }\n    return [];\n  }\n\n  async run(): Promise<void> {\n    this.historyLog.open = true;\n  }\n\n  renderSclHistoryEntry(element: Element): TemplateResult {\n    const message = this.createMessage(\n      element.getAttribute('who'),\n      element.getAttribute('why')\n    );\n    const title = element.getAttribute('what');\n    return html` <abbr title=\"${title}\">\n      <mwc-list-item class=\"sclHistory\" ?twoline=${!!message}>\n        <span>\n          <tt>${element.getAttribute('when')}</tt>\n          ${title}</span\n        >\n        <span slot=\"secondary\">${message}</span>\n      </mwc-list-item></abbr\n    >`;\n  }\n\n  private renderSclHistory(): TemplateResult[] | TemplateResult {\n    if (this.sclHistory.length > 0)\n      return this.sclHistory\n        .slice()\n        .reverse()\n        .map(this.renderSclHistoryEntry, this);\n    else\n      return html`<mwc-list-item disabled>\n        <span>${get('history.noEntries')}</span>\n      </mwc-list-item>`;\n  }\n\n  render(): TemplateResult {\n    return html` <mwc-dialog id=\"historyLog\" heading=\"${get('history.name')}\">\n      <mwc-list id=\"historyLogContent\" wrapFocus\n        >${this.renderSclHistory()}</mwc-list\n      >\n      <mwc-button slot=\"secondaryAction\" dialogaction=\"close\"\n        >${get('close')}</mwc-button\n      >\n    </mwc-dialog>`;\n  }\n\n  static styles = css`\n    .sclHistory {\n      display: flex;\n    }\n    #historyLog {\n      --mdc-dialog-min-width: 92vw;\n    }\n    abbr {\n      text-decoration: none;\n    }\n  `;\n}\n"]}