{"version":3,"file":"GooseSubscriberMessageBinding.js","sourceRoot":"","sources":["../../src/editors/GooseSubscriberMessageBinding.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,GAAG,EACH,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,KAAK,GAEN,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAEpC,OAAO,qBAAqB,CAAC;AAC7B,OAAO,yBAAyB,CAAC;AAGjC,OAAO,yCAAyC,CAAC;AACjD,OAAO,oCAAoC,CAAC;AAC5C,OAAO,4BAA4B,CAAC;AACpC,OAAO,EAAE,YAAY,EAAE,IAAI,EAAa,MAAM,8BAA8B,CAAC;AAE7E,kEAAkE;AAClE,IAAI,IAAI,GAAS,IAAI,CAAC,SAAS,CAAC;AAEhC,qEAAqE;AACrE,MAAM,CAAC,OAAO,OAAO,mCAAoC,SAAQ,UAAU;IAgBzE;QACE,KAAK,EAAE,CAAC;QAZV,cAAS,GAAG,CAAC,CAAC,CAAC;QAab,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAc,EAAE,EAAE;YAC/C,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,IAAI,IAAI,CAAC,SAAS;YACpB,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC;YACrD,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;8BACe,GAAG,CAAC,uCAAuC,CAAC;;;;;mBAKvD,GAAG,EAAE,CACZ,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;;8BAGtC,GAAG,CAAC,wCAAwC,CAAC;;;;;mBAKxD,GAAG,EAAE,CACZ,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;;;UAI3D,IAAI,IAAI,IAAI,CAAC,SAAS;YACtB,CAAC,CAAC,IAAI,CAAA;;2BAEW,IAAI,CAAC,SAAS;qBACpB,IAAI,CAAC,GAAG;2BACF;YACjB,CAAC,CAAC,IAAI,CAAA;;2BAEW,IAAI,CAAC,SAAS;qBACpB,IAAI,CAAC,GAAG;;yBAEJ;;;uBAGF,IAAI,CAAC,SAAS;iBACpB,IAAI,CAAC,GAAG;;;WAGd,CAAC;IACV,CAAC;;AAEM,0CAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;GAkBlB,CAAC;AAvFF;IADC,QAAQ,EAAE;gEACO;AAElB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sEACZ;AAGf;IADC,KAAK,CAAC,qBAAqB,CAAC;+EACM;AAGnC;IADC,KAAK,CAAC,sBAAsB,CAAC;gFACM;AAGpC;IADC,KAAK,CAAC,wBAAwB,CAAC;oEACd","sourcesContent":["import {\n  css,\n  html,\n  LitElement,\n  property,\n  query,\n  TemplateResult,\n} from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-radio';\nimport '@material/mwc-formfield';\nimport { RadioListItem } from '@material/mwc-list/mwc-radio-list-item';\n\nimport './subscription/goose/subscriber-list.js';\nimport './subscription/goose/goose-list.js';\nimport './subscription/ied-list.js';\nimport { newViewEvent, View, ViewEvent } from './subscription/foundation.js';\n\n/** Defining view outside the class, which makes it persistent. */\nlet view: View = View.PUBLISHER;\n\n/** An editor [[`plugin`]] for subscribing IEDs to GOOSE messages. */\nexport default class GooseSubscriberMessageBindingPlugin extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  @property()\n  doc!: XMLDocument;\n  @property({ type: Number })\n  editCount = -1;\n\n  @query('#goosePublisherView')\n  goosePublisherView!: RadioListItem;\n\n  @query('#gooseSubscriberView')\n  gooseSubscriberView!: RadioListItem;\n\n  @query('div[class=\"container\"]')\n  listDiv!: Element;\n\n  constructor() {\n    super();\n    this.addEventListener('view', (evt: ViewEvent) => {\n      view = evt.detail.view;\n      this.requestUpdate();\n    });\n  }\n\n  firstUpdated(): void {\n    view == View.PUBLISHER\n      ? this.goosePublisherView.setAttribute('checked', '')\n      : this.gooseSubscriberView.setAttribute('checked', '');\n  }\n\n  render(): TemplateResult {\n    return html`<div>\n      <mwc-formfield label=\"${get('subscription.goose.view.publisherView')}\">\n        <mwc-radio\n          id=\"goosePublisherView\"\n          name=\"view\"\n          value=\"goose\"\n          @click=${() =>\n            this.listDiv.dispatchEvent(newViewEvent(View.PUBLISHER))}\n        ></mwc-radio>\n      </mwc-formfield>\n      <mwc-formfield label=\"${get('subscription.goose.view.subscriberView')}\">\n        <mwc-radio\n          id=\"gooseSubscriberView\"\n          name=\"view\"\n          value=\"ied\"\n          @click=${() =>\n            this.listDiv.dispatchEvent(newViewEvent(View.SUBSCRIBER))}\n        ></mwc-radio>\n      </mwc-formfield>\n      <div class=\"container\">\n        ${view == View.PUBLISHER\n          ? html`<goose-list\n              class=\"row\"\n              .editCount=${this.editCount}\n              .doc=${this.doc}\n            ></goose-list>`\n          : html`<ied-list\n              class=\"row\"\n              .editCount=${this.editCount}\n              .doc=${this.doc}\n              serviceType=\"goose\"\n            ></ied-list>`}\n        <subscriber-list-goose\n          class=\"row\"\n          .editCount=${this.editCount}\n          .doc=${this.doc}\n        ></subscriber-list-goose>\n      </div>\n    </div>`;\n  }\n\n  static styles = css`\n    :host {\n      width: 100vw;\n    }\n\n    .container {\n      display: flex;\n      padding: 8px 6px 16px;\n      height: 86vh;\n    }\n\n    .row {\n      flex: 50%;\n      margin: 0px 6px 0px;\n      min-width: 300px;\n      height: 100%;\n      overflow-y: scroll;\n    }\n  `;\n}\n"]}