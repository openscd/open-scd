{"version":3,"file":"cdc.js","sourceRoot":"","sources":["../../../../src/editors/protocol104/foundation/cdc.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  getNameAttribute,\n  newWizardEvent,\n} from '@openscd/open-scd/src/foundation.js';\nimport { Create } from '@openscd/core/foundation/deprecated/editor.js';\nimport { newLogEvent } from '@openscd/core/foundation/deprecated/history.js';\n\nimport {\n  addPrefixAndNamespaceToDocument,\n  createPrivateAddress,\n  createPrivateElement,\n  getPrivateElement,\n} from './private.js';\nimport {\n  findElementInOriginalLNStructure,\n  getCdcValueFromDOElement,\n  getEnumOrds,\n  getTypeAttribute,\n  isEnumDataAttribute,\n} from './foundation.js';\nimport { editAddressWizard } from '../wizards/address.js';\nimport {\n  determineUninitializedStructure,\n  initializeElements,\n} from '@openscd/open-scd/src/foundation/dai.js';\nimport { get } from 'lit-translate';\n\n/**\n * List of supported Common Data Classes in the 104 protocol.\n */\nexport const supportedCdcTypes = [\n  'ACD',\n  'ACT',\n  'APC',\n  'ASG',\n  'BAC',\n  'BCR',\n  'BSC',\n  'CMV',\n  'DEL',\n  'DPC',\n  'DPS',\n  'ENC',\n  'ENG',\n  'ENS',\n  'INC',\n  'ING',\n  'INS',\n  'ISC',\n  'MV',\n  'SEC',\n  'SPC',\n  'SPG',\n  'SPS',\n  'WYE',\n] as const;\nexport type SupportedCdcType = (typeof supportedCdcTypes)[number];\n\nexport type CreateFunction = (\n  lnElement: Element,\n  lnClonedElement: Element,\n  doElement: Element,\n  wizard: Element,\n  ti: string,\n  daPaths: DaSelector[],\n  inverted: boolean\n) => Create[];\nexport type CreateCheckFunction = (\n  lnElement: Element,\n  lnClonedElement: Element,\n  doElement: Element,\n  wizard: Element,\n  ti: string,\n  daPaths: DaSelector[]\n) => Create[];\n\nexport interface DaSelector {\n  path: string[];\n}\nexport interface TiInformation {\n  daPaths: DaSelector[];\n  create: CreateFunction;\n  checkDaPaths?: DaSelector[];\n  checkCreate?: CreateCheckFunction;\n  inverted?: boolean;\n}\n\n/**\n * Record with configuration information on how to create Address elements for the 104 protocol.\n * Per supported Common Data Class (CDC) two record sets can be configured, one for the monitoring part\n * and one for the control part.\n * Per set the key of the record will be the ti value, meaning the list of keys will be the supported\n * ti values allowed for the CDC.\n * For each supported ti value there is information on how to find the DAI Element to which to create\n * the Address element(s).\n */\nexport const cdcProcessings: Record<\n  SupportedCdcType,\n  {\n    monitor: Record<string, TiInformation>;\n    control: Record<string, TiInformation>;\n  }\n> = {\n  ACD: {\n    monitor: {\n      '30': {\n        daPaths: [\n          { path: ['general'] },\n          { path: ['phsA'] },\n          { path: ['phsB'] },\n          { path: ['phsC'] },\n          { path: ['neut'] },\n        ],\n        create: createAddressAction,\n        inverted: true,\n      },\n      '40': {\n        daPaths: [\n          { path: ['general'] },\n          { path: ['phsA'] },\n          { path: ['phsB'] },\n          { path: ['phsC'] },\n          { path: ['neut'] },\n        ],\n        create: createAddressAction,\n      },\n    },\n    control: {},\n  },\n  ACT: {\n    monitor: {\n      '30': {\n        daPaths: [\n          { path: ['general'] },\n          { path: ['phsA'] },\n          { path: ['phsB'] },\n          { path: ['phsC'] },\n          { path: ['neut'] },\n        ],\n        create: createAddressAction,\n        inverted: true,\n      },\n      '39': {\n        daPaths: [{ path: ['general'] }],\n        create: createAddressAction,\n      },\n    },\n    control: {},\n  },\n  APC: {\n    monitor: {\n      '36': {\n        daPaths: [{ path: ['mxVal', 'f'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {\n      '63': {\n        daPaths: [{ path: ['Oper', 'ctlVal', 'f'] }],\n        create: createAddressAction,\n        checkDaPaths: [{ path: ['Oper', 'Check'] }],\n        checkCreate: createCheckAddressAction,\n      },\n    },\n  },\n  ASG: {\n    monitor: {\n      '63': {\n        daPaths: [{ path: ['setMag', 'f'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  BAC: {\n    monitor: {\n      '36': {\n        daPaths: [{ path: ['mxVal', 'f'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {\n      '60': {\n        daPaths: [{ path: ['Oper', 'ctlVal'] }],\n        create: createAddressAction,\n        checkDaPaths: [{ path: ['Oper', 'Check'] }],\n        checkCreate: createCheckAddressAction,\n      },\n    },\n  },\n  BCR: {\n    monitor: {\n      '37': {\n        daPaths: [{ path: ['actVal'] }, { path: ['frVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  BSC: {\n    monitor: {\n      '32': {\n        daPaths: [{ path: ['valWTr', 'posVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {\n      '60': {\n        daPaths: [{ path: ['Oper', 'ctlVal'] }],\n        create: createAddressAction,\n        checkDaPaths: [{ path: ['Oper', 'Check'] }],\n        checkCreate: createCheckAddressAction,\n      },\n    },\n  },\n  CMV: {\n    monitor: {\n      '35': {\n        daPaths: [{ path: ['mag', 'i'] }, { path: ['ang', 'i'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n      '36': {\n        daPaths: [{ path: ['mag', 'f'] }, { path: ['ang', 'f'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  DEL: {\n    monitor: {\n      '35': {\n        daPaths: [\n          { path: ['phsAB', 'cVal', 'mag', 'f'] },\n          { path: ['phsBC', 'cVal', 'mag', 'f'] },\n          { path: ['phsCA', 'cVal', 'mag', 'f'] },\n        ],\n        create: createAddressAction,\n        inverted: false,\n      },\n      '36': {\n        daPaths: [\n          { path: ['phsAB', 'cVal', 'mag', 'f'] },\n          { path: ['phsBC', 'cVal', 'mag', 'f'] },\n          { path: ['phsCA', 'cVal', 'mag', 'f'] },\n        ],\n        create: createAddressAction,\n        inverted: false,\n      },\n    },\n    control: {},\n  },\n  DPC: {\n    monitor: {\n      '31': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {\n      '59': {\n        daPaths: [{ path: ['Oper', 'ctlVal'] }],\n        create: createAddressAction,\n        checkDaPaths: [{ path: ['Oper', 'Check'] }],\n        checkCreate: createCheckAddressAction,\n      },\n    },\n  },\n  DPS: {\n    monitor: {\n      '31': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  ENC: {\n    monitor: {\n      '30': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n      '35': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: false,\n      },\n    },\n    control: {\n      '58': {\n        daPaths: [{ path: ['Oper', 'ctlVal'] }],\n        create: createAddressWithExpectValueAction,\n        checkDaPaths: [{ path: ['Oper', 'Check'] }],\n        checkCreate: createCheckAddressAction,\n      },\n      '62': {\n        daPaths: [{ path: ['Oper', 'ctlVal'] }],\n        create: createAddressWithExpectValueAction,\n        checkDaPaths: [{ path: ['Oper', 'Check'] }],\n        checkCreate: createCheckAddressAction,\n      },\n    },\n  },\n  ENG: {\n    monitor: {\n      '58': {\n        daPaths: [{ path: ['setVal'] }],\n        create: createAddressWithExpectValueAction,\n        inverted: true,\n      },\n      '62': {\n        daPaths: [{ path: ['setVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  ENS: {\n    monitor: {\n      '30': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n      '35': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  INC: {\n    monitor: {\n      '35': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {\n      '62': {\n        daPaths: [{ path: ['Oper', 'ctlVal'] }],\n        create: createAddressAction,\n        checkDaPaths: [{ path: ['Oper', 'Check'] }],\n        checkCreate: createCheckAddressAction,\n      },\n    },\n  },\n  ING: {\n    monitor: {\n      '62': {\n        daPaths: [{ path: ['setVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  INS: {\n    monitor: {\n      '30': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n      '33': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n      '35': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  ISC: {\n    monitor: {\n      '32': {\n        daPaths: [{ path: ['valWTr', 'posVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {\n      '62': {\n        daPaths: [{ path: ['Oper', 'ctlVal'] }],\n        create: createAddressAction,\n        checkDaPaths: [{ path: ['Oper', 'Check'] }],\n        checkCreate: createCheckAddressAction,\n      },\n    },\n  },\n  MV: {\n    monitor: {\n      '35': {\n        daPaths: [{ path: ['mag', 'i'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n      '36': {\n        daPaths: [{ path: ['mag', 'f'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  SEC: {\n    monitor: {\n      '37': {\n        daPaths: [{ path: ['cnt'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  SPC: {\n    monitor: {\n      '30': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {\n      '58': {\n        daPaths: [{ path: ['Oper', 'ctlVal'] }],\n        create: createAddressAction,\n        checkDaPaths: [{ path: ['Oper', 'Check'] }],\n        checkCreate: createCheckAddressAction,\n      },\n    },\n  },\n  SPG: {\n    monitor: {\n      '58': {\n        daPaths: [{ path: ['setVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  SPS: {\n    monitor: {\n      '30': {\n        daPaths: [{ path: ['stVal'] }],\n        create: createAddressAction,\n        inverted: true,\n      },\n    },\n    control: {},\n  },\n  WYE: {\n    monitor: {\n      '35': {\n        daPaths: [\n          { path: ['phsA', 'cVal', 'mag', 'f'] },\n          { path: ['phsB', 'cVal', 'mag', 'f'] },\n          { path: ['phsC', 'cVal', 'mag', 'f'] },\n        ],\n        create: createAddressAction,\n        inverted: false,\n      },\n      '36': {\n        daPaths: [\n          { path: ['phsA', 'cVal', 'mag', 'f'] },\n          { path: ['phsB', 'cVal', 'mag', 'f'] },\n          { path: ['phsC', 'cVal', 'mag', 'f'] },\n        ],\n        create: createAddressAction,\n        inverted: false,\n      },\n    },\n    control: {},\n  },\n};\n\n/**\n * Creates a new SCL Private element and add 104 Address element(s) below this.\n * Set the attribute value of 'ti' to the passed ti value.\n *\n * @param lnElement       - The LN(0) Element.\n * @param lnClonedElement - The Cloned LN Element, used to create new structure and determine which Create actions are needed.\n * @param doElement       - The DO Element.\n * @param wizard          - Wizard Element to dispatch events on.\n * @param ti              - The value to be set on the attribute 'ti'.\n * @param daPaths         - The Array of DAI Elements to search or create and add the Private Element on.\n * @param inverted        - Indicates if extra Address Elements should be created with 'inverted=true'.\n * @returns An array of Create Action that the wizard action will return.\n */\nfunction createAddressAction(\n  lnElement: Element,\n  lnClonedElement: Element,\n  doElement: Element,\n  wizard: Element,\n  ti: string,\n  daPaths: DaSelector[],\n  inverted: boolean\n): Create[] {\n  const actions: Create[] = [];\n\n  const [initializeActions, daiElements] = findOrCreateDaiElements(\n    lnElement,\n    lnClonedElement,\n    doElement,\n    wizard,\n    daPaths\n  );\n  if (initializeActions.length > 0) {\n    actions.push(...initializeActions);\n  }\n\n  if (daiElements.length > 0) {\n    addPrefixAndNamespaceToDocument(lnElement.ownerDocument);\n\n    daiElements.forEach(daiElement => {\n      const addressElements = createAddressElements(\n        daiElement.ownerDocument,\n        ti,\n        inverted\n      );\n      actions.push(...createActionsForPrivate(daiElement, addressElements));\n    });\n  }\n\n  startEditWizards(wizard, lnElement, lnClonedElement, doElement, actions);\n  return actions;\n}\n\n/**\n * Creates a new SCL Private element and add 104 Address element(s) below this.\n * Set the attribute value of 'ti' to the passed ti value.\n *\n * @param lnElement       - The LN(0) Element.\n * @param lnClonedElement - The Cloned LN Element, used to create new structure and determine which Create actions are needed.\n * @param doElement       - The DO Element.\n * @param wizard          - Wizard Element to dispatch events on.\n * @param ti              - The value to be set on the attribute 'ti'.\n * @param daPaths         - The Array of DAI Elements to search or create and add the Private Element on.\n * @param inverted        - Indicates if extra Address Elements should be created with 'inverted=true'.\n * @returns An array of Create Action that the wizard action will return.\n */\nfunction createAddressWithExpectValueAction(\n  lnElement: Element,\n  lnClonedElement: Element,\n  doElement: Element,\n  wizard: Element,\n  ti: string,\n  daPaths: DaSelector[],\n  inverted: boolean\n): Create[] {\n  const actions: Create[] = [];\n\n  const [initializeActions, daiElements] = findOrCreateDaiElements(\n    lnElement,\n    lnClonedElement,\n    doElement,\n    wizard,\n    daPaths\n  );\n  if (initializeActions.length > 0) {\n    actions.push(...initializeActions);\n  }\n  if (daiElements.length > 0) {\n    addPrefixAndNamespaceToDocument(lnElement.ownerDocument);\n\n    const addressElements: Element[] = [];\n    daiElements.forEach(daiElement => {\n      if (isEnumDataAttribute(daiElement)) {\n        getEnumOrds(daiElement).forEach(ord =>\n          addressElements.push(\n            ...createAddressElements(\n              daiElement.ownerDocument,\n              ti,\n              inverted,\n              ord\n            )\n          )\n        );\n      } else {\n        addressElements.push(\n          ...createAddressElements(daiElement.ownerDocument, ti, inverted)\n        );\n      }\n\n      actions.push(...createActionsForPrivate(daiElement, addressElements));\n    });\n  }\n\n  startEditWizards(wizard, lnElement, lnClonedElement, doElement, actions);\n  return actions;\n}\n\n/**\n * Create a new SCL Private element and add 104 Address element(s) below this.\n * Set the attribute value of 'ti' to the passed ti value.\n *\n * @param lnElement       - The LN(0) Element.\n * @param lnClonedElement - The Cloned LN Element, used to create new structure and determine which Create actions are needed.\n * @param doElement       - The DO Element.\n * @param wizard          - Wizard Element to dispatch events on.\n * @param ti              - The value to be set on the attribute 'ti'.\n * @param daPaths         - The Array of DAI Elements to search or create and add the Private Element on.\n * @returns An array of Create Action that the wizard action will return.\n */\nfunction createCheckAddressAction(\n  lnElement: Element,\n  lnClonedElement: Element,\n  doElement: Element,\n  wizard: Element,\n  ti: string,\n  daPaths: DaSelector[]\n): Create[] {\n  const actions: Create[] = [];\n\n  const [initializeActions, daiElements] = findOrCreateDaiElements(\n    lnElement,\n    lnClonedElement,\n    doElement,\n    wizard,\n    daPaths\n  );\n  if (initializeActions.length > 0) {\n    actions.push(...initializeActions);\n  }\n  if (daiElements.length > 0) {\n    addPrefixAndNamespaceToDocument(lnElement.ownerDocument);\n\n    daiElements.forEach(daiElement => {\n      const address1Element = createPrivateAddress(\n        daiElement.ownerDocument,\n        ti\n      );\n      address1Element.setAttribute('check', 'interlocking');\n\n      const address2Element = createPrivateAddress(\n        daiElement.ownerDocument,\n        ti\n      );\n      address2Element.setAttribute('check', 'synchrocheck');\n\n      actions.push(\n        ...createActionsForPrivate(daiElement, [\n          address1Element,\n          address2Element,\n        ])\n      );\n    });\n  }\n\n  startEditWizards(wizard, lnElement, lnClonedElement, doElement, actions);\n  return actions;\n}\n\n/**\n * Create or update the 104 Private Element, if the Private already exists, the new Address Elements are\n * added, otherwise a new Private Element is created to which the Address Elements are added.\n * The correct Create Action is returned.\n *\n * @param daiElement      - The DAI Element which will hold the new or existing Private Element\n * @param addressElements - The Address Elements to be created with Create Actions.\n */\nexport function createActionsForPrivate(\n  daiElement: Element,\n  addressElements: Element[]\n): Create[] {\n  const actions: Create[] = [];\n  let privateElement = getPrivateElement(daiElement);\n  if (privateElement) {\n    addressElements.forEach(addressElement => {\n      actions.push({\n        new: { parent: privateElement!, element: addressElement },\n      });\n    });\n  } else {\n    privateElement = createPrivateElement(daiElement.ownerDocument);\n    privateElement.append(...addressElements);\n\n    actions.push({ new: { parent: daiElement, element: privateElement } });\n  }\n  return actions;\n}\n\n/**\n * Creates one or two Address Elements, depending on the value of inverted.\n *\n * @param document      - The Owner Document used to create the new Address Element with.\n * @param ti            - The value to be set on the attribute 'ti'.\n * @param inverted      - Indicates if extra Address Elements should be created with 'inverted=true'.\n * @param expectedValue - The optional value of the attribute 'expectedValue' if needed.\n * @returns Array of one or two Address Elements created.\n */\nexport function createAddressElements(\n  document: Document,\n  ti: string,\n  inverted: boolean,\n  expectedValue?: string\n): Element[] {\n  const addressElements: Element[] = [];\n  const addressElement = createPrivateAddress(document, ti);\n  if (expectedValue) {\n    addressElement.setAttribute('expectedValue', expectedValue);\n  }\n  addressElements.push(addressElement);\n\n  if (inverted) {\n    const addressElement = createPrivateAddress(document, ti);\n    addressElement.setAttribute('inverted', 'true');\n    if (expectedValue) {\n      addressElement.setAttribute('expectedValue', expectedValue);\n    }\n    addressElements.push(addressElement);\n  }\n  return addressElements;\n}\n\n/**\n * Use all Create Action to determine which Address Elements are created and start an Edit Address Wizard\n * for every Address Element found.\n *\n * @param wizard          - The current Wizard used to dispatch the new Wizards on.\n * @param lnElement       - The LN Element used to search for specific parent elements.\n * @param lnClonedElement - The cloned LN Element to search for child elements.\n * @param doElement       - The DO Element for which the Address Elements where created.\n * @param actions         - The list of all the Create Actions.\n */\nfunction startEditWizards(\n  wizard: Element,\n  lnElement: Element,\n  lnClonedElement: Element,\n  doElement: Element,\n  actions: Create[]\n): void {\n  actions.forEach(createAction => {\n    // Loop over all Actions and collect all Address Elements in an Array.\n    const newElement = <Element>createAction.new.element;\n    let addressElements: Element[];\n    if (newElement.tagName === 'Address') {\n      addressElements = [newElement];\n    } else {\n      addressElements = Array.from(newElement.querySelectorAll('Address'));\n    }\n    const parentElement = <Element>createAction.new.parent;\n    const daiElement = parentElement.closest('DAI');\n    if (daiElement) {\n      const iedElement = lnElement.closest('IED')!;\n      const doiElement = lnClonedElement.querySelector(\n        `:scope > DOI[name=\"${getNameAttribute(doElement)}\"]`\n      )!;\n\n      addressElements.forEach(addressElement => {\n        wizard.dispatchEvent(\n          newWizardEvent(() =>\n            editAddressWizard(\n              iedElement,\n              doiElement,\n              daiElement,\n              addressElement\n            )\n          )\n        );\n      });\n    }\n  });\n}\n\n/**\n * Use the DA Path configuration of a Common Data Class to search for all DO/BDA/DA Elements to create\n * a structure for which DOI/SDI/DAI Elements should be created later. Null will be returned when an invalid\n * Template Structure is described by the DA Path.\n *\n * @param doElement - The DO Element to start searching for DA/BDA Elements.\n * @param daPath    - The (B)DA Elements to find in the template structure.\n * @returns List of Elements starting with the DO Element followed by one or more (B)DA Elements describing the structure.\n */\nfunction createTemplateStructure(\n  doElement: Element,\n  daPath: DaSelector\n): Element[] | null {\n  let templateStructure: Element[] | null = [doElement];\n\n  const doc = doElement.ownerDocument;\n  const doType = getTypeAttribute(doElement) ?? '';\n  let typeElement = doc.querySelector(`DOType[id=\"${doType}\"]`);\n\n  daPath.path.forEach(name => {\n    // There should be a DOType or DAType set for the current element in the list.\n    if (!typeElement) {\n      templateStructure = null;\n      return;\n    }\n    const sdoElement = typeElement.querySelector(\n      `:scope > SDO[name=\"${name}\"]`\n    );\n    const sdoType = sdoElement?.getAttribute('type');\n\n    if (sdoType) typeElement = doc.querySelector(`DOType[id=\"${sdoType}\"]`);\n\n    const daElement = typeElement!.querySelector(\n      `:scope > DA[name=\"${name}\"], :scope > BDA[name=\"${name}\"]`\n    );\n    // If there is no DA/BDA Element found the structure is incorrect, so just stop.\n    if (daElement === null && sdoElement === null) {\n      templateStructure = null;\n      return;\n    }\n\n    templateStructure!.push(sdoElement ? sdoElement : daElement!);\n\n    if (sdoElement) return;\n\n    const bType = daElement!.getAttribute('bType') ?? '';\n    if (bType === 'Struct') {\n      const type = getTypeAttribute(daElement!) ?? '';\n      typeElement = doc.querySelector(`DAType[id=\"${type}\"]`);\n    } else {\n      typeElement = null;\n    }\n  });\n  return templateStructure;\n}\n\n/**\n * Search for existing DAI Elements below the DO Element matching the DA Paths passed or create the DAI Element\n * if the DA Path doesn't exist yet.\n *\n * @param lnElement       - The LN(0) Element.\n * @param lnClonedElement - The Cloned LN Element, used to create new structure and determine which Create actions are needed.\n * @param doElement       - The DO Element.\n * @param wizard          - The current Wizard to dispatch Log Events, if needed.\n * @param daPaths         - The DA Structures for which the DAI Structure needs to be created below the DO Element.\n */\nfunction findOrCreateDaiElements(\n  lnElement: Element,\n  lnClonedElement: Element,\n  doElement: Element,\n  wizard: Element,\n  daPaths: DaSelector[]\n): [Create[], Element[]] {\n  const daiElements: Element[] = [];\n  const actions: Create[] = [];\n\n  // Start searching and creating for each DA Path passed.\n  daPaths.forEach(daPath => {\n    const filter = createDaiFilter(doElement, daPath);\n    const foundDaiElements = lnClonedElement.querySelectorAll(filter);\n    if (foundDaiElements.length > 0) {\n      // Existing DAI Element found, so use that Element.\n      foundDaiElements.forEach(clonedDaiElement => {\n        const daiElement = findElementInOriginalLNStructure(\n          lnElement,\n          clonedDaiElement\n        );\n        if (daiElement) {\n          daiElements.push(daiElement);\n        } else {\n          daiElements.push(clonedDaiElement);\n        }\n      });\n    } else {\n      // DAI Element doesn't exist yet, so create the structure using the DA Path.\n      const templateStructure = createTemplateStructure(doElement, daPath);\n      if (templateStructure) {\n        const [parentClonedElement, uninitializedTemplateStructure] =\n          determineUninitializedStructure(lnClonedElement, templateStructure);\n        // Next create all missing elements (DOI/SDI/DOI)\n        const newElement = initializeElements(uninitializedTemplateStructure);\n\n        // Always add it to the cloned LN Structure.\n        parentClonedElement.append(newElement);\n\n        // Search if the parent already exists in the current LN Element Structure.\n        // If so we will add a new Create Action for it.\n        // If it is already there because one of the parents of the parent is used in a Create Action.\n        const parentElement = findElementInOriginalLNStructure(\n          lnElement,\n          parentClonedElement\n        );\n        if (parentElement) {\n          actions.push({ new: { parent: parentElement, element: newElement } });\n        }\n\n        // Add new DAI Elements to the list to return.\n        if (newElement.tagName === 'DAI') {\n          daiElements.push(newElement);\n        } else {\n          const daiElement = newElement.querySelector('DAI')!;\n          daiElements.push(daiElement);\n        }\n      } else {\n        // The DA Path can't be mapped on the Template structure of the current document.\n        const cdc = getCdcValueFromDOElement(doElement) ?? '';\n        const doType = getTypeAttribute(doElement) ?? '';\n        wizard.dispatchEvent(\n          newLogEvent({\n            kind: 'error',\n            title: get('protocol104.wizard.error.addAddressError', {\n              structure: daPath.path.join(' > '),\n              cdc,\n              doType,\n            }),\n          })\n        );\n      }\n    }\n  });\n  return [actions, daiElements];\n}\n\n/**\n * Use the DO Element and a DA Selector to create a CSS Query to search for a DAI Element\n * below the LN Element.\n *\n * @param doElement - The DO Element for which to search a DOI Element.\n * @param daPath    - The DA Selector to create the query to find the SDI/DAI Elements.\n */\nfunction createDaiFilter(doElement: Element, daPath: DaSelector): string {\n  const doName = getNameAttribute(doElement);\n  let filter = `:scope > DOI[name=\"${doName}\"] > `;\n  daPath.path.forEach((value, index) => {\n    if (index < daPath.path.length - 1) {\n      filter = `${filter} SDI[name=\"${value}\"] > `;\n    } else {\n      filter = `${filter} DAI[name=\"${value}\"]`;\n    }\n  });\n  return filter;\n}\n\n/**\n * Indicates if the combination cdc/ti should handle/process the attribute \"unitMultiplier\" of the Address Element.\n *\n * @param cdc - The Common Data Class.\n * @param ti  - The TI Value.\n * @returns true, if the combination should handle/process the attribute \"unitMultiplier\".\n */\nexport function hasUnitMultiplierField(cdc: string, ti: string): boolean {\n  return (\n    (cdc === 'MV' && ['35', '36'].includes(ti)) ||\n    (cdc === 'INS' && ti === '35')\n  );\n}\n\n/**\n * Indicates if the combination cdc/ti should handle/process the attributes \"scaleMultiplier\" and \"scaleOffset\" of\n * the Address Element.\n *\n * @param cdc - The Common Data Class.\n * @param ti  - The TI Value.\n * @returns true, if the combination should handle/process the attributes \"scaleMultiplier\" and \"scaleOffset\".\n */\nexport function hasScaleFields(cdc: string, ti: string): boolean {\n  return cdc === 'MV' && ['35', '36'].includes(ti);\n}\n"]}