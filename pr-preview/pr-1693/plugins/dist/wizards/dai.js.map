{"version":3,"file":"dai.js","sourceRoot":"","sources":["../../src/wizards/dai.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { nothing } from 'lit-html';\nimport { get } from 'lit-translate';\n\nimport { DaiFieldTypes, getCustomField } from './foundation/dai-field-type.js';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\n\nimport {\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\nimport { EditorAction, ComplexAction } from '@openscd/core/foundation/deprecated/editor.js';\nimport { SCL_NAMESPACE } from '@openscd/open-scd/src/schemas.js';\n\nexport function updateValue(element: Element, val: Element): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const bType = element.getAttribute('bType')!;\n    const newValue = getCustomField()[<DaiFieldTypes>bType].value(inputs);\n\n    const daiName = val.parentElement?.getAttribute('name') ?? '';\n    const complexAction: ComplexAction = {\n      actions: [],\n      title: get('dai.action.updatedai', { daiName }),\n    };\n\n    const newVal = <Element>val.cloneNode(false);\n    newVal.textContent = newValue;\n    complexAction.actions.push({\n      old: { element: val },\n      new: { element: newVal },\n    });\n\n    return [complexAction];\n  };\n}\n\nexport function createValue(\n  parent: Element,\n  element: Element,\n  newElement: Element,\n  instanceElement: Element,\n  numberOfmultipleSettings?: number\n): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const bType = element.getAttribute('bType')!;\n    if (numberOfmultipleSettings) {\n      //Should we remove all Val elements before adding new ones?\n      Array.from(instanceElement.querySelectorAll('Val')).forEach(item =>\n        item.remove()\n      );\n      // Adds a new Val element for each sGroup value from the wizard\n      [...Array(numberOfmultipleSettings)].forEach((item, i) => {\n        const newValue = getCustomField()[<DaiFieldTypes>bType].value(\n          inputs,\n          i + 1\n        );\n\n        const valElement = parent.ownerDocument.createElementNS(\n          SCL_NAMESPACE,\n          'Val'\n        );\n        valElement.textContent = newValue;\n        valElement.setAttribute('sGroup', `${i + 1}`);\n        instanceElement.append(valElement);\n      });\n    } else {\n      const newValue = getCustomField()[<DaiFieldTypes>bType].value(inputs);\n\n      let valElement = instanceElement.querySelector('Val');\n      if (!valElement) {\n        valElement = parent.ownerDocument.createElementNS(SCL_NAMESPACE, 'Val');\n        instanceElement.append(valElement);\n      }\n      valElement.textContent = newValue;\n    }\n\n    const name = instanceElement.getAttribute('name');\n    const complexAction: ComplexAction = {\n      actions: [{ new: { parent, element: newElement } }],\n      title: get('dai.action.createdai', { daiName: name! }),\n    };\n    return [complexAction];\n  };\n}\n\nexport function renderDAIWizard(\n  element: Element,\n  instanceElement?: Element,\n  numberOfmultipleSettings: number | null = null\n): TemplateResult[] {\n  const bType = element.getAttribute('bType')!;\n  const daValue = element.querySelector('Val')?.textContent?.trim() ?? '';\n\n  return [\n    html` ${getCustomField()[<DaiFieldTypes>bType].render(\n      element,\n      instanceElement,\n      numberOfmultipleSettings\n    )}\n    ${daValue\n      ? html`<wizard-textfield\n          id=\"daVal\"\n          label=\"DA Template Value\"\n          .maybeValue=${daValue}\n          readonly\n          disabled\n        >\n        </wizard-textfield>`\n      : nothing}`,\n  ];\n}\n\n/**\n * Checks if the DAI corresponds to a multiple setting group\n *\n * @param parent The parent element of the DAI\n * @param element The BDA/DA element\n * @returns The number of setting groups if the DAI is a multiple setting group, null otherwise\n */\nfunction checkForMultipleSettings(\n  parent: Element,\n  element: Element\n): number | undefined {\n  // Look for the DA element to validate that the DAI has the functional constraint SG or SE\n  let da = element;\n  if (element.tagName === 'BDA')\n    da = (<Element>element.getRootNode()).querySelector(\n      `DOType>DA[type=\"${element.parentElement!.id}\"]`\n    )!;\n  const fc = da.getAttribute('fc') ?? '';\n  // Check if the closest IED to the parent element has a SettingControl element with a numOfSGs attribute\n  const ied = parent.closest('IED');\n  const settingControl = ied?.querySelector('SettingControl');\n  const numOfSGsAttribute = settingControl?.getAttribute('numOfSGs') ?? '';\n  const numberOfmultipleSettings = parseInt(numOfSGsAttribute);\n  // If the DA has the functional constraint SG or SE and the IED has a SettingControl element with a numOfSGs attribute, then the DAI is a multiple setting group\n  return (fc === 'SG' || fc === 'SE') &&\n    numOfSGsAttribute !== '' &&\n    !isNaN(numberOfmultipleSettings)\n    ? numberOfmultipleSettings\n    : undefined;\n}\n\nexport function createDAIWizard(\n  parent: Element,\n  newElement: Element,\n  element: Element\n): Wizard {\n  // Retrieve the created DAI, can be the new element or one of the child elements below.\n  const numberOfmultipleSettings = checkForMultipleSettings(parent, element);\n  const instanceElement =\n    newElement.tagName === 'DAI'\n      ? newElement\n      : newElement.querySelector('DAI')!;\n\n  return [\n    {\n      title: get('dai.wizard.title.create', {\n        daiName: instanceElement?.getAttribute('name') ?? '',\n      }),\n      element: instanceElement,\n      primary: {\n        icon: 'edit',\n        label: get('save'),\n        action: createValue(\n          parent,\n          element,\n          newElement,\n          instanceElement,\n          numberOfmultipleSettings\n        ),\n      },\n      content: renderDAIWizard(\n        element,\n        instanceElement,\n        numberOfmultipleSettings\n      ),\n    },\n  ];\n}\n\nexport function editDAIWizard(\n  element: Element,\n  instanceElement?: Element\n): Wizard {\n  const daiName =\n    instanceElement?.tagName === 'DAI'\n      ? instanceElement?.getAttribute('name') ?? ''\n      : instanceElement?.parentElement?.getAttribute('name') ?? '';\n\n  return [\n    {\n      title: get('dai.wizard.title.edit', {\n        daiName,\n      }),\n      element: instanceElement,\n      primary: {\n        icon: 'edit',\n        label: get('save'),\n        action: updateValue(element, instanceElement!),\n      },\n      content: renderDAIWizard(element, instanceElement),\n    },\n  ];\n}\n"]}