{"version":3,"file":"UpdateDescriptionABB.js","sourceRoot":"","sources":["../../src/menu/UpdateDescriptionABB.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-list/mwc-check-list-item';\nimport { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport '@openscd/open-scd/src/filtered-list.js';\nimport {\n  find,\n  identity,\n  isPublic,\n  newWizardEvent,\n  SCLTag,\n  Wizard,\n  WizardAction,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport { cloneElement } from '@openscd/xml';\n\ninterface addDescItem {\n  desc: string;\n  tag: SCLTag;\n  identity: string | number;\n}\n\nfunction addDescriptionAction(doc: XMLDocument): WizardActor {\n  return (\n    _: WizardInputElement[],\n    wizard: Element,\n    list: List | null | undefined\n  ): WizardAction[] => {\n    const selectedItems = <ListItemBase[]>list!.selected;\n\n    const actions = selectedItems.map(item => {\n      const desc = (<Element>item.querySelector('span')).textContent;\n      const [tag, identity] = item.value.split(' | ');\n\n      const oldElement = find(doc, tag, identity)!;\n      const newElement = cloneElement(oldElement, { desc });\n      return { old: { element: oldElement }, new: { element: newElement } };\n    });\n\n    return [\n      {\n        title: get('updatedesc.abb'),\n        actions,\n      },\n    ];\n  };\n}\n\nfunction createLogWizard(doc: XMLDocument, items: addDescItem[]): Wizard {\n  return [\n    {\n      title: get('wizard.title.add', { tagName: 'desc' }),\n      primary: {\n        label: get('save'),\n        icon: 'save',\n        action: addDescriptionAction(doc),\n      },\n      content: [\n        html`<filtered-list multi\n          >${Array.from(\n            items.map(\n              item =>\n                html`<mwc-check-list-item\n                  twoline\n                  selected\n                  value=\"${item.tag + ' | ' + item.identity}\"\n                  ><span>${item.desc}</span\n                  ><span slot=\"secondary\"\n                    >${item.tag + ' | ' + item.identity}</span\n                  ></mwc-check-list-item\n                >`\n            )\n          )}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n\nfunction addDescriptionToABB(ied: Element): addDescItem[] {\n  return Array.from(ied.getElementsByTagName('ExtRef'))\n    .filter(element => isPublic(element))\n    .filter(extRef => extRef.getAttribute('intAddr'))\n    .map(extRef => {\n      const intAddr = extRef.getAttribute('intAddr')!;\n      const internalMapping = intAddr.split(',')[3]; //this might change as is vendor dependant!!\n      const oldDesc = extRef.getAttribute('desc');\n      const newDesc = oldDesc\n        ? oldDesc + '-' + internalMapping\n        : internalMapping;\n\n      return {\n        desc: newDesc,\n        tag: <SCLTag>'ExtRef',\n        identity: identity(extRef),\n      };\n    });\n}\n\n/** Plug-in that enriched ExtRefs desc attribute based on intAddr attribute (ABB)*/\nexport default class UpdateDescriptionAbb extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  doc!: XMLDocument;\n\n  /** Entry point for this plug-in */\n  async run(): Promise<void> {\n    const items = Array.from(this.doc.querySelectorAll(':root > IED')).flatMap(\n      ied => addDescriptionToABB(ied)\n    );\n\n    this.dispatchEvent(newWizardEvent(createLogWizard(this.doc, items)));\n  }\n}\n"]}