{"version":3,"file":"ied-container.js","sourceRoot":"","sources":["../../../src/editors/ied/ied-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  property,\n  TemplateResult,\n} from 'lit-element';\nimport { nothing } from 'lit-html';\nimport { get } from 'lit-translate';\n\nimport '@openscd/open-scd/src/action-pane.js';\nimport './access-point-container.js';\n\nimport { wizards } from '../../wizards/wizard-library.js';\nimport { Container } from './foundation.js';\nimport {\n  getDescriptionAttribute,\n  getNameAttribute,\n  newWizardEvent,\n} from '@openscd/open-scd/src/foundation.js';\nimport { newActionEvent } from '@openscd/core/foundation/deprecated/editor.js';\nimport { removeIEDWizard } from '../../wizards/ied.js';\nimport { editServicesWizard } from '../../wizards/services.js';\n\n/** [[`IED`]] plugin subeditor for editing `IED` element. */\n@customElement('ied-container')\nexport class IedContainer extends Container {\n  @property()\n  selectedLNClasses: string[] = [];\n\n  private openEditWizard(): void {\n    const wizard = wizards['IED'].edit(this.element);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  private renderServicesIcon(): TemplateResult {\n    const services: Element | null = this.element.querySelector('Services');\n\n    if (!services) {\n      return html``;\n    }\n\n    return html` <abbr slot=\"action\" title=\"${get('iededitor.settings')}\">\n      <mwc-icon-button\n        icon=\"settings\"\n        @click=${() => this.openSettingsWizard(services)}\n      ></mwc-icon-button>\n    </abbr>`;\n  }\n\n  private openSettingsWizard(services: Element): void {\n    const wizard = editServicesWizard(services);\n    if (wizard) this.dispatchEvent(newWizardEvent(wizard));\n  }\n\n  private removeIED(): void {\n    const wizard = removeIEDWizard(this.element);\n    if (wizard) {\n      this.dispatchEvent(newWizardEvent(() => wizard));\n    } else {\n      // If no Wizard is needed, just remove the element.\n      this.dispatchEvent(\n        newActionEvent({\n          old: { parent: this.element.parentElement!, element: this.element },\n        })\n      );\n    }\n  }\n\n  private header(): TemplateResult {\n    const name = getNameAttribute(this.element);\n    const desc = getDescriptionAttribute(this.element);\n\n    return html`${name}${desc ? html` &mdash; ${desc}` : nothing}`;\n  }\n\n  render(): TemplateResult {\n    return html` <action-pane .label=\"${this.header()}\">\n      <mwc-icon slot=\"icon\">developer_board</mwc-icon>\n      <abbr slot=\"action\" title=\"${get('remove')}\">\n        <mwc-icon-button\n          icon=\"delete\"\n          @click=${() => this.removeIED()}\n        ></mwc-icon-button>\n      </abbr>\n      <abbr slot=\"action\" title=\"${get('edit')}\">\n        <mwc-icon-button\n          icon=\"edit\"\n          @click=${() => this.openEditWizard()}\n        ></mwc-icon-button>\n      </abbr>\n      ${this.renderServicesIcon()}\n      ${Array.from(this.element.querySelectorAll(':scope > AccessPoint')).map(\n        ap => html`<access-point-container\n          .editCount=${this.editCount}\n          .doc=${this.doc}\n          .element=${ap}\n          .nsdoc=${this.nsdoc}\n          .selectedLNClasses=${this.selectedLNClasses}\n          .ancestors=${[this.element]}\n        ></access-point-container>`\n      )}\n    </action-pane>`;\n  }\n\n  static styles = css`\n    abbr {\n      text-decoration: none;\n      border-bottom: none;\n    }\n  `;\n}\n"]}