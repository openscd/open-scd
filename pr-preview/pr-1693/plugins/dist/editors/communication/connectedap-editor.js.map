{"version":3,"file":"connectedap-editor.js","sourceRoot":"","sources":["../../../src/editors/communication/connectedap-editor.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,UAAU,EAEV,aAAa,EACb,IAAI,EACJ,QAAQ,GACT,MAAM,aAAa,CAAC;AAErB,OAAO,mBAAmB,CAAC;AAE3B,OAAO,sCAAsC,CAAC;AAC9C,OAAO,EAAE,cAAc,EAAE,MAAM,qCAAqC,CAAC;AACrE,OAAO,EAAE,cAAc,EAAE,MAAM,+CAA+C,CAAC;AAC/E,OAAO,EAAE,qBAAqB,EAAE,MAAM,8BAA8B,CAAC;AAErE,iEAAiE;AAE1D,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,UAAU;IAI/C,mCAAmC;IAEnC,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC;IAC5D,CAAC;IAEO,cAAc;QACpB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,OAAO;YACd,IAAI,CAAC,aAAa,CAChB,cAAc,CAAC;gBACb,GAAG,EAAE;oBACH,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,aAAc;oBACnC,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;iBACpC;aACF,CAAC,CACH,CAAC;IACN,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;4BACa,IAAI,CAAC,MAAM;;;;;oBAKnB,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE;;;;;;oBAM3B,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE;;;KAGlC,CAAC;IACJ,CAAC;CACF,CAAA;AA1CC;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;kDACb;AAGlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;+CAG1B;AARU,iBAAiB;IAD7B,aAAa,CAAC,oBAAoB,CAAC;GACvB,iBAAiB,CA6C7B;SA7CY,iBAAiB","sourcesContent":["import {\n  LitElement,\n  TemplateResult,\n  customElement,\n  html,\n  property,\n} from 'lit-element';\n\nimport '@material/mwc-fab';\n\nimport '@openscd/open-scd/src/action-icon.js';\nimport { newWizardEvent } from '@openscd/open-scd/src/foundation.js';\nimport { newActionEvent } from '@openscd/core/foundation/deprecated/editor.js';\nimport { editConnectedApWizard } from '../../wizards/connectedap.js';\n\n/** [[`Communication`]] subeditor for a `ConnectedAP` element. */\n@customElement('connectedap-editor')\nexport class ConnectedAPEditor extends LitElement {\n  /** SCL element ConnectedAP */\n  @property({ attribute: false })\n  element!: Element;\n  /** ConnectedAP attribute apName */\n  @property({ type: String })\n  get apName(): string {\n    return this.element.getAttribute('apName') ?? 'UNDEFINED';\n  }\n\n  private openEditWizard(): void {\n    this.dispatchEvent(newWizardEvent(editConnectedApWizard(this.element)));\n  }\n\n  remove(): void {\n    if (this.element)\n      this.dispatchEvent(\n        newActionEvent({\n          old: {\n            parent: this.element.parentElement!,\n            element: this.element,\n            reference: this.element.nextSibling,\n          },\n        })\n      );\n  }\n\n  render(): TemplateResult {\n    return html`\n      <action-icon label=\"${this.apName}\" icon=\"settings_input_hdmi\"\n        ><mwc-fab\n          slot=\"action\"\n          mini\n          icon=\"edit\"\n          @click=\"${() => this.openEditWizard()}\"\n        ></mwc-fab>\n        <mwc-fab\n          slot=\"action\"\n          mini\n          icon=\"delete\"\n          @click=\"${() => this.remove()}}\"\n        ></mwc-fab\n      ></action-icon>\n    `;\n  }\n}\n"]}