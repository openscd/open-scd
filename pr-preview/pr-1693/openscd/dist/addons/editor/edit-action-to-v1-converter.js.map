{"version":3,"file":"edit-action-to-v1-converter.js","sourceRoot":"","sources":["../../../src/addons/editor/edit-action-to-v1-converter.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Create,\n  Delete,\n  EditorAction,\n  isCreate,\n  isDelete,\n  isMove,\n  isReplace,\n  isSimple,\n  isUpdate,\n  Move,\n  Replace,\n  SimpleAction,\n  Update\n} from '@openscd/core/foundation/deprecated/editor.js';\nimport { Edit, Insert, Remove, Update as UpdateV2 } from '@openscd/core';\nimport { getReference, SCLTag } from '../../foundation.js';\n\n\nexport function convertEditActiontoV1(action: EditorAction): Edit {\n  if (isSimple(action)) {\n    return convertSimpleAction(action);\n  } else {\n    return action.actions.map(convertSimpleAction);\n  }\n}\n\nfunction convertSimpleAction(action: SimpleAction): Edit {\n  if (isCreate(action)) {\n    return convertCreate(action);\n  } else if (isDelete(action)) {\n    return convertDelete(action);\n  } else if (isUpdate(action)) {\n    return convertUpdate(action);\n  } else if (isMove(action)) {\n    return convertMove(action);\n  } else if (isReplace(action)) {\n    return convertReplace(action);\n  }\n\n  throw new Error('Unknown action type');\n}\n\nfunction convertCreate(action: Create): Insert {\n  let reference: Node | null = null;\n  if (\n    action.new.reference === undefined &&\n    action.new.element instanceof Element &&\n    action.new.parent instanceof Element\n  ) {\n    reference = getReference(\n      action.new.parent,\n      <SCLTag>action.new.element.tagName\n    );\n  } else {\n    reference = action.new.reference ?? null; \n  }\n\n  return {\n    parent: action.new.parent,\n    node: action.new.element,\n    reference\n  };\n}\n\nfunction convertDelete(action: Delete): Remove {\n  return {\n    node: action.old.element\n  };\n}\n\nfunction convertUpdate(action: Update): UpdateV2 {\n  const oldAttributesToRemove: Record<string, string | null> = {};\n  Array.from(action.element.attributes).forEach(attr => {\n    oldAttributesToRemove[attr.name] = null;\n  });\n\n  const attributes = {\n    ...oldAttributesToRemove,\n    ...action.newAttributes\n  };\n\n  return {\n    element: action.element,\n    attributes\n  };\n}\n\nfunction convertMove(action: Move): Insert {\n  if (action.new.reference === undefined) {\n    action.new.reference = getReference(\n      action.new.parent,\n      <SCLTag>action.old.element.tagName\n    );\n  }\n\n  return {\n    parent: action.new.parent,\n    node: action.old.element,\n    reference: action.new.reference ?? null\n  }\n}\n\nfunction convertReplace(action: Replace): Edit {\n  const oldChildren = action.old.element.children;\n  // We have to clone the children, because otherwise undoing the action would remove the children from the old element, because append removes the old parent\n  const copiedChildren = Array.from(oldChildren).map(e => e.cloneNode(true));\n\n  const newNode = action.new.element.cloneNode(true) as Element;\n  newNode.append(...Array.from(copiedChildren));\n  const parent = action.old.element.parentElement;\n\n  if (!parent) {\n    throw new Error('Replace action called without parent in old element');\n  }\n\n  const reference = action.old.element.nextSibling;\n\n  const remove: Remove = { node: action.old.element };\n  const insert: Insert = {\n    parent,\n    node: newNode,\n    reference\n  };\n\n  return [\n    remove,\n    insert\n  ];\n}\n"]}