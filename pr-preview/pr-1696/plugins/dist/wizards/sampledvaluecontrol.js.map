{"version":3,"file":"sampledvaluecontrol.js","sourceRoot":"","sources":["../../src/wizards/sampledvaluecontrol.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-list/mwc-list-item.js';\nimport { Checkbox } from '@material/mwc-checkbox';\nimport { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\nimport { SingleSelectedEvent } from '@material/mwc-list/mwc-list-foundation';\n\nimport '@openscd/open-scd/src/filtered-list.js';\nimport '@openscd/open-scd/src/wizard-checkbox.js';\nimport '@openscd/open-scd/src/wizard-select.js';\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport {\n  find,\n  getValue,\n  identity,\n  isPublic,\n  MenuAction,\n  newSubWizardEvent,\n  newWizardEvent,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n  WizardMenuActor,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport {\n  cloneElement,\n  createElement,\n  getUniqueElementName,\n} from '@openscd/xml';\n\nimport {\n  EditorAction,\n  Delete,\n  ComplexAction,\n  newActionEvent,\n} from '@openscd/core/foundation/deprecated/editor.js';\nimport { securityEnabledEnum, smpModEnum } from './foundation/enums.js';\nimport { maxLength, patterns } from './foundation/limits.js';\nimport { editSMvWizard } from './smv.js';\nimport { contentSmvOptsWizard, editSmvOptsWizard } from './smvopts.js';\nimport { editDataSetWizard } from './dataset.js';\nimport { iEDPicker, sampledValueDataPicker } from './foundation/finder.js';\nimport { FinderList } from '@openscd/open-scd/src/finder-list.js';\nimport {\n  getConnectedAP,\n  isAccessPointConnected,\n  uniqueAppId,\n  uniqueMacAddress,\n} from './foundation/scl.js';\nimport { contentGseOrSmvWizard, createAddressElement } from './address.js';\nimport { newFCDA } from './fcda.js';\n\nexport function getSMV(element: Element): Element | null {\n  const cbName = element.getAttribute('name');\n  const iedName = element.closest('IED')?.getAttribute('name');\n  const apName = element.closest('AccessPoint')?.getAttribute('name');\n  const ldInst = element.closest('LDevice')?.getAttribute('inst');\n\n  return (\n    element\n      .closest('SCL')\n      ?.querySelector(\n        `:root > Communication > SubNetwork > ` +\n          `ConnectedAP[iedName=\"${iedName}\"][apName=\"${apName}\"] > ` +\n          `SMV[ldInst=\"${ldInst}\"][cbName=\"${cbName}\"]`\n      ) ?? null\n  );\n}\n\nexport function removeSampledValueControlAction(\n  element: Element\n): ComplexAction | null {\n  if (!element.parentElement) return null;\n\n  const dataSet = element.parentElement!.querySelector(\n    `DataSet[name=\"${element.getAttribute('datSet')}\"]`\n  );\n  const sMV = getSMV(element);\n\n  const singleUse =\n    Array.from(\n      element.parentElement.querySelectorAll<Element>(\n        'ReportControl, GSEControl, SampledValueControl'\n      )\n    ).filter(\n      controlblock =>\n        controlblock.getAttribute('datSet') === dataSet?.getAttribute('name')\n    ).length <= 1;\n\n  const actions: Delete[] = [];\n\n  actions.push({\n    old: {\n      parent: element.parentElement!,\n      element,\n    },\n  });\n\n  if (dataSet && singleUse)\n    actions.push({\n      old: {\n        parent: element.parentElement!,\n        element: dataSet,\n      },\n    });\n\n  if (sMV)\n    actions.push({\n      old: {\n        parent: sMV.parentElement!,\n        element: sMV,\n      },\n    });\n\n  const name = element.getAttribute('name')!;\n  const iedName = element.closest('IED')?.getAttribute('name') ?? '';\n\n  return {\n    title: get('controlblock.action.remove', {\n      type: element.tagName,\n      name,\n      iedName,\n    }),\n    actions,\n  };\n}\n\ninterface ContentOptions {\n  name: string | null;\n  desc: string | null;\n  multicast: string | null;\n  smvID: string | null;\n  smpMod: string | null;\n  smpRate: string | null;\n  nofASDU: string | null;\n  securityEnabled: string | null;\n}\n\nfunction contentSampledValueControlWizard(\n  options: ContentOptions\n): TemplateResult[] {\n  return [\n    html`<wizard-textfield\n      label=\"name\"\n      .maybeValue=${options.name}\n      helper=\"${get('scl.name')}\"\n      required\n      validationMessage=\"${get('textfield.required')}\"\n      pattern=\"${patterns.asciName}\"\n      maxLength=\"${maxLength.cbName}\"\n      dialogInitialFocus\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"desc\"\n      .maybeValue=${options.desc}\n      nullable\n      pattern=\"${patterns.normalizedString}\"\n      helper=\"${get('scl.desc')}\"\n    ></wizard-textfield>`,\n    options.multicast === 'true'\n      ? html``\n      : html`<wizard-checkbox\n          label=\"multicast\"\n          .maybeValue=${options.multicast}\n          helper=\"${get('scl.multicast')}\"\n          disabled\n        ></wizard-checkbox>`,\n    html`<wizard-textfield\n      label=\"smvID\"\n      .maybeValue=${options.smvID}\n      helper=\"${get('scl.id')}\"\n      required\n      validationMessage=\"${get('textfield.nonempty')}\"\n    ></wizard-textfield>`,\n    html`<wizard-select\n      label=\"smpMod\"\n      .maybeValue=${options.smpMod}\n      nullable\n      required\n      helper=\"${get('scl.smpMod')}\"\n      >${smpModEnum.map(\n        option =>\n          html`<mwc-list-item value=\"${option}\">${option}</mwc-list-item>`\n      )}</wizard-select\n    >`,\n    html`<wizard-textfield\n      label=\"smpRate\"\n      .maybeValue=${options.smpRate}\n      helper=\"${get('scl.smpRate')}\"\n      required\n      type=\"number\"\n      min=\"0\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"nofASDU\"\n      .maybeValue=${options.nofASDU}\n      helper=\"${get('scl.nofASDU')}\"\n      required\n      type=\"number\"\n      min=\"0\"\n    ></wizard-textfield>`,\n    html`<wizard-select\n      label=\"securityEnabled\"\n      .maybeValue=${options.securityEnabled}\n      nullable\n      required\n      helper=\"${get('scl.securityEnable')}\"\n      >${securityEnabledEnum.map(\n        option =>\n          html`<mwc-list-item value=\"${option}\">${option}</mwc-list-item>`\n      )}</wizard-select\n    >`,\n  ];\n}\n\nfunction createSampledValueControlAction(parent: Element): WizardActor {\n  return (inputs: WizardInputElement[], wizard: Element) => {\n    // create SampledValueControl element\n    const sampledValueControlAttrs: Record<string, string | null> = {};\n    const sampledValueControlKeys = [\n      'name',\n      'desc',\n      'multicast',\n      'smvID',\n      'smpMod',\n      'smpRate',\n      'nofASDU',\n      'securityEnabled',\n    ];\n    sampledValueControlKeys.forEach(key => {\n      const missingMulticast =\n        key === 'multicast' && !inputs.find(i => i.label === key);\n      if (missingMulticast) {\n        sampledValueControlAttrs['multicast'] = 'true';\n        return;\n      }\n\n      sampledValueControlAttrs[key] = getValue(\n        inputs.find(i => i.label === key)!\n      );\n    });\n\n    // confRef is handled automatically and is 1 for new referenced SampledValueControl\n    sampledValueControlAttrs['confRev'] = '1';\n\n    const dataSetName = sampledValueControlAttrs.name + 'sDataSet';\n    sampledValueControlAttrs['datSet'] = dataSetName;\n\n    const sampledValueControl = createElement(\n      parent.ownerDocument,\n      'SampledValueControl',\n      sampledValueControlAttrs\n    );\n\n    // create SmvOpts element\n    const smvOptsAttrs: Record<string, string | null> = {};\n    const smvOptsKeys = [\n      'refreshTime',\n      'sampleRate',\n      'dataSet',\n      'security',\n      'synchSourceId',\n    ];\n    smvOptsKeys.forEach(key => {\n      smvOptsAttrs[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n\n    const smvOpts = createElement(\n      parent.ownerDocument,\n      'SmvOpts',\n      smvOptsAttrs\n    );\n\n    sampledValueControl.appendChild(smvOpts); // add to SampledValueControl element as child\n\n    // create SMV element with connected AccessPoint\n    let smv: Element | null = null;\n    let smvParent: Element | null = null;\n    if (isAccessPointConnected(parent)) {\n      const instType: boolean =\n        (<Checkbox>wizard.shadowRoot?.querySelector('#instType'))?.checked ??\n        false;\n\n      const smvAttrs: Record<string, string | null> = {};\n      const smvKeys = ['MAC-Address', 'APPID', 'VLAN-ID', 'VLAN-PRIORITY'];\n      smvKeys.forEach(key => {\n        smvAttrs[key] = getValue(inputs.find(i => i.label === key)!);\n      });\n\n      smv = createElement(parent.ownerDocument, 'SMV', {\n        ldInst: parent.closest('LDevice')?.getAttribute('inst') ?? '',\n        cbName: sampledValueControlAttrs['name']!,\n      });\n      const address = createAddressElement(smvAttrs, smv, instType);\n\n      smv.appendChild(address);\n\n      // get `SMV`'s ``ConnectedAP`` parent\n      smvParent = getConnectedAP(parent);\n    }\n\n    //add empty dataset that can be filled later\n    const dataSet = createElement(parent.ownerDocument, 'DataSet', {\n      name: dataSetName,\n    });\n    const finder = wizard.shadowRoot!.querySelector<FinderList>('finder-list');\n    const paths = finder?.paths ?? [];\n\n    for (const path of paths) {\n      const element = newFCDA(parent, path);\n\n      if (!element) continue;\n\n      dataSet.appendChild(element);\n    }\n\n    const complexAction = smv\n      ? {\n          title: 'Create SampledValueControl',\n          actions: [\n            { new: { parent, element: sampledValueControl } },\n            { new: { parent: smvParent!, element: smv } },\n            { new: { parent, element: dataSet } },\n          ],\n        }\n      : {\n          title: 'Create SampledValueControl',\n          actions: [\n            { new: { parent, element: sampledValueControl } },\n            { new: { parent, element: dataSet } },\n          ],\n        };\n\n    return [complexAction];\n  };\n}\n\nexport function createSampledValueControlWizard(ln0OrLn: Element): Wizard {\n  const server = ln0OrLn.closest('Server');\n\n  const name = getUniqueElementName(ln0OrLn, 'SampledValueControl');\n  const desc = null;\n  const multicast = 'true';\n  const smvID = '';\n  const smpMod = 'SmpPerPeriod';\n  const smpRate = '80';\n  const nofASDU = '1';\n  const securityEnabled = null;\n\n  const refreshTime = null;\n  const sampleRate = 'true';\n  const dataSet = 'true';\n  const security = null;\n  const synchSourceId = 'true';\n\n  const hasInstType = true;\n  const attributes: Record<string, string | null> = {\n    'MAC-Address': uniqueMacAddress(ln0OrLn.ownerDocument, 'SMV'),\n    APPID: uniqueAppId(ln0OrLn.ownerDocument),\n    'VLAN-ID': null,\n    'VLAN-PRIORITY': null,\n  };\n\n  return isAccessPointConnected(ln0OrLn)\n    ? [\n        {\n          title: get('wizard.title.add', { tagName: 'SampledValueControl' }),\n          content: contentSampledValueControlWizard({\n            name,\n            desc,\n            multicast,\n            smvID,\n            smpMod,\n            smpRate,\n            nofASDU,\n            securityEnabled,\n          }),\n        },\n        {\n          title: get('wizard.title.add', { tagName: 'SmvOpts' }),\n          content: contentSmvOptsWizard({\n            refreshTime,\n            sampleRate,\n            dataSet,\n            security,\n            synchSourceId,\n          }),\n        },\n        {\n          title: get('wizard.title.add', { tagName: 'SMV' }),\n          content: [...contentGseOrSmvWizard({ hasInstType, attributes })],\n        },\n        {\n          title: get('dataset.fcda.add'),\n          primary: {\n            icon: 'save',\n            label: get('save'),\n            action: createSampledValueControlAction(ln0OrLn),\n          },\n          content: [server ? sampledValueDataPicker(server) : html``],\n        },\n      ]\n    : [\n        {\n          title: get('wizard.title.add', { tagName: 'SampledValueControl' }),\n          content: contentSampledValueControlWizard({\n            name,\n            desc,\n            multicast,\n            smvID,\n            smpMod,\n            smpRate,\n            nofASDU,\n            securityEnabled,\n          }),\n        },\n        {\n          title: get('wizard.title.add', { tagName: 'SmvOpts' }),\n          content: contentSmvOptsWizard({\n            refreshTime,\n            sampleRate,\n            dataSet,\n            security,\n            synchSourceId,\n          }),\n        },\n        {\n          title: get('wizard.title.add', { tagName: 'SMV' }),\n          content: [\n            html`<h3\n              style=\"color: var(--mdc-theme-on-surface);\n                      font-family: 'Roboto', sans-serif;\n                      font-weight: 300;\"\n            >\n              ${get('smv.missingaccp')}\n            </h3>`,\n          ],\n        },\n        {\n          title: get('dataset.fcda.add'),\n          primary: {\n            icon: 'save',\n            label: get('save'),\n            action: createSampledValueControlAction(ln0OrLn),\n          },\n          content: [server ? sampledValueDataPicker(server) : html``],\n        },\n      ];\n}\n\nfunction openSampledValueControlCreateWizard(doc: XMLDocument): WizardActor {\n  return (_: WizardInputElement[], wizard: Element) => {\n    const finder = wizard.shadowRoot?.querySelector<FinderList>('finder-list');\n    const path = finder?.path ?? [];\n\n    if (path.length === 0) return [];\n\n    const [tagName, id] = path.pop()!.split(': ');\n    if (tagName !== 'IED') return [];\n\n    const ied = find(doc, tagName, id);\n    if (!ied) return [];\n\n    const ln0 = ied.querySelector('LN0');\n    if (!ln0) return [];\n\n    return [() => createSampledValueControlWizard(ln0)];\n  };\n}\n\nexport function sampledValueControlParentSelector(doc: XMLDocument): Wizard {\n  return [\n    {\n      title: get('samvpledvaluecontrol.wizard.location'),\n      primary: {\n        icon: '',\n        label: get('next'),\n        action: openSampledValueControlCreateWizard(doc),\n      },\n      content: [iEDPicker(doc)],\n    },\n  ];\n}\n\nfunction prepareSampledValueControlCreateWizard(\n  anyParent: Element\n): WizardActor {\n  return () => {\n    if (anyParent.tagName === 'IED' && anyParent.querySelector('LN0'))\n      return [\n        () => createSampledValueControlWizard(anyParent.querySelector('LN0')!),\n      ];\n\n    return [() => sampledValueControlParentSelector(anyParent.ownerDocument)];\n  };\n}\n\nfunction removeSampledValueControl(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    const complexAction = removeSampledValueControlAction(element);\n    if (complexAction) wizard.dispatchEvent(newActionEvent(complexAction));\n    wizard.dispatchEvent(newWizardEvent());\n  };\n}\n\nfunction openDataSetWizard(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    wizard.dispatchEvent(newSubWizardEvent(() => editDataSetWizard(element)));\n  };\n}\n\nfunction openSmvOptsWizard(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    wizard.dispatchEvent(newSubWizardEvent(() => editSmvOptsWizard(element)));\n  };\n}\n\nfunction openSMvWizard(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    wizard.dispatchEvent(newSubWizardEvent(() => editSMvWizard(element)));\n  };\n}\n\nfunction updateSampledValueControlAction(element: Element): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const attributes: Record<string, string | null> = {};\n    const attributeKeys = [\n      'name',\n      'desc',\n      'multicast',\n      'smvID',\n      'smpMod',\n      'smpRate',\n      'nofASDU',\n      'securityEnabled',\n    ];\n\n    attributeKeys.forEach(key => {\n      const missingMulticast =\n        key === 'multicast' && !inputs.find(i => i.label === key);\n      if (missingMulticast) {\n        attributes['multicast'] = 'true';\n        return;\n      }\n\n      attributes[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n\n    let sampledValueControlAction: EditorAction | null = null;\n    if (\n      attributeKeys.some(key => attributes[key] !== element.getAttribute(key))\n    ) {\n      const newElement = cloneElement(element, attributes);\n      sampledValueControlAction = {\n        old: { element },\n        new: { element: newElement },\n      };\n    }\n\n    const actions: EditorAction[] = [];\n    if (sampledValueControlAction) actions.push(sampledValueControlAction);\n    return actions;\n  };\n}\n\nexport function editSampledValueControlWizard(element: Element): Wizard {\n  const name = element.getAttribute('name');\n  const desc = element.getAttribute('desc');\n  const multicast = element.getAttribute('multicast');\n  const smvID = element.getAttribute('smvID');\n  const smpMod = element.getAttribute('smpMod');\n  const smpRate = element.getAttribute('smpRate');\n  const nofASDU = element.getAttribute('nofASDU');\n  const securityEnabled = element.getAttribute('securityEnabled');\n\n  const sMV = getSMV(element);\n  const smvOpts = element.querySelector('SmvOpts')!;\n\n  const dataSet = element.parentElement?.querySelector(\n    `DataSet[name=\"${element.getAttribute('datSet')}\"]`\n  );\n\n  const menuActions: MenuAction[] = [];\n  menuActions.push({\n    icon: 'delete',\n    label: get('remove'),\n    action: removeSampledValueControl(element),\n  });\n\n  if (dataSet)\n    menuActions.push({\n      icon: 'edit',\n      label: get('scl.DataSet'),\n      action: openDataSetWizard(dataSet),\n    });\n\n  if (smvOpts)\n    menuActions.push({\n      icon: 'edit',\n      label: get('scl.SmvOpts'),\n      action: openSmvOptsWizard(smvOpts),\n    });\n\n  if (sMV)\n    menuActions.push({\n      icon: 'edit',\n      label: get('scl.Communication'),\n      action: openSMvWizard(sMV),\n    });\n\n  return [\n    {\n      title: get('wizard.title.edit', { tagName: element.tagName }),\n      element,\n      primary: {\n        icon: 'save',\n        label: get('save'),\n        action: updateSampledValueControlAction(element),\n      },\n      menuActions,\n      content: [\n        ...contentSampledValueControlWizard({\n          name,\n          desc,\n          multicast,\n          smvID,\n          smpMod,\n          smpRate,\n          nofASDU,\n          securityEnabled: securityEnabled,\n        }),\n      ],\n    },\n  ];\n}\n\nexport function selectSampledValueControlWizard(element: Element): Wizard {\n  const smvControls = Array.from(\n    element.querySelectorAll('SampledValueControl')\n  ).filter(isPublic);\n\n  const primary = element.querySelector('LN0')\n    ? {\n        icon: 'add',\n        label: get('scl.SampledValueControl'),\n        action: prepareSampledValueControlCreateWizard(element),\n      }\n    : undefined;\n\n  return [\n    {\n      title: get('wizard.title.select', { tagName: 'SampledValueControl' }),\n      primary,\n      content: [\n        html`<filtered-list\n          @selected=${(e: SingleSelectedEvent) => {\n            const identity = (<ListItemBase>(<List>e.target).selected).value;\n            const sampledValueControl = find(\n              element,\n              'SampledValueControl',\n              identity\n            );\n            if (!sampledValueControl) return;\n\n            e.target?.dispatchEvent(\n              newSubWizardEvent(() =>\n                editSampledValueControlWizard(sampledValueControl)\n              )\n            );\n          }}\n          >${smvControls.map(\n            smvControl =>\n              html`<mwc-list-item twoline value=\"${identity(smvControl)}\"\n                ><span>${smvControl.getAttribute('name')}</span\n                ><span slot=\"secondary\"\n                  >${identity(smvControl)}</span\n                ></mwc-list-item\n              >`\n          )}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n"]}