{"version":3,"file":"connectedap.js","sourceRoot":"","sources":["../../src/wizards/connectedap.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-checkbox';\nimport '@material/mwc-formfield';\nimport '@material/mwc-list/mwc-list-item';\nimport '@material/mwc-list/mwc-check-list-item';\nimport '@material/mwc-icon';\nimport { Checkbox } from '@material/mwc-checkbox';\nimport { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport '@openscd/open-scd/src/filtered-list.js';\nimport {\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n  compareNames,\n  getValue,\n  isPublic,\n  identity,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport {\n  createElement,\n} from '@openscd/xml';\n\nimport {\n  EditorAction,\n  ComplexAction,\n  SimpleAction,\n} from '@openscd/core/foundation/deprecated/editor.js';\nimport {\n  getTypes,\n  typeMaxLength,\n  typeNullable,\n  typePattern,\n} from './foundation/p-types.js';\nimport {\n  mACAddressGenerator,\n  appIdGenerator,\n} from '@openscd/open-scd/src/foundation/generators.js';\n\ninterface AccessPointDescription {\n  element: Element;\n  connected?: boolean;\n}\n\n/** Sorts connected `AccessPoint`s to the bottom. */\nfunction compareAccessPointConnection(\n  a: AccessPointDescription,\n  b: AccessPointDescription\n): number {\n  if (a.connected !== b.connected) return b.connected ? -1 : 1;\n  return 0;\n}\n\nfunction initSMVElements(\n  doc: XMLDocument,\n  connectedAp: Element,\n  options: {\n    macGeneratorSmv: () => string;\n    appidGeneratorSmv: () => string;\n    unconnectedSampledValueControl: Set<string>;\n  }\n): SimpleAction[] {\n  const actions: SimpleAction[] = [];\n\n  const ied = doc.querySelector(\n    `IED[name=\"${connectedAp.getAttribute('iedName')}\"]`\n  );\n\n  Array.from(ied?.querySelectorAll('SampledValueControl') ?? [])\n    .filter(sampledValueControl => {\n      const id = identity(sampledValueControl) as string;\n\n      if (options.unconnectedSampledValueControl.has(id)) {\n        options.unconnectedSampledValueControl.delete(id);\n        return true;\n      }\n\n      return false;\n    })\n    .forEach(sampledValueControl => {\n      const cbName = sampledValueControl.getAttribute('name');\n      const ldInst =\n        sampledValueControl.closest('LDevice')?.getAttribute('inst') ?? null;\n\n      const sMV = createElement(connectedAp.ownerDocument, 'SMV', {\n        cbName,\n        ldInst,\n      });\n      actions.push({ new: { parent: connectedAp, element: sMV } });\n\n      const address = createElement(connectedAp.ownerDocument, 'Address', {});\n      actions.push({ new: { parent: sMV, element: address } });\n\n      const pMac = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'MAC-Address',\n      });\n      pMac.textContent = options.macGeneratorSmv();\n      actions.push({ new: { parent: address, element: pMac } });\n\n      const pAppId = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'APPID',\n      });\n      pAppId.textContent = options.appidGeneratorSmv();\n      actions.push({ new: { parent: address, element: pAppId } });\n\n      const pVlanId = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'VLAN-ID',\n      });\n      pVlanId.textContent = '000';\n      actions.push({ new: { parent: address, element: pVlanId } });\n\n      const pVlanPrio = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'VLAN-PRIORITY',\n      });\n      pVlanPrio.textContent = '4';\n      actions.push({ new: { parent: address, element: pVlanPrio } });\n    });\n\n  return actions;\n}\n\nfunction initGSEElements(\n  doc: XMLDocument,\n  connectedAp: Element,\n  options: {\n    macGeneratorGse: () => string;\n    appidGeneratorGse: () => string;\n    unconnectedGseControl: Set<string>;\n  }\n): SimpleAction[] {\n  const actions: SimpleAction[] = [];\n\n  const ied = doc.querySelector(\n    `IED[name=\"${connectedAp.getAttribute('iedName')}\"]`\n  );\n\n  Array.from(ied?.querySelectorAll('GSEControl') ?? [])\n    .filter(gseControl => {\n      const id = identity(gseControl) as string;\n\n      if (options.unconnectedGseControl.has(id)) {\n        options.unconnectedGseControl.delete(id);\n        return true;\n      }\n\n      return false;\n    })\n    .forEach(gseControl => {\n      const cbName = gseControl.getAttribute('name');\n      const ldInst =\n        gseControl.closest('LDevice')?.getAttribute('inst') ?? null;\n\n      const gSE = createElement(connectedAp.ownerDocument, 'GSE', {\n        cbName,\n        ldInst,\n      });\n      actions.push({ new: { parent: connectedAp, element: gSE } });\n\n      const address = createElement(connectedAp.ownerDocument, 'Address', {});\n      actions.push({ new: { parent: gSE, element: address } });\n\n      const pMac = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'MAC-Address',\n      });\n      pMac.textContent = options.macGeneratorGse();\n      actions.push({ new: { parent: address, element: pMac } });\n\n      const pAppId = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'APPID',\n      });\n      pAppId.textContent = options.appidGeneratorGse();\n      actions.push({ new: { parent: address, element: pAppId } });\n\n      const pVlanId = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'VLAN-ID',\n      });\n      pVlanId.textContent = '000';\n      actions.push({ new: { parent: address, element: pVlanId } });\n\n      const pVlanPrio = createElement(connectedAp.ownerDocument, 'P', {\n        type: 'VLAN-PRIORITY',\n      });\n      pVlanPrio.textContent = '4';\n      actions.push({ new: { parent: address, element: pVlanPrio } });\n\n      const minTime = createElement(connectedAp.ownerDocument, 'MinTime', {\n        unit: 's',\n        multiplier: 'm',\n      });\n      minTime.textContent = '10';\n      actions.push({ new: { parent: gSE, element: minTime } });\n\n      const maxTime = createElement(connectedAp.ownerDocument, 'MaxTime', {\n        unit: 's',\n        multiplier: 'm',\n      });\n      maxTime.textContent = '10000';\n      actions.push({ new: { parent: gSE, element: maxTime } });\n    });\n\n  return actions;\n}\n\nfunction unconnectedGseControls(doc: XMLDocument): Set<string> {\n  const allGseControl = Array.from(doc.querySelectorAll('GSEControl'));\n\n  const unconnectedGseControl = allGseControl\n    .filter(gseControl => {\n      const iedName = gseControl.closest('IED')?.getAttribute('name');\n      const ldInst = gseControl.closest('LDevice')?.getAttribute('inst');\n      const cbName = gseControl.getAttribute('name');\n\n      return !doc.querySelector(\n        `ConnectedAP[iedName=\"${iedName}\"] ` +\n          `> GSE[ldInst=\"${ldInst}\"][cbName=\"${cbName}\"]`\n      );\n    })\n    .map(gseControl => identity(gseControl) as string);\n\n  const mySet = new Set(unconnectedGseControl);\n  return mySet;\n}\n\nfunction unconnectedSampledValueControls(doc: XMLDocument): Set<string> {\n  const allSmvControl = Array.from(doc.querySelectorAll('SampledValueControl'));\n\n  const unconnectedSmvControl = allSmvControl\n    .filter(gseControl => {\n      const iedName = gseControl.closest('IED')?.getAttribute('name');\n      const ldInst = gseControl.closest('LDevice')?.getAttribute('inst');\n      const cbName = gseControl.getAttribute('name');\n\n      return !doc.querySelector(\n        `ConnectedAP[iedName=\"${iedName}\"] ` +\n          `> SMV[ldInst=\"${ldInst}\"][cbName=\"${cbName}\"]`\n      );\n    })\n    .map(gseControl => identity(gseControl) as string);\n\n  const mySet = new Set(unconnectedSmvControl);\n  return mySet;\n}\n\nfunction createConnectedApAction(parent: Element): WizardActor {\n  return (\n    _: WizardInputElement[],\n    __: Element,\n    list?: List | null\n  ): EditorAction[] => {\n    const doc = parent.ownerDocument;\n\n    // generators ensure unique MAC-Address and APPID across the project\n    const macGeneratorSmv = mACAddressGenerator(doc, 'SMV');\n    const appidGeneratorSmv = appIdGenerator(doc, 'SMV');\n    const macGeneratorGse = mACAddressGenerator(doc, 'GSE');\n    const appidGeneratorGse = appIdGenerator(doc, 'GSE');\n\n    // track GSE and SMV for multiselect access points connection\n    const unconnectedGseControl = unconnectedGseControls(doc);\n    const unconnectedSampledValueControl = unconnectedSampledValueControls(doc);\n\n    if (!list) return [];\n\n    const identities = (<ListItemBase[]>list.selected).map(item => item.value);\n\n    const actions = identities.map(identity => {\n      const [iedName, apName] = identity.split('>');\n      const actions: SimpleAction[] = [];\n\n      const connectedAp = createElement(parent.ownerDocument, 'ConnectedAP', {\n        iedName,\n        apName,\n      });\n      actions.push({ new: { parent, element: connectedAp } });\n      actions.push(\n        ...initSMVElements(doc, connectedAp, {\n          macGeneratorSmv,\n          appidGeneratorSmv,\n          unconnectedSampledValueControl,\n        })\n      );\n      actions.push(\n        ...initGSEElements(doc, connectedAp, {\n          macGeneratorGse,\n          appidGeneratorGse,\n          unconnectedGseControl,\n        })\n      );\n\n      return { title: 'Added ConnectedAP', actions };\n    });\n\n    return actions;\n  };\n}\n\nfunction existConnectedAp(accesspoint: Element): boolean {\n  const iedName = accesspoint.closest('IED')?.getAttribute('name');\n  const apName = accesspoint.getAttribute('name');\n\n  const connAp = accesspoint.ownerDocument.querySelector(\n    `ConnectedAP[iedName=\"${iedName}\"][apName=\"${apName}\"]`\n  );\n\n  return (connAp && isPublic(connAp)) ?? false;\n}\n\n/**\n * Creates a TypeRestriction checkbox for a given ConnectedAP wizard.\n * @param element - The ConnectedAP of the wizard.\n * @returns The checkbox within a formfield.\n */\nexport function createTypeRestrictionCheckbox(\n  element: Element\n): TemplateResult {\n  return html`<mwc-formfield\n    label=\"${get('connectedap.wizard.addschemainsttype')}\"\n    ><mwc-checkbox\n      id=\"typeRestriction\"\n      ?checked=${hasTypeRestriction(element)}\n    ></mwc-checkbox>\n  </mwc-formfield>`;\n}\n\nexport function createPTextField(\n  element: Element,\n  pType: string\n): TemplateResult {\n  return html`<wizard-textfield\n    required\n    label=\"${pType}\"\n    pattern=\"${ifDefined(typePattern[pType])}\"\n    ?nullable=${typeNullable[pType]}\n    .maybeValue=${element.querySelector(`:scope > Address > P[type=\"${pType}\"]`)\n      ?.innerHTML ?? null}\n    maxLength=\"${ifDefined(typeMaxLength[pType])}\"\n  ></wizard-textfield>`;\n}\n\n/** @returns single page  [[`Wizard`]] for creating SCL element ConnectedAP. */\nexport function createConnectedApWizard(element: Element): Wizard {\n  const doc = element.ownerDocument;\n\n  const accessPoints = Array.from(doc.querySelectorAll(':root > IED'))\n    .sort(compareNames)\n    .flatMap(ied =>\n      Array.from(ied.querySelectorAll(':root > IED > AccessPoint'))\n    )\n    .map(accesspoint => {\n      return {\n        element: accesspoint,\n        connected: existConnectedAp(accesspoint),\n      };\n    })\n    .sort(compareAccessPointConnection);\n\n  return [\n    {\n      title: get('wizard.title.add', { tagName: 'ConnectedAP' }),\n      primary: {\n        icon: 'save',\n        label: get('save'),\n        action: createConnectedApAction(element),\n      },\n      content: [\n        html` <filtered-list id=\"apList\" multi\n          >${accessPoints.map(accesspoint => {\n            const id = identity(accesspoint.element);\n\n            return html`<mwc-check-list-item\n              value=\"${id}\"\n              ?disabled=${accesspoint.connected}\n              ><span>${id}</span></mwc-check-list-item\n            >`;\n          })}\n        </filtered-list>`,\n      ],\n    },\n  ];\n}\n\nfunction isEqualAddress(oldAddress: Element, newAddress: Element): boolean {\n  return Array.from(oldAddress.querySelectorAll('Address > P')).every(pType =>\n    newAddress\n      .querySelector(`Address > P[type=\"${pType.getAttribute('type')}\"]`)\n      ?.isEqualNode(pType)\n  );\n}\n\nfunction createAddressElement(\n  inputs: WizardInputElement[],\n  parent: Element,\n  typeRestriction: boolean\n): Element {\n  const element = createElement(parent.ownerDocument, 'Address', {});\n\n  inputs\n    .filter(input => getValue(input) !== null)\n    .forEach(validInput => {\n      const type = validInput.label;\n      const child = createElement(parent.ownerDocument, 'P', { type });\n\n      if (typeRestriction)\n        child.setAttributeNS(\n          'http://www.w3.org/2001/XMLSchema-instance',\n          'xsi:type',\n          'tP_' + type\n        );\n\n      child.textContent = getValue(validInput);\n      element.appendChild(child);\n    });\n\n  return element;\n}\n\nfunction updateConnectedApAction(parent: Element): WizardActor {\n  return (inputs: WizardInputElement[], wizard: Element): EditorAction[] => {\n    const typeRestriction: boolean =\n      (<Checkbox>wizard.shadowRoot?.querySelector('#typeRestriction'))\n        ?.checked ?? false;\n\n    const newAddress = createAddressElement(inputs, parent, typeRestriction);\n    const oldAddress = parent.querySelector('Address');\n\n    const complexAction: ComplexAction = {\n      actions: [],\n      title: get('connectedap.action.addaddress', {\n        iedName: parent.getAttribute('iedName') ?? '',\n        apName: parent.getAttribute('apName') ?? '',\n      }),\n    };\n    if (oldAddress !== null && !isEqualAddress(oldAddress, newAddress)) {\n      //address & child elements P are changed: cannot use replace editor action\n      complexAction.actions.push({\n        old: {\n          parent,\n          element: oldAddress,\n        },\n      });\n      complexAction.actions.push({\n        new: {\n          parent,\n          element: newAddress,\n        },\n      });\n    } else if (oldAddress === null)\n      complexAction.actions.push({\n        new: {\n          parent: parent,\n          element: newAddress,\n        },\n      });\n\n    return complexAction.actions.length ? [complexAction] : [];\n  };\n}\n\nfunction hasTypeRestriction(element: Element): boolean {\n  return Array.from(element.querySelectorAll('Address > P'))\n    .filter(p => isPublic(p))\n    .some(pType => pType.getAttribute('xsi:type'));\n}\n\n/** @returns single page [[`Wizard`]] to edit SCL element ConnectedAP. */\nexport function editConnectedApWizard(element: Element): Wizard {\n  return [\n    {\n      title: get('wizard.title.edit', { tagName: element.tagName }),\n      element,\n      primary: {\n        icon: 'save',\n        label: get('save'),\n        action: updateConnectedApAction(element),\n      },\n      content: [\n        html`${createTypeRestrictionCheckbox(element)}\n        ${getTypes(element).map(\n          pType => html`${createPTextField(element, pType)}`\n        )}`,\n      ],\n    },\n  ];\n}\n"]}