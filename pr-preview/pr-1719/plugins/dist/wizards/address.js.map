{"version":3,"file":"address.js","sourceRoot":"","sources":["../../src/wizards/address.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-html';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-checkbox';\nimport '@material/mwc-formfield';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport {\n  createElement,\n} from '@openscd/xml';\nimport { Create, Delete } from '@openscd/core/foundation/deprecated/editor.js';\nimport { typeNullable, typePattern } from './foundation/p-types.js';\n\ninterface ContentOptions {\n  hasInstType: boolean;\n  attributes: Record<string, string | null>;\n}\n\nexport function contentGseOrSmvWizard(\n  content: ContentOptions\n): TemplateResult[] {\n  return [\n    html`<mwc-formfield label=\"${get('connectedap.wizard.addschemainsttype')}\">\n      <mwc-checkbox\n        id=\"instType\"\n        ?checked=\"${content.hasInstType}\"\n      ></mwc-checkbox>\n    </mwc-formfield>`,\n    html`${Object.entries(content.attributes).map(\n      ([key, value]) =>\n        html`<wizard-textfield\n          label=\"${key}\"\n          ?nullable=${typeNullable[key]}\n          .maybeValue=${value}\n          pattern=\"${ifDefined(typePattern[key])}\"\n          required\n        ></wizard-textfield>`\n    )}`,\n  ];\n}\n\nfunction isEqualAddress(oldAddr: Element, newAdddr: Element): boolean {\n  if (\n    oldAddr.querySelectorAll('P').length !==\n    newAdddr.querySelectorAll('P').length\n  )\n    return false;\n\n  return (\n    Array.from(oldAddr.querySelectorAll('P')).filter(\n      pType =>\n        !newAdddr\n          .querySelector(`Address > P[type=\"${pType.getAttribute('type')}\"]`)\n          ?.isEqualNode(pType)\n    ).length === 0\n  );\n}\n\nexport function createAddressElement(\n  inputs: Record<string, string | null>,\n  parent: Element,\n  instType: boolean\n): Element {\n  const element = createElement(parent.ownerDocument, 'Address', {});\n\n  Object.entries(inputs)\n    .filter(([key, value]) => value !== null)\n    .forEach(([key, value]) => {\n      const type = key;\n      const child = createElement(parent.ownerDocument, 'P', { type });\n      if (instType)\n        child.setAttributeNS(\n          'http://www.w3.org/2001/XMLSchema-instance',\n          'xsi:type',\n          'tP_' + key\n        );\n      child.textContent = value;\n      element.appendChild(child);\n    });\n\n  return element;\n}\n\nexport function updateAddress(\n  parent: Element,\n  inputs: Record<string, string | null>,\n  instType: boolean\n): (Create | Delete)[] {\n  const actions: (Create | Delete)[] = [];\n\n  const newAddress = createAddressElement(inputs, parent, instType);\n  const oldAddress = parent.querySelector('Address');\n\n  if (oldAddress !== null && !isEqualAddress(oldAddress, newAddress)) {\n    //address & child elements P are changed: cannot use replace editor action\n    actions.push({\n      old: {\n        parent: parent,\n        element: oldAddress,\n        reference: oldAddress.nextSibling,\n      },\n    });\n    actions.push({\n      new: {\n        parent: parent,\n        element: newAddress,\n        reference: oldAddress.nextSibling,\n      },\n    });\n  } else if (oldAddress === null)\n    actions.push({\n      new: {\n        parent: parent,\n        element: newAddress,\n      },\n    });\n\n  return actions;\n}\n"]}