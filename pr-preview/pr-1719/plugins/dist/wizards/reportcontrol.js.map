{"version":3,"file":"reportcontrol.js","sourceRoot":"","sources":["../../src/wizards/reportcontrol.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\n\nimport '@material/mwc-button';\nimport '@material/mwc-list/mwc-list-item';\nimport '@material/mwc-list/mwc-check-list-item';\nimport { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\nimport { SingleSelectedEvent } from '@material/mwc-list/mwc-list-foundation';\n\nimport '@openscd/open-scd/src/wizard-checkbox.js';\nimport '@openscd/open-scd/src/wizard-textfield.js';\nimport '@openscd/open-scd/src/wizard-select.js';\nimport '@openscd/open-scd/src/filtered-list.js';\nimport {\n  find,\n  getReference,\n  getValue,\n  identity,\n  isPublic,\n  newSubWizardEvent,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n  WizardMenuActor,\n  MenuAction,\n  newWizardEvent,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport {\n  cloneElement,\n  createElement,\n  getUniqueElementName,\n} from '@openscd/xml';\n\nimport {\n  EditorAction,\n  SimpleAction,\n  Delete,\n  ComplexAction,\n  newActionEvent,\n} from '@openscd/core/foundation/deprecated/editor.js';\nimport { FilteredList } from '@openscd/open-scd/src/filtered-list.js';\nimport { FinderList } from '@openscd/open-scd/src/finder-list.js';\nimport { dataAttributePicker, iEDPicker } from './foundation/finder.js';\nimport { maxLength, patterns } from './foundation/limits.js';\nimport { editDataSetWizard } from './dataset.js';\nimport { newFCDA } from './fcda.js';\nimport { contentOptFieldsWizard, editOptFieldsWizard } from './optfields.js';\nimport { contentTrgOpsWizard, editTrgOpsWizard } from './trgops.js';\nimport { existFcdaReference } from '@openscd/open-scd/src/foundation/scl.js';\n\ninterface ContentOptions {\n  name: string | null;\n  desc: string | null;\n  buffered: string | null;\n  rptID: string | null;\n  indexed: string | null;\n  max: string | null;\n  bufTime: string | null;\n  intgPd: string | null;\n}\n\nfunction contentReportControlWizard(options: ContentOptions): TemplateResult[] {\n  return [\n    html`<wizard-textfield\n      label=\"name\"\n      .maybeValue=${options.name}\n      helper=\"${get('scl.name')}\"\n      required\n      validationMessage=\"${get('textfield.required')}\"\n      pattern=\"${patterns.asciName}\"\n      maxLength=\"${maxLength.cbName}\"\n      dialogInitialFocus\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"desc\"\n      .maybeValue=${options.desc}\n      nullable\n      helper=\"${get('scl.desc')}\"\n    ></wizard-textfield>`,\n    html`<wizard-checkbox\n      label=\"buffered\"\n      .maybeValue=${options.buffered}\n      helper=\"${get('scl.buffered')}\"\n    ></wizard-checkbox>`,\n    html`<wizard-textfield\n      label=\"rptID\"\n      .maybeValue=${options.rptID}\n      nullable\n      required\n      helper=\"${get('report.rptID')}\"\n    ></wizard-textfield>`,\n    html`<wizard-checkbox\n      label=\"indexed\"\n      .maybeValue=${options.indexed}\n      nullable\n      helper=\"${get('scl.indexed')}\"\n    ></wizard-checkbox>`,\n    html`<wizard-textfield\n      label=\"max Clients\"\n      .maybeValue=${options.max}\n      helper=\"${get('scl.maxReport')}\"\n      nullable\n      type=\"number\"\n      suffix=\"#\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"bufTime\"\n      .maybeValue=${options.bufTime}\n      helper=\"${get('scl.bufTime')}\"\n      nullable\n      required\n      type=\"number\"\n      min=\"0\"\n      suffix=\"ms\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"intgPd\"\n      .maybeValue=${options.intgPd}\n      helper=\"${get('scl.intgPd')}\"\n      nullable\n      required\n      type=\"number\"\n      min=\"0\"\n      suffix=\"ms\"\n    ></wizard-textfield>`,\n  ];\n}\n\nfunction createReportControlAction(parent: Element): WizardActor {\n  return (inputs: WizardInputElement[], wizard: Element) => {\n    // create ReportControl element\n    const reportControlAttrs: Record<string, string | null> = {};\n    const reportKeys = [\n      'name',\n      'desc',\n      'buffered',\n      'rptID',\n      'indexed',\n      'bufTime',\n      'intgPd',\n    ];\n    reportKeys.forEach(key => {\n      reportControlAttrs[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n\n    // confRef is handled automatically and is 1 for new referenced ReportControl\n    reportControlAttrs['confRev'] = '1';\n\n    const dataSetName = reportControlAttrs.name + 'sDataSet';\n    reportControlAttrs['datSet'] = dataSetName;\n\n    const reportControl = createElement(\n      parent.ownerDocument,\n      'ReportControl',\n      reportControlAttrs\n    );\n\n    // create OptFields child element\n    const optFieldsAttrs: Record<string, string | null> = {};\n    const optFieldKeys = [\n      'seqNum',\n      'timeStamp',\n      'dataSet',\n      'reasonCode',\n      'dataRef',\n      'entryID',\n      'configRef',\n      'bufOvfl',\n    ];\n    optFieldKeys.forEach(key => {\n      optFieldsAttrs[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n    const optFields = createElement(\n      parent.ownerDocument,\n      'OptFields',\n      optFieldsAttrs\n    );\n\n    // create TrgOps child element\n    const trgOpsAttrs: Record<string, string | null> = {};\n    const trgOpKeys = ['dchg', 'qchg', 'dupd', 'period', 'gi'];\n    trgOpKeys.forEach(key => {\n      trgOpsAttrs[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n    const trgOps = createElement(parent.ownerDocument, 'TrgOps', trgOpsAttrs);\n\n    // create RptEnabled element\n    const max = getValue(inputs.find(i => i.label === 'max Clients')!);\n    const rptEnabled = max\n      ? createElement(parent.ownerDocument, 'RptEnabled', {\n          max,\n        })\n      : null;\n\n    // add all three child elements to ReportControl\n    reportControl.appendChild(trgOps);\n    reportControl.appendChild(optFields);\n    if (rptEnabled) reportControl.appendChild(rptEnabled);\n\n    //add empty dataset that can be filled later\n    const dataSet = createElement(parent.ownerDocument, 'DataSet', {\n      name: dataSetName,\n    });\n    const finder = wizard.shadowRoot!.querySelector<FinderList>('finder-list');\n    const paths = finder?.paths ?? [];\n\n    for (const path of paths) {\n      const element = newFCDA(parent, path);\n\n      if (!element) continue;\n\n      dataSet.appendChild(element);\n    }\n\n    const name = reportControlAttrs['name']!;\n    const iedName = parent.closest('IED')!.getAttribute('name')!;\n\n    const complexAction = {\n      title: get('controlblock.action.add', {\n        type: 'Report',\n        name,\n        iedName,\n      }),\n      actions: [\n        { new: { parent, element: reportControl } },\n        { new: { parent, element: dataSet } },\n      ],\n    };\n    return [complexAction];\n  };\n}\n\nexport function createReportControlWizard(ln0OrLn: Element): Wizard {\n  const server = ln0OrLn.closest('Server');\n\n  const name = getUniqueElementName(ln0OrLn, 'ReportControl');\n  const desc = null;\n  const buffered = 'true';\n  const rptID = null;\n  const indexed = 'true';\n  const max = '5';\n  const bufTime = '100';\n  const intgPd = '1000';\n\n  const dchg = 'true';\n  const qchg = 'true';\n  const dupd = 'true';\n  const period = 'true';\n  const gi = 'false';\n\n  const seqNum = 'true';\n  const timeStamp = 'true';\n  const dataSet = 'true';\n  const reasonCode = 'true';\n  const dataRef = 'true';\n  const entryID = 'true';\n  const configRef = 'true';\n  const bufOvfl = 'true';\n\n  return [\n    {\n      title: get('wizard.title.add', { tagName: 'ReportControl' }),\n      content: contentReportControlWizard({\n        name,\n        desc,\n        buffered,\n        rptID,\n        indexed,\n        max,\n        bufTime,\n        intgPd,\n      }),\n    },\n    {\n      title: get('scl.TrgOps'),\n      content: contentTrgOpsWizard({ dchg, qchg, dupd, period, gi }),\n    },\n    {\n      title: get('scl.OptFields'),\n      content: contentOptFieldsWizard({\n        seqNum,\n        timeStamp,\n        dataSet,\n        reasonCode,\n        dataRef,\n        entryID,\n        configRef,\n        bufOvfl,\n      }),\n    },\n    {\n      title: get('dataset.fcda.add'),\n      primary: {\n        icon: 'save',\n        label: get('save'),\n        action: createReportControlAction(ln0OrLn),\n      },\n\n      content: [server ? dataAttributePicker(server) : html``],\n    },\n  ];\n}\n\nfunction openReportControlCreateWizard(doc: XMLDocument): WizardActor {\n  return (_: WizardInputElement[], wizard: Element) => {\n    const finder = wizard.shadowRoot?.querySelector<FinderList>('finder-list');\n    const path = finder?.path ?? [];\n\n    if (path.length === 0) return [];\n\n    const [tagName, id] = path.pop()!.split(': ');\n    if (tagName !== 'IED') return [];\n\n    const ied = find(doc, tagName, id);\n    if (!ied) return [];\n\n    const ln0 = ied.querySelector('LN0');\n    if (!ln0) return [];\n\n    return [() => createReportControlWizard(ln0)];\n  };\n}\n\nexport function reportControlParentSelector(doc: XMLDocument): Wizard {\n  return [\n    {\n      title: get('report.wizard.location'),\n      primary: {\n        icon: '',\n        label: get('next'),\n        action: openReportControlCreateWizard(doc),\n      },\n      content: [iEDPicker(doc)],\n    },\n  ];\n}\n\nfunction prepareReportControlCreateWizard(anyParent: Element): WizardActor {\n  return () => {\n    if (anyParent.tagName === 'IED' && anyParent.querySelector('LN0'))\n      return [() => createReportControlWizard(anyParent.querySelector('LN0')!)];\n\n    return [() => reportControlParentSelector(anyParent.ownerDocument)];\n  };\n}\n\nexport function removeReportControlAction(\n  element: Element\n): ComplexAction | null {\n  if (!element.parentElement) return null;\n\n  const dataSet = element.parentElement.querySelector(\n    `DataSet[name=\"${element.getAttribute('datSet')}\"]`\n  );\n\n  const isDataSetUsedByThisControlBlockOnly =\n    Array.from(\n      element.parentElement.querySelectorAll<Element>(\n        'ReportControl, GSEControl, SampledValueControl'\n      )\n    ).filter(\n      controlblock =>\n        controlblock.getAttribute('datSet') === dataSet?.getAttribute('name')\n    ).length <= 1;\n\n  const actions: Delete[] = [];\n  actions.push({\n    old: {\n      parent: element.parentElement!,\n      element,\n      reference: element.nextSibling,\n    },\n  });\n\n  if (dataSet && isDataSetUsedByThisControlBlockOnly)\n    actions.push({\n      old: {\n        parent: element.parentElement!,\n        element: dataSet,\n        reference: dataSet.nextSibling,\n      },\n    });\n\n  const name = element.getAttribute('name')!;\n  const iedName = element.closest('IED')?.getAttribute('name') ?? '';\n\n  return {\n    title: get('controlblock.action.remove', { type: 'Report', name, iedName }),\n    actions,\n  };\n}\n\nfunction getRptEnabledAction(\n  olRptEnabled: Element | null,\n  max: string | null,\n  reportCb: Element\n): SimpleAction {\n  if (olRptEnabled === null) {\n    const element = createElement(reportCb.ownerDocument, 'RptEnabled', {\n      max,\n    });\n    return {\n      new: {\n        parent: reportCb,\n        element,\n        reference: getReference(reportCb, 'RptEnabled'),\n      },\n    };\n  }\n\n  const newRptEnabled = <Element>cloneElement(olRptEnabled!, { max });\n  return {\n    old: { element: olRptEnabled! },\n    new: { element: newRptEnabled },\n  };\n}\n\nfunction copyReportControlActions(element: Element): WizardActor {\n  return (_: WizardInputElement[], wizard: Element) => {\n    const doc = element.ownerDocument;\n\n    const iedItems = <ListItemBase[]>(\n      wizard.shadowRoot?.querySelector<FilteredList>('filtered-list')?.selected\n    );\n\n    const complexActions: ComplexAction[] = [];\n    iedItems.forEach(iedItem => {\n      const ied = find(doc, 'IED', iedItem.value);\n      if (!ied) return;\n\n      const sinkLn0 = ied.querySelector('LN0');\n      if (!sinkLn0) return [];\n\n      const sourceDataSet = element.parentElement?.querySelector(\n        `DataSet[name=\"${element.getAttribute('datSet')}\"]`\n      );\n      if (\n        sourceDataSet &&\n        sinkLn0.querySelector(\n          `DataSet[name=\"${sourceDataSet!.getAttribute('name')}\"]`\n        )\n      )\n        return [];\n\n      if (\n        sinkLn0.querySelector(\n          `ReportControl[name=\"${element.getAttribute('name')}\"]`\n        )\n      )\n        return [];\n\n      // clone DataSet and make sure that FCDA is valid in ied\n      const sinkDataSet = <Element>sourceDataSet?.cloneNode(true);\n      Array.from(sinkDataSet.querySelectorAll('FCDA')).forEach(fcda => {\n        if (!existFcdaReference(fcda, ied)) sinkDataSet.removeChild(fcda);\n      });\n      if (sinkDataSet.children.length === 0) return []; // when no data left no copy needed\n\n      const sinkReportControl = <Element>element.cloneNode(true);\n\n      const source = element.closest('IED')?.getAttribute('name');\n      const sink = ied.getAttribute('name');\n\n      complexActions.push({\n        title: `ReportControl copied from ${source} to ${sink}`,\n        actions: [\n          { new: { parent: sinkLn0, element: sinkDataSet } },\n          { new: { parent: sinkLn0, element: sinkReportControl } },\n        ],\n      });\n    });\n\n    return complexActions;\n  };\n}\n\nfunction renderIedListItem(sourceCb: Element, ied: Element): TemplateResult {\n  const sourceDataSet = sourceCb.parentElement?.querySelector(\n    `DataSet[name=\"${sourceCb.getAttribute('datSet')}\"]`\n  );\n\n  const isSourceIed =\n    sourceCb.closest('IED')?.getAttribute('name') === ied.getAttribute('name');\n  const ln0 = ied.querySelector('AccessPoint > Server > LDevice > LN0');\n  const hasCbNameConflict = ln0?.querySelector(\n    `ReportControl[name=\"${sourceCb.getAttribute('name')}\"]`\n  )\n    ? true\n    : false;\n  const hasDataSetConflict = ln0?.querySelector(\n    `DataSet[name=\"${sourceDataSet?.getAttribute('name')}\"]`\n  )\n    ? true\n    : false;\n\n  // clone DataSet and make sure that FCDA is valid in ied\n  const sinkDataSet = <Element>sourceDataSet?.cloneNode(true);\n  Array.from(sinkDataSet.querySelectorAll('FCDA')).forEach(fcda => {\n    if (!existFcdaReference(fcda, ied)) sinkDataSet.removeChild(fcda);\n  });\n  const hasDataMatch = sinkDataSet.children.length > 0;\n\n  const primSpan = ied.getAttribute('name');\n  let secondSpan = '';\n  if (isSourceIed) secondSpan = get('controlblock.hints.source');\n  else if (!ln0) secondSpan = get('controlblock.hints.missingServer');\n  else if (hasDataSetConflict && !isSourceIed)\n    secondSpan = get('controlblock.hints.exist', {\n      type: 'RerportControl',\n      name: sourceCb.getAttribute('name')!,\n    });\n  else if (hasCbNameConflict && !isSourceIed)\n    secondSpan = get('controlblock.hints.exist', {\n      type: 'DataSet',\n      name: sourceCb.getAttribute('name')!,\n    });\n  else if (!hasDataMatch) secondSpan = get('controlblock.hints.noMatchingData');\n  else secondSpan = get('controlBlock.hints.valid');\n\n  return html`<mwc-check-list-item\n    twoline\n    value=\"${identity(ied)}\"\n    ?disabled=${isSourceIed ||\n    !ln0 ||\n    hasCbNameConflict ||\n    hasDataSetConflict ||\n    !hasDataMatch}\n    ><span>${primSpan}</span\n    ><span slot=\"secondary\">${secondSpan}</span></mwc-check-list-item\n  >`;\n}\n\nexport function reportControlCopyToIedSelector(element: Element): Wizard {\n  return [\n    {\n      title: get('report.wizard.location'),\n      primary: {\n        icon: 'save',\n        label: get('save'),\n        action: copyReportControlActions(element),\n      },\n      content: [\n        html`<filtered-list multi\n          >${Array.from(element.ownerDocument.querySelectorAll('IED')).map(\n            ied => renderIedListItem(element, ied)\n          )}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n\nfunction openIedsSelector(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    wizard.dispatchEvent(\n      newSubWizardEvent(() => reportControlCopyToIedSelector(element))\n    );\n  };\n}\n\nexport function removeReportControl(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    const complexAction = removeReportControlAction(element);\n    if (complexAction) wizard.dispatchEvent(newActionEvent(complexAction));\n    wizard.dispatchEvent(newWizardEvent());\n  };\n}\n\nfunction openDataSetWizard(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    wizard.dispatchEvent(newSubWizardEvent(() => editDataSetWizard(element)));\n  };\n}\n\nfunction openTrgOpsWizard(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    wizard.dispatchEvent(newSubWizardEvent(() => editTrgOpsWizard(element)));\n  };\n}\n\nfunction openOptFieldsWizard(element: Element): WizardMenuActor {\n  return (wizard: Element): void => {\n    wizard.dispatchEvent(newSubWizardEvent(() => editOptFieldsWizard(element)));\n  };\n}\n\nfunction updateReportControlAction(element: Element): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const attributes: Record<string, string | null> = {};\n    const attributeKeys = [\n      'name',\n      'desc',\n      'buffered',\n      'rptID',\n      'indexed',\n      'bufTime',\n      'intgPd',\n    ];\n\n    attributeKeys.forEach(key => {\n      attributes[key] = getValue(inputs.find(i => i.label === key)!);\n    });\n\n    let reportControlAction: EditorAction | null = null;\n    if (\n      attributeKeys.some(key => attributes[key] !== element.getAttribute(key))\n    ) {\n      const newElement = cloneElement(element, attributes);\n      reportControlAction = {\n        old: { element },\n        new: { element: newElement },\n      };\n    }\n\n    const max = getValue(inputs.find(i => i.label === 'max Clients')!);\n\n    let rptEnabledAction: SimpleAction | null = null;\n    if (\n      max !== (element.querySelector('RptEnabled')?.getAttribute('max') ?? null)\n    )\n      rptEnabledAction = getRptEnabledAction(\n        element.querySelector('RptEnabled')!,\n        max,\n        element\n      );\n\n    const actions: SimpleAction[] = [];\n    if (reportControlAction) actions.push(reportControlAction);\n    if (rptEnabledAction) actions.push(rptEnabledAction);\n\n    const name = attributes['name']!;\n    const iedName = element.closest('IED')!.getAttribute('name')!;\n    const complexAction = {\n      title: get('controlblock.action.edit', {\n        type: 'Report',\n        name,\n        iedName,\n      }),\n      actions,\n    };\n\n    return actions.length ? [complexAction] : [];\n  };\n}\n\nexport function editReportControlWizard(element: Element): Wizard {\n  const name = element.getAttribute('name');\n  const desc = element.getAttribute('desc');\n  const buffered = element.getAttribute('buffered');\n\n  const rptID = element.getAttribute('rptID');\n\n  const indexed = element.getAttribute('indexed');\n  const max = element.querySelector('RptEnabled')?.getAttribute('max') ?? null;\n  const bufTime = element.getAttribute('bufTime');\n  const intgPd = element.getAttribute('intgPd');\n\n  const trgOps = element.querySelector('TrgOps');\n  const optFields = element.querySelector('OptFields');\n  const dataSet = element.parentElement?.querySelector(\n    `DataSet[name=\"${element.getAttribute('datSet')}\"]`\n  );\n\n  const menuActions: MenuAction[] = [];\n  menuActions.push({\n    icon: 'delete',\n    label: get('remove'),\n    action: removeReportControl(element),\n  });\n\n  if (dataSet)\n    menuActions.push({\n      icon: 'edit',\n      label: get('scl.DataSet'),\n      action: openDataSetWizard(dataSet),\n    });\n\n  if (trgOps)\n    menuActions.push({\n      icon: 'edit',\n      label: get('scl.TrgOps'),\n      action: openTrgOpsWizard(trgOps),\n    });\n\n  if (optFields)\n    menuActions.push({\n      icon: 'edit',\n      label: get('scl.OptFields'),\n      action: openOptFieldsWizard(optFields),\n    });\n\n  menuActions.push({\n    icon: 'copy',\n    label: get('controlblock.label.copy'),\n    action: openIedsSelector(element),\n  });\n\n  return [\n    {\n      title: get('wizard.title.edit', { tagName: element.tagName }),\n      element,\n      primary: {\n        icon: 'save',\n        label: get('save'),\n        action: updateReportControlAction(element),\n      },\n      menuActions,\n      content: [\n        ...contentReportControlWizard({\n          name,\n          desc,\n          buffered,\n          rptID,\n          indexed,\n          max,\n          bufTime,\n          intgPd,\n        }),\n      ],\n    },\n  ];\n}\n\nexport function selectReportControlWizard(element: Element): Wizard {\n  const reportControls = Array.from(\n    element.querySelectorAll('ReportControl')\n  ).filter(isPublic);\n\n  const primary = element.querySelector('LN0')\n    ? {\n        icon: 'add',\n        label: get('Report'),\n        action: prepareReportControlCreateWizard(element),\n      }\n    : undefined;\n\n  return [\n    {\n      title: get('wizard.title.select', { tagName: 'ReportControl' }),\n      primary,\n      content: [\n        html`<filtered-list\n          @selected=${(e: SingleSelectedEvent) => {\n            const identity = (<ListItemBase>(<List>e.target).selected).value;\n            const reportControl = find(element, 'ReportControl', identity);\n            if (!reportControl) return;\n\n            e.target?.dispatchEvent(\n              newSubWizardEvent(() => editReportControlWizard(reportControl))\n            );\n          }}\n          >${reportControls.map(\n            reportControl =>\n              html`<mwc-list-item twoline value=\"${identity(reportControl)}\"\n                ><span>${reportControl.getAttribute('name')}</span\n                ><span slot=\"secondary\"\n                  >${identity(reportControl)}</span\n                ></mwc-list-item\n              >`\n          )}</filtered-list\n        >`,\n      ],\n    },\n  ];\n}\n"]}