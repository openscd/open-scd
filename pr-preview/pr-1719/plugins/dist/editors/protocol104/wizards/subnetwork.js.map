{"version":3,"file":"subnetwork.js","sourceRoot":"","sources":["../../../../src/editors/protocol104/wizards/subnetwork.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAkB,MAAM,aAAa,CAAC;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AACpC,OAAO,EACL,aAAa,EACb,QAAQ,EACR,QAAQ,GAIT,MAAM,qCAAqC,CAAC;AAE7C,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAI7C,OAAO,2CAA2C,CAAC;AAEnD,sFAAsF;AACtF,MAAM,OAAO,GAAG;IACd,IAAI,EAAE,KAAK;IACX,OAAO,EAAE,KAAK;IACd,UAAU,EAAE,GAAG;CAChB,CAAC;AAUF,SAAS,iBAAiB,CAAC,OAAuB;IAChD,OAAO;QACL,IAAI,CAAA;;oBAEY,OAAO,CAAC,IAAI;gBAChB,GAAG,CAAC,8BAA8B,CAAC;;2BAExB,GAAG,CAAC,oBAAoB,CAAC;;yBAE3B;QACrB,IAAI,CAAA;;oBAEY,OAAO,CAAC,IAAI;;gBAEhB,GAAG,CAAC,8BAA8B,CAAC;yBAC1B;QACrB,IAAI,CAAA;;oBAEY,OAAO,CAAC,IAAI;;gBAEhB,GAAG,CAAC,8BAA8B,CAAC;iBAClC,QAAQ,CAAC,gBAAgB;yBACjB;QACrB,IAAI,CAAA;;oBAEY,OAAO,CAAC,OAAO;;;qBAGd,CAAC,IAAI,EAAE,GAAG,CAAC;oBACZ,OAAO,CAAC,UAAU;gBACtB,GAAG,CAAC,iCAAiC,CAAC;;2BAE3B,GAAG,CAAC,oBAAoB,CAAC;iBACnC,QAAQ,CAAC,OAAO;yBACR;KACtB,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,MAAe;IACpD,OAAO,CAAC,MAA4B,EAAkB,EAAE;QACtD,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAE,CAAC,CAAC;QAC7D,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAE,CAAC,CAAC;QAC7D,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAE,CAAC,CAAC;QAC7D,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,SAAS,CAAE,CAAC,CAAC;QACnE,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,SAAS,CAAE,CAAC,CAAC;QAE3E,MAAM,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,aAAa,EAAE,YAAY,EAAE;YAChE,IAAI;YACJ,IAAI;YACJ,IAAI;SACL,CAAC,CAAC;QAEH,IAAI,OAAO,KAAK,IAAI,EAAE;YACpB,MAAM,cAAc,GAAG,aAAa,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,EAAE;gBACpE,IAAI,EAAE,KAAK;gBACX,UAAU;aACX,CAAC,CAAC;YACH,cAAc,CAAC,WAAW,GAAG,OAAO,CAAC;YACrC,OAAO,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;SACrC;QAED,MAAM,MAAM,GAAG;YACb,GAAG,EAAE;gBACH,MAAM;gBACN,OAAO;aACR;SACF,CAAC;QAEF,OAAO,CAAC,MAAM,CAAC,CAAC;IAClB,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,MAAe;IACpD,OAAO;QACL;YACE,KAAK,EAAE,GAAG,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;YACzD,OAAO,EAAE;gBACP,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC;gBACjB,MAAM,EAAE,sBAAsB,CAAC,MAAM,CAAC;aACvC;YACD,OAAO,EAAE,iBAAiB,CAAC;gBACzB,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,EAAE;gBACR,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,UAAU,EAAE,OAAO,CAAC,UAAU;aAC/B,CAAC;SACH;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { html, TemplateResult } from 'lit-element';\nimport { get } from 'lit-translate';\nimport {\n  getMultiplier,\n  getValue,\n  patterns,\n  Wizard,\n  WizardActor,\n  WizardInputElement,\n} from '@openscd/open-scd/src/foundation.js';\n\nimport { createElement } from '@openscd/xml';\n\nimport { EditorAction } from '@openscd/core/foundation/deprecated/editor';\n\nimport '@openscd/open-scd/src/wizard-textfield.js';\n\n/** Initial attribute values suggested for `SubNetwork` creation for the 104 plugin */\nconst initial = {\n  type: '104',\n  bitrate: '100',\n  multiplier: 'M',\n};\n\ninterface ContentOptions {\n  name: string | null;\n  desc: string | null;\n  type: string | null;\n  BitRate: string | null;\n  multiplier: string | null;\n}\n\nfunction contentSubNetwork(options: ContentOptions): TemplateResult[] {\n  return [\n    html`<wizard-textfield\n      label=\"name\"\n      .maybeValue=${options.name}\n      helper=\"${get('subnetwork.wizard.nameHelper')}\"\n      required\n      validationMessage=\"${get('textfield.required')}\"\n      dialogInitialFocus\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"desc\"\n      .maybeValue=${options.desc}\n      nullable\n      helper=\"${get('subnetwork.wizard.descHelper')}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"type\"\n      .maybeValue=${options.type}\n      nullable\n      helper=\"${get('subnetwork.wizard.typeHelper')}\"\n      pattern=\"${patterns.normalizedString}\"\n    ></wizard-textfield>`,\n    html`<wizard-textfield\n      label=\"BitRate\"\n      .maybeValue=${options.BitRate}\n      nullable\n      unit=\"b/s\"\n      .multipliers=${[null, 'M']}\n      .multiplier=${options.multiplier}\n      helper=\"${get('subnetwork.wizard.bitrateHelper')}\"\n      required\n      validationMessage=\"${get('textfield.nonempty')}\"\n      pattern=\"${patterns.decimal}\"\n    ></wizard-textfield>`,\n  ];\n}\n\nexport function createSubNetworkAction(parent: Element): WizardActor {\n  return (inputs: WizardInputElement[]): EditorAction[] => {\n    const name = getValue(inputs.find(i => i.label === 'name')!);\n    const desc = getValue(inputs.find(i => i.label === 'desc')!);\n    const type = getValue(inputs.find(i => i.label === 'type')!);\n    const BitRate = getValue(inputs.find(i => i.label === 'BitRate')!);\n    const multiplier = getMultiplier(inputs.find(i => i.label === 'BitRate')!);\n\n    const element = createElement(parent.ownerDocument, 'SubNetwork', {\n      name,\n      desc,\n      type,\n    });\n\n    if (BitRate !== null) {\n      const bitRateElement = createElement(parent.ownerDocument, 'BitRate', {\n        unit: 'b/s',\n        multiplier,\n      });\n      bitRateElement.textContent = BitRate;\n      element.appendChild(bitRateElement);\n    }\n\n    const action = {\n      new: {\n        parent,\n        element,\n      },\n    };\n\n    return [action];\n  };\n}\n\nexport function createSubNetworkWizard(parent: Element): Wizard {\n  return [\n    {\n      title: get('wizard.title.add', { tagName: 'SubNetwork' }),\n      primary: {\n        icon: 'add',\n        label: get('add'),\n        action: createSubNetworkAction(parent),\n      },\n      content: contentSubNetwork({\n        name: '',\n        desc: '',\n        type: initial.type,\n        BitRate: initial.bitrate,\n        multiplier: initial.multiplier,\n      }),\n    },\n  ];\n}\n"]}